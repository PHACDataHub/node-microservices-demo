apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    istio: security
    release: istio
  name: authorizationpolicies.security.istio.io
spec:
  group: security.istio.io
  names:
    categories:
      - istio-io
      - security-istio-io
    kind: AuthorizationPolicy
    listKind: AuthorizationPolicyList
    plural: authorizationpolicies
    singular: authorizationpolicy
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration for access control on workloads. See more
                details at: https://istio.io/docs/reference/config/security/authorization-policy.html'
              oneOf:
                - not:
                    anyOf:
                      - required:
                          - provider
                - required:
                    - provider
              properties:
                action:
                  description: Optional.
                  enum:
                    - ALLOW
                    - DENY
                    - AUDIT
                    - CUSTOM
                  type: string
                provider:
                  description: Specifies detailed configuration of the CUSTOM action.
                  properties:
                    name:
                      description: Specifies the name of the extension provider.
                      type: string
                  type: object
                rules:
                  description: Optional.
                  items:
                    properties:
                      from:
                        description: Optional.
                        items:
                          properties:
                            source:
                              description: Source specifies the source of a request.
                              properties:
                                ipBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                namespaces:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notIpBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notNamespaces:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notPrincipals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notRemoteIpBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notRequestPrincipals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                principals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                remoteIpBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                requestPrincipals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      to:
                        description: Optional.
                        items:
                          properties:
                            operation:
                              description: Operation specifies the operation of a
                                request.
                              properties:
                                hosts:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                methods:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notHosts:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notMethods:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notPaths:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                ports:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      when:
                        description: Optional.
                        items:
                          properties:
                            key:
                              description: The name of an Istio attribute.
                              type: string
                            notValues:
                              description: Optional.
                              items:
                                type: string
                              type: array
                            values:
                              description: Optional.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                          type: object
                        type: array
                    type: object
                  type: array
                selector:
                  description: Optional.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
                targetRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration for access control on workloads. See more
                details at: https://istio.io/docs/reference/config/security/authorization-policy.html'
              oneOf:
                - not:
                    anyOf:
                      - required:
                          - provider
                - required:
                    - provider
              properties:
                action:
                  description: Optional.
                  enum:
                    - ALLOW
                    - DENY
                    - AUDIT
                    - CUSTOM
                  type: string
                provider:
                  description: Specifies detailed configuration of the CUSTOM action.
                  properties:
                    name:
                      description: Specifies the name of the extension provider.
                      type: string
                  type: object
                rules:
                  description: Optional.
                  items:
                    properties:
                      from:
                        description: Optional.
                        items:
                          properties:
                            source:
                              description: Source specifies the source of a request.
                              properties:
                                ipBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                namespaces:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notIpBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notNamespaces:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notPrincipals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notRemoteIpBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notRequestPrincipals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                principals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                remoteIpBlocks:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                requestPrincipals:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      to:
                        description: Optional.
                        items:
                          properties:
                            operation:
                              description: Operation specifies the operation of a
                                request.
                              properties:
                                hosts:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                methods:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notHosts:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notMethods:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notPaths:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                notPorts:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                paths:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                                ports:
                                  description: Optional.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      when:
                        description: Optional.
                        items:
                          properties:
                            key:
                              description: The name of an Istio attribute.
                              type: string
                            notValues:
                              description: Optional.
                              items:
                                type: string
                              type: array
                            values:
                              description: Optional.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                          type: object
                        type: array
                    type: object
                  type: array
                selector:
                  description: Optional.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
                targetRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: destinationrules.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    shortNames:
      - dr
    singular: destinationrule
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of a service from the service registry
          jsonPath: .spec.host
          name: Host
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting load balancing, outlier detection,
                etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html'
              properties:
                exportTo:
                  description: A list of namespaces to which this destination rule
                    is exported.
                  items:
                    type: string
                  type: array
                host:
                  description: The name of a service from the service registry.
                  type: string
                subsets:
                  description: One or more named sets that represent individual versions
                    of a service.
                  items:
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels apply a filter over the endpoints of a
                          service in the service registry.
                        type: object
                      name:
                        description: Name of the subset.
                        type: string
                      trafficPolicy:
                        description: Traffic policies that apply to this subset.
                        properties:
                          connectionPool:
                            properties:
                              http:
                                description: HTTP connection pool settings.
                                properties:
                                  h2UpgradePolicy:
                                    description: Specify if http1.1 connection should
                                      be upgraded to http2 for the associated destination.
                                    enum:
                                      - DEFAULT
                                      - DO_NOT_UPGRADE
                                      - UPGRADE
                                    type: string
                                  http1MaxPendingRequests:
                                    description: Maximum number of requests that will
                                      be queued while waiting for a ready connection
                                      pool connection.
                                    format: int32
                                    type: integer
                                  http2MaxRequests:
                                    description: Maximum number of active requests
                                      to a destination.
                                    format: int32
                                    type: integer
                                  idleTimeout:
                                    description: The idle timeout for upstream connection
                                      pool connections.
                                    type: string
                                  maxRequestsPerConnection:
                                    description: Maximum number of requests per connection
                                      to a backend.
                                    format: int32
                                    type: integer
                                  maxRetries:
                                    description: Maximum number of retries that can
                                      be outstanding to all hosts in a cluster at
                                      a given time.
                                    format: int32
                                    type: integer
                                  useClientProtocol:
                                    description: If set to true, client protocol will
                                      be preserved while initiating connection to
                                      backend.
                                    type: boolean
                                type: object
                              tcp:
                                description: Settings common to both HTTP and TCP
                                  upstream connections.
                                properties:
                                  connectTimeout:
                                    description: TCP connection timeout.
                                    type: string
                                  maxConnectionDuration:
                                    description: The maximum duration of a connection.
                                    type: string
                                  maxConnections:
                                    description: Maximum number of HTTP1 /TCP connections
                                      to a destination host.
                                    format: int32
                                    type: integer
                                  tcpKeepalive:
                                    description: If set then set SO_KEEPALIVE on the
                                      socket to enable TCP Keepalives.
                                    properties:
                                      interval:
                                        description: The time duration between keep-alive
                                          probes.
                                        type: string
                                      probes:
                                        description: Maximum number of keepalive probes
                                          to send without response before deciding
                                          the connection is dead.
                                        type: integer
                                      time:
                                        description: The time duration a connection
                                          needs to be idle before keep-alive probes
                                          start being sent.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          loadBalancer:
                            description: Settings controlling the load balancer algorithms.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - simple
                                    - required:
                                        - consistentHash
                              - required:
                                  - simple
                              - required:
                                  - consistentHash
                            properties:
                              consistentHash:
                                allOf:
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - httpHeaderName
                                            - required:
                                                - httpCookie
                                            - required:
                                                - useSourceIp
                                            - required:
                                                - httpQueryParameterName
                                      - required:
                                          - httpHeaderName
                                      - required:
                                          - httpCookie
                                      - required:
                                          - useSourceIp
                                      - required:
                                          - httpQueryParameterName
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - ringHash
                                            - required:
                                                - maglev
                                      - required:
                                          - ringHash
                                      - required:
                                          - maglev
                                properties:
                                  httpCookie:
                                    description: Hash based on HTTP cookie.
                                    properties:
                                      name:
                                        description: Name of the cookie.
                                        type: string
                                      path:
                                        description: Path to set for the cookie.
                                        type: string
                                      ttl:
                                        description: Lifetime of the cookie.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  httpHeaderName:
                                    description: Hash based on a specific HTTP header.
                                    type: string
                                  httpQueryParameterName:
                                    description: Hash based on a specific HTTP query
                                      parameter.
                                    type: string
                                  maglev:
                                    description: The Maglev load balancer implements
                                      consistent hashing to backend hosts.
                                    properties:
                                      tableSize:
                                        description: The table size for Maglev hashing.
                                        type: integer
                                    type: object
                                  minimumRingSize:
                                    description: Deprecated.
                                    type: integer
                                  ringHash:
                                    description: The ring/modulo hash load balancer
                                      implements consistent hashing to backend hosts.
                                    properties:
                                      minimumRingSize:
                                        description: The minimum number of virtual
                                          nodes to use for the hash ring.
                                        type: integer
                                    type: object
                                  useSourceIp:
                                    description: Hash based on the source IP address.
                                    type: boolean
                                type: object
                              localityLbSetting:
                                properties:
                                  distribute:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating locality, '/' separated,
                                            e.g.
                                          type: string
                                        to:
                                          additionalProperties:
                                            type: integer
                                          description: Map of upstream localities
                                            to traffic distribution weights.
                                          type: object
                                      type: object
                                    type: array
                                  enabled:
                                    description: enable locality load balancing, this
                                      is DestinationRule-level and will override mesh
                                      wide settings in entirety.
                                    nullable: true
                                    type: boolean
                                  failover:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating region.
                                          type: string
                                        to:
                                          description: Destination region the traffic
                                            will fail over to when endpoints in the
                                            'from' region becomes unhealthy.
                                          type: string
                                      type: object
                                    type: array
                                  failoverPriority:
                                    description: failoverPriority is an ordered list
                                      of labels used to sort endpoints to do priority
                                      based load balancing.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              simple:
                                enum:
                                  - UNSPECIFIED
                                  - LEAST_CONN
                                  - RANDOM
                                  - PASSTHROUGH
                                  - ROUND_ROBIN
                                  - LEAST_REQUEST
                                type: string
                              warmupDurationSecs:
                                description: Represents the warmup duration of Service.
                                type: string
                            type: object
                          outlierDetection:
                            properties:
                              baseEjectionTime:
                                description: Minimum ejection duration.
                                type: string
                              consecutive5xxErrors:
                                description: Number of 5xx errors before a host is
                                  ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveErrors:
                                format: int32
                                type: integer
                              consecutiveGatewayErrors:
                                description: Number of gateway errors before a host
                                  is ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveLocalOriginFailures:
                                description: The number of consecutive locally originated
                                  failures before ejection occurs.
                                nullable: true
                                type: integer
                              interval:
                                description: Time interval between ejection sweep
                                  analysis.
                                type: string
                              maxEjectionPercent:
                                description: Maximum % of hosts in the load balancing
                                  pool for the upstream service that can be ejected.
                                format: int32
                                type: integer
                              minHealthPercent:
                                description: Outlier detection will be enabled as
                                  long as the associated load balancing pool has at
                                  least min_health_percent hosts in healthy mode.
                                format: int32
                                type: integer
                              splitExternalLocalOriginErrors:
                                description: Determines whether to distinguish local
                                  origin failures from external errors.
                                type: boolean
                            type: object
                          portLevelSettings:
                            description: Traffic policies specific to individual ports.
                            items:
                              properties:
                                connectionPool:
                                  properties:
                                    http:
                                      description: HTTP connection pool settings.
                                      properties:
                                        h2UpgradePolicy:
                                          description: Specify if http1.1 connection
                                            should be upgraded to http2 for the associated
                                            destination.
                                          enum:
                                            - DEFAULT
                                            - DO_NOT_UPGRADE
                                            - UPGRADE
                                          type: string
                                        http1MaxPendingRequests:
                                          description: Maximum number of requests
                                            that will be queued while waiting for
                                            a ready connection pool connection.
                                          format: int32
                                          type: integer
                                        http2MaxRequests:
                                          description: Maximum number of active requests
                                            to a destination.
                                          format: int32
                                          type: integer
                                        idleTimeout:
                                          description: The idle timeout for upstream
                                            connection pool connections.
                                          type: string
                                        maxRequestsPerConnection:
                                          description: Maximum number of requests
                                            per connection to a backend.
                                          format: int32
                                          type: integer
                                        maxRetries:
                                          description: Maximum number of retries that
                                            can be outstanding to all hosts in a cluster
                                            at a given time.
                                          format: int32
                                          type: integer
                                        useClientProtocol:
                                          description: If set to true, client protocol
                                            will be preserved while initiating connection
                                            to backend.
                                          type: boolean
                                      type: object
                                    tcp:
                                      description: Settings common to both HTTP and
                                        TCP upstream connections.
                                      properties:
                                        connectTimeout:
                                          description: TCP connection timeout.
                                          type: string
                                        maxConnectionDuration:
                                          description: The maximum duration of a connection.
                                          type: string
                                        maxConnections:
                                          description: Maximum number of HTTP1 /TCP
                                            connections to a destination host.
                                          format: int32
                                          type: integer
                                        tcpKeepalive:
                                          description: If set then set SO_KEEPALIVE
                                            on the socket to enable TCP Keepalives.
                                          properties:
                                            interval:
                                              description: The time duration between
                                                keep-alive probes.
                                              type: string
                                            probes:
                                              description: Maximum number of keepalive
                                                probes to send without response before
                                                deciding the connection is dead.
                                              type: integer
                                            time:
                                              description: The time duration a connection
                                                needs to be idle before keep-alive
                                                probes start being sent.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                loadBalancer:
                                  description: Settings controlling the load balancer
                                    algorithms.
                                  oneOf:
                                    - not:
                                        anyOf:
                                          - required:
                                              - simple
                                          - required:
                                              - consistentHash
                                    - required:
                                        - simple
                                    - required:
                                        - consistentHash
                                  properties:
                                    consistentHash:
                                      allOf:
                                        - oneOf:
                                            - not:
                                                anyOf:
                                                  - required:
                                                      - httpHeaderName
                                                  - required:
                                                      - httpCookie
                                                  - required:
                                                      - useSourceIp
                                                  - required:
                                                      - httpQueryParameterName
                                            - required:
                                                - httpHeaderName
                                            - required:
                                                - httpCookie
                                            - required:
                                                - useSourceIp
                                            - required:
                                                - httpQueryParameterName
                                        - oneOf:
                                            - not:
                                                anyOf:
                                                  - required:
                                                      - ringHash
                                                  - required:
                                                      - maglev
                                            - required:
                                                - ringHash
                                            - required:
                                                - maglev
                                      properties:
                                        httpCookie:
                                          description: Hash based on HTTP cookie.
                                          properties:
                                            name:
                                              description: Name of the cookie.
                                              type: string
                                            path:
                                              description: Path to set for the cookie.
                                              type: string
                                            ttl:
                                              description: Lifetime of the cookie.
                                              type: string
                                          required:
                                            - name
                                          type: object
                                        httpHeaderName:
                                          description: Hash based on a specific HTTP
                                            header.
                                          type: string
                                        httpQueryParameterName:
                                          description: Hash based on a specific HTTP
                                            query parameter.
                                          type: string
                                        maglev:
                                          description: The Maglev load balancer implements
                                            consistent hashing to backend hosts.
                                          properties:
                                            tableSize:
                                              description: The table size for Maglev
                                                hashing.
                                              type: integer
                                          type: object
                                        minimumRingSize:
                                          description: Deprecated.
                                          type: integer
                                        ringHash:
                                          description: The ring/modulo hash load balancer
                                            implements consistent hashing to backend
                                            hosts.
                                          properties:
                                            minimumRingSize:
                                              description: The minimum number of virtual
                                                nodes to use for the hash ring.
                                              type: integer
                                          type: object
                                        useSourceIp:
                                          description: Hash based on the source IP
                                            address.
                                          type: boolean
                                      type: object
                                    localityLbSetting:
                                      properties:
                                        distribute:
                                          description: 'Optional: only one of distribute,
                                            failover or failoverPriority can be set.'
                                          items:
                                            properties:
                                              from:
                                                description: Originating locality,
                                                  '/' separated, e.g.
                                                type: string
                                              to:
                                                additionalProperties:
                                                  type: integer
                                                description: Map of upstream localities
                                                  to traffic distribution weights.
                                                type: object
                                            type: object
                                          type: array
                                        enabled:
                                          description: enable locality load balancing,
                                            this is DestinationRule-level and will
                                            override mesh wide settings in entirety.
                                          nullable: true
                                          type: boolean
                                        failover:
                                          description: 'Optional: only one of distribute,
                                            failover or failoverPriority can be set.'
                                          items:
                                            properties:
                                              from:
                                                description: Originating region.
                                                type: string
                                              to:
                                                description: Destination region the
                                                  traffic will fail over to when endpoints
                                                  in the 'from' region becomes unhealthy.
                                                type: string
                                            type: object
                                          type: array
                                        failoverPriority:
                                          description: failoverPriority is an ordered
                                            list of labels used to sort endpoints
                                            to do priority based load balancing.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    simple:
                                      enum:
                                        - UNSPECIFIED
                                        - LEAST_CONN
                                        - RANDOM
                                        - PASSTHROUGH
                                        - ROUND_ROBIN
                                        - LEAST_REQUEST
                                      type: string
                                    warmupDurationSecs:
                                      description: Represents the warmup duration
                                        of Service.
                                      type: string
                                  type: object
                                outlierDetection:
                                  properties:
                                    baseEjectionTime:
                                      description: Minimum ejection duration.
                                      type: string
                                    consecutive5xxErrors:
                                      description: Number of 5xx errors before a host
                                        is ejected from the connection pool.
                                      nullable: true
                                      type: integer
                                    consecutiveErrors:
                                      format: int32
                                      type: integer
                                    consecutiveGatewayErrors:
                                      description: Number of gateway errors before
                                        a host is ejected from the connection pool.
                                      nullable: true
                                      type: integer
                                    consecutiveLocalOriginFailures:
                                      description: The number of consecutive locally
                                        originated failures before ejection occurs.
                                      nullable: true
                                      type: integer
                                    interval:
                                      description: Time interval between ejection
                                        sweep analysis.
                                      type: string
                                    maxEjectionPercent:
                                      description: Maximum % of hosts in the load
                                        balancing pool for the upstream service that
                                        can be ejected.
                                      format: int32
                                      type: integer
                                    minHealthPercent:
                                      description: Outlier detection will be enabled
                                        as long as the associated load balancing pool
                                        has at least min_health_percent hosts in healthy
                                        mode.
                                      format: int32
                                      type: integer
                                    splitExternalLocalOriginErrors:
                                      description: Determines whether to distinguish
                                        local origin failures from external errors.
                                      type: boolean
                                  type: object
                                port:
                                  description: Specifies the number of a port on the
                                    destination service on which this policy is being
                                    applied.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                tls:
                                  description: TLS related settings for connections
                                    to the upstream service.
                                  properties:
                                    caCertificates:
                                      description: 'OPTIONAL: The path to the file
                                        containing certificate authority certificates
                                        to use in verifying a presented server certificate.'
                                      type: string
                                    clientCertificate:
                                      description: REQUIRED if mode is `MUTUAL`.
                                      type: string
                                    credentialName:
                                      description: The name of the secret that holds
                                        the TLS certs for the client including the
                                        CA certificates.
                                      type: string
                                    insecureSkipVerify:
                                      description: InsecureSkipVerify specifies whether
                                        the proxy should skip verifying the CA signature
                                        and SAN for the server certificate corresponding
                                        to the host.
                                      nullable: true
                                      type: boolean
                                    mode:
                                      description: Indicates whether connections to
                                        this port should be secured using TLS.
                                      enum:
                                        - DISABLE
                                        - SIMPLE
                                        - MUTUAL
                                        - ISTIO_MUTUAL
                                      type: string
                                    privateKey:
                                      description: REQUIRED if mode is `MUTUAL`.
                                      type: string
                                    sni:
                                      description: SNI string to present to the server
                                        during TLS handshake.
                                      type: string
                                    subjectAltNames:
                                      description: A list of alternate names to verify
                                        the subject identity in the certificate.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            type: array
                          tls:
                            description: TLS related settings for connections to the
                              upstream service.
                            properties:
                              caCertificates:
                                description: 'OPTIONAL: The path to the file containing
                                  certificate authority certificates to use in verifying
                                  a presented server certificate.'
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: The name of the secret that holds the
                                  TLS certs for the client including the CA certificates.
                                type: string
                              insecureSkipVerify:
                                description: InsecureSkipVerify specifies whether
                                  the proxy should skip verifying the CA signature
                                  and SAN for the server certificate corresponding
                                  to the host.
                                nullable: true
                                type: boolean
                              mode:
                                description: Indicates whether connections to this
                                  port should be secured using TLS.
                                enum:
                                  - DISABLE
                                  - SIMPLE
                                  - MUTUAL
                                  - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: A list of alternate names to verify the
                                  subject identity in the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                          tunnel:
                            description: Configuration of tunneling TCP over other
                              transport or application layers for the host configured
                              in the DestinationRule.
                            properties:
                              protocol:
                                description: Specifies which protocol to use for tunneling
                                  the downstream connection.
                                type: string
                              targetHost:
                                description: Specifies a host to which the downstream
                                  connection is tunneled.
                                type: string
                              targetPort:
                                description: Specifies a port to which the downstream
                                  connection is tunneled.
                                type: integer
                            required:
                              - targetHost
                              - targetPort
                            type: object
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                trafficPolicy:
                  description: Traffic policies to apply (load balancing policy, connection
                    pool sizes, outlier detection).
                  properties:
                    connectionPool:
                      properties:
                        http:
                          description: HTTP connection pool settings.
                          properties:
                            h2UpgradePolicy:
                              description: Specify if http1.1 connection should be
                                upgraded to http2 for the associated destination.
                              enum:
                                - DEFAULT
                                - DO_NOT_UPGRADE
                                - UPGRADE
                              type: string
                            http1MaxPendingRequests:
                              description: Maximum number of requests that will be
                                queued while waiting for a ready connection pool connection.
                              format: int32
                              type: integer
                            http2MaxRequests:
                              description: Maximum number of active requests to a
                                destination.
                              format: int32
                              type: integer
                            idleTimeout:
                              description: The idle timeout for upstream connection
                                pool connections.
                              type: string
                            maxRequestsPerConnection:
                              description: Maximum number of requests per connection
                                to a backend.
                              format: int32
                              type: integer
                            maxRetries:
                              description: Maximum number of retries that can be outstanding
                                to all hosts in a cluster at a given time.
                              format: int32
                              type: integer
                            useClientProtocol:
                              description: If set to true, client protocol will be
                                preserved while initiating connection to backend.
                              type: boolean
                          type: object
                        tcp:
                          description: Settings common to both HTTP and TCP upstream
                            connections.
                          properties:
                            connectTimeout:
                              description: TCP connection timeout.
                              type: string
                            maxConnectionDuration:
                              description: The maximum duration of a connection.
                              type: string
                            maxConnections:
                              description: Maximum number of HTTP1 /TCP connections
                                to a destination host.
                              format: int32
                              type: integer
                            tcpKeepalive:
                              description: If set then set SO_KEEPALIVE on the socket
                                to enable TCP Keepalives.
                              properties:
                                interval:
                                  description: The time duration between keep-alive
                                    probes.
                                  type: string
                                probes:
                                  description: Maximum number of keepalive probes
                                    to send without response before deciding the connection
                                    is dead.
                                  type: integer
                                time:
                                  description: The time duration a connection needs
                                    to be idle before keep-alive probes start being
                                    sent.
                                  type: string
                              type: object
                          type: object
                      type: object
                    loadBalancer:
                      description: Settings controlling the load balancer algorithms.
                      oneOf:
                        - not:
                            anyOf:
                              - required:
                                  - simple
                              - required:
                                  - consistentHash
                        - required:
                            - simple
                        - required:
                            - consistentHash
                      properties:
                        consistentHash:
                          allOf:
                            - oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - httpHeaderName
                                      - required:
                                          - httpCookie
                                      - required:
                                          - useSourceIp
                                      - required:
                                          - httpQueryParameterName
                                - required:
                                    - httpHeaderName
                                - required:
                                    - httpCookie
                                - required:
                                    - useSourceIp
                                - required:
                                    - httpQueryParameterName
                            - oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - ringHash
                                      - required:
                                          - maglev
                                - required:
                                    - ringHash
                                - required:
                                    - maglev
                          properties:
                            httpCookie:
                              description: Hash based on HTTP cookie.
                              properties:
                                name:
                                  description: Name of the cookie.
                                  type: string
                                path:
                                  description: Path to set for the cookie.
                                  type: string
                                ttl:
                                  description: Lifetime of the cookie.
                                  type: string
                              required:
                                - name
                              type: object
                            httpHeaderName:
                              description: Hash based on a specific HTTP header.
                              type: string
                            httpQueryParameterName:
                              description: Hash based on a specific HTTP query parameter.
                              type: string
                            maglev:
                              description: The Maglev load balancer implements consistent
                                hashing to backend hosts.
                              properties:
                                tableSize:
                                  description: The table size for Maglev hashing.
                                  type: integer
                              type: object
                            minimumRingSize:
                              description: Deprecated.
                              type: integer
                            ringHash:
                              description: The ring/modulo hash load balancer implements
                                consistent hashing to backend hosts.
                              properties:
                                minimumRingSize:
                                  description: The minimum number of virtual nodes
                                    to use for the hash ring.
                                  type: integer
                              type: object
                            useSourceIp:
                              description: Hash based on the source IP address.
                              type: boolean
                          type: object
                        localityLbSetting:
                          properties:
                            distribute:
                              description: 'Optional: only one of distribute, failover
                                or failoverPriority can be set.'
                              items:
                                properties:
                                  from:
                                    description: Originating locality, '/' separated,
                                      e.g.
                                    type: string
                                  to:
                                    additionalProperties:
                                      type: integer
                                    description: Map of upstream localities to traffic
                                      distribution weights.
                                    type: object
                                type: object
                              type: array
                            enabled:
                              description: enable locality load balancing, this is
                                DestinationRule-level and will override mesh wide
                                settings in entirety.
                              nullable: true
                              type: boolean
                            failover:
                              description: 'Optional: only one of distribute, failover
                                or failoverPriority can be set.'
                              items:
                                properties:
                                  from:
                                    description: Originating region.
                                    type: string
                                  to:
                                    description: Destination region the traffic will
                                      fail over to when endpoints in the 'from' region
                                      becomes unhealthy.
                                    type: string
                                type: object
                              type: array
                            failoverPriority:
                              description: failoverPriority is an ordered list of
                                labels used to sort endpoints to do priority based
                                load balancing.
                              items:
                                type: string
                              type: array
                          type: object
                        simple:
                          enum:
                            - UNSPECIFIED
                            - LEAST_CONN
                            - RANDOM
                            - PASSTHROUGH
                            - ROUND_ROBIN
                            - LEAST_REQUEST
                          type: string
                        warmupDurationSecs:
                          description: Represents the warmup duration of Service.
                          type: string
                      type: object
                    outlierDetection:
                      properties:
                        baseEjectionTime:
                          description: Minimum ejection duration.
                          type: string
                        consecutive5xxErrors:
                          description: Number of 5xx errors before a host is ejected
                            from the connection pool.
                          nullable: true
                          type: integer
                        consecutiveErrors:
                          format: int32
                          type: integer
                        consecutiveGatewayErrors:
                          description: Number of gateway errors before a host is ejected
                            from the connection pool.
                          nullable: true
                          type: integer
                        consecutiveLocalOriginFailures:
                          description: The number of consecutive locally originated
                            failures before ejection occurs.
                          nullable: true
                          type: integer
                        interval:
                          description: Time interval between ejection sweep analysis.
                          type: string
                        maxEjectionPercent:
                          description: Maximum % of hosts in the load balancing pool
                            for the upstream service that can be ejected.
                          format: int32
                          type: integer
                        minHealthPercent:
                          description: Outlier detection will be enabled as long as
                            the associated load balancing pool has at least min_health_percent
                            hosts in healthy mode.
                          format: int32
                          type: integer
                        splitExternalLocalOriginErrors:
                          description: Determines whether to distinguish local origin
                            failures from external errors.
                          type: boolean
                      type: object
                    portLevelSettings:
                      description: Traffic policies specific to individual ports.
                      items:
                        properties:
                          connectionPool:
                            properties:
                              http:
                                description: HTTP connection pool settings.
                                properties:
                                  h2UpgradePolicy:
                                    description: Specify if http1.1 connection should
                                      be upgraded to http2 for the associated destination.
                                    enum:
                                      - DEFAULT
                                      - DO_NOT_UPGRADE
                                      - UPGRADE
                                    type: string
                                  http1MaxPendingRequests:
                                    description: Maximum number of requests that will
                                      be queued while waiting for a ready connection
                                      pool connection.
                                    format: int32
                                    type: integer
                                  http2MaxRequests:
                                    description: Maximum number of active requests
                                      to a destination.
                                    format: int32
                                    type: integer
                                  idleTimeout:
                                    description: The idle timeout for upstream connection
                                      pool connections.
                                    type: string
                                  maxRequestsPerConnection:
                                    description: Maximum number of requests per connection
                                      to a backend.
                                    format: int32
                                    type: integer
                                  maxRetries:
                                    description: Maximum number of retries that can
                                      be outstanding to all hosts in a cluster at
                                      a given time.
                                    format: int32
                                    type: integer
                                  useClientProtocol:
                                    description: If set to true, client protocol will
                                      be preserved while initiating connection to
                                      backend.
                                    type: boolean
                                type: object
                              tcp:
                                description: Settings common to both HTTP and TCP
                                  upstream connections.
                                properties:
                                  connectTimeout:
                                    description: TCP connection timeout.
                                    type: string
                                  maxConnectionDuration:
                                    description: The maximum duration of a connection.
                                    type: string
                                  maxConnections:
                                    description: Maximum number of HTTP1 /TCP connections
                                      to a destination host.
                                    format: int32
                                    type: integer
                                  tcpKeepalive:
                                    description: If set then set SO_KEEPALIVE on the
                                      socket to enable TCP Keepalives.
                                    properties:
                                      interval:
                                        description: The time duration between keep-alive
                                          probes.
                                        type: string
                                      probes:
                                        description: Maximum number of keepalive probes
                                          to send without response before deciding
                                          the connection is dead.
                                        type: integer
                                      time:
                                        description: The time duration a connection
                                          needs to be idle before keep-alive probes
                                          start being sent.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          loadBalancer:
                            description: Settings controlling the load balancer algorithms.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - simple
                                    - required:
                                        - consistentHash
                              - required:
                                  - simple
                              - required:
                                  - consistentHash
                            properties:
                              consistentHash:
                                allOf:
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - httpHeaderName
                                            - required:
                                                - httpCookie
                                            - required:
                                                - useSourceIp
                                            - required:
                                                - httpQueryParameterName
                                      - required:
                                          - httpHeaderName
                                      - required:
                                          - httpCookie
                                      - required:
                                          - useSourceIp
                                      - required:
                                          - httpQueryParameterName
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - ringHash
                                            - required:
                                                - maglev
                                      - required:
                                          - ringHash
                                      - required:
                                          - maglev
                                properties:
                                  httpCookie:
                                    description: Hash based on HTTP cookie.
                                    properties:
                                      name:
                                        description: Name of the cookie.
                                        type: string
                                      path:
                                        description: Path to set for the cookie.
                                        type: string
                                      ttl:
                                        description: Lifetime of the cookie.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  httpHeaderName:
                                    description: Hash based on a specific HTTP header.
                                    type: string
                                  httpQueryParameterName:
                                    description: Hash based on a specific HTTP query
                                      parameter.
                                    type: string
                                  maglev:
                                    description: The Maglev load balancer implements
                                      consistent hashing to backend hosts.
                                    properties:
                                      tableSize:
                                        description: The table size for Maglev hashing.
                                        type: integer
                                    type: object
                                  minimumRingSize:
                                    description: Deprecated.
                                    type: integer
                                  ringHash:
                                    description: The ring/modulo hash load balancer
                                      implements consistent hashing to backend hosts.
                                    properties:
                                      minimumRingSize:
                                        description: The minimum number of virtual
                                          nodes to use for the hash ring.
                                        type: integer
                                    type: object
                                  useSourceIp:
                                    description: Hash based on the source IP address.
                                    type: boolean
                                type: object
                              localityLbSetting:
                                properties:
                                  distribute:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating locality, '/' separated,
                                            e.g.
                                          type: string
                                        to:
                                          additionalProperties:
                                            type: integer
                                          description: Map of upstream localities
                                            to traffic distribution weights.
                                          type: object
                                      type: object
                                    type: array
                                  enabled:
                                    description: enable locality load balancing, this
                                      is DestinationRule-level and will override mesh
                                      wide settings in entirety.
                                    nullable: true
                                    type: boolean
                                  failover:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating region.
                                          type: string
                                        to:
                                          description: Destination region the traffic
                                            will fail over to when endpoints in the
                                            'from' region becomes unhealthy.
                                          type: string
                                      type: object
                                    type: array
                                  failoverPriority:
                                    description: failoverPriority is an ordered list
                                      of labels used to sort endpoints to do priority
                                      based load balancing.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              simple:
                                enum:
                                  - UNSPECIFIED
                                  - LEAST_CONN
                                  - RANDOM
                                  - PASSTHROUGH
                                  - ROUND_ROBIN
                                  - LEAST_REQUEST
                                type: string
                              warmupDurationSecs:
                                description: Represents the warmup duration of Service.
                                type: string
                            type: object
                          outlierDetection:
                            properties:
                              baseEjectionTime:
                                description: Minimum ejection duration.
                                type: string
                              consecutive5xxErrors:
                                description: Number of 5xx errors before a host is
                                  ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveErrors:
                                format: int32
                                type: integer
                              consecutiveGatewayErrors:
                                description: Number of gateway errors before a host
                                  is ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveLocalOriginFailures:
                                description: The number of consecutive locally originated
                                  failures before ejection occurs.
                                nullable: true
                                type: integer
                              interval:
                                description: Time interval between ejection sweep
                                  analysis.
                                type: string
                              maxEjectionPercent:
                                description: Maximum % of hosts in the load balancing
                                  pool for the upstream service that can be ejected.
                                format: int32
                                type: integer
                              minHealthPercent:
                                description: Outlier detection will be enabled as
                                  long as the associated load balancing pool has at
                                  least min_health_percent hosts in healthy mode.
                                format: int32
                                type: integer
                              splitExternalLocalOriginErrors:
                                description: Determines whether to distinguish local
                                  origin failures from external errors.
                                type: boolean
                            type: object
                          port:
                            description: Specifies the number of a port on the destination
                              service on which this policy is being applied.
                            properties:
                              number:
                                type: integer
                            type: object
                          tls:
                            description: TLS related settings for connections to the
                              upstream service.
                            properties:
                              caCertificates:
                                description: 'OPTIONAL: The path to the file containing
                                  certificate authority certificates to use in verifying
                                  a presented server certificate.'
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: The name of the secret that holds the
                                  TLS certs for the client including the CA certificates.
                                type: string
                              insecureSkipVerify:
                                description: InsecureSkipVerify specifies whether
                                  the proxy should skip verifying the CA signature
                                  and SAN for the server certificate corresponding
                                  to the host.
                                nullable: true
                                type: boolean
                              mode:
                                description: Indicates whether connections to this
                                  port should be secured using TLS.
                                enum:
                                  - DISABLE
                                  - SIMPLE
                                  - MUTUAL
                                  - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: A list of alternate names to verify the
                                  subject identity in the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                    tls:
                      description: TLS related settings for connections to the upstream
                        service.
                      properties:
                        caCertificates:
                          description: 'OPTIONAL: The path to the file containing
                            certificate authority certificates to use in verifying
                            a presented server certificate.'
                          type: string
                        clientCertificate:
                          description: REQUIRED if mode is `MUTUAL`.
                          type: string
                        credentialName:
                          description: The name of the secret that holds the TLS certs
                            for the client including the CA certificates.
                          type: string
                        insecureSkipVerify:
                          description: InsecureSkipVerify specifies whether the proxy
                            should skip verifying the CA signature and SAN for the
                            server certificate corresponding to the host.
                          nullable: true
                          type: boolean
                        mode:
                          description: Indicates whether connections to this port
                            should be secured using TLS.
                          enum:
                            - DISABLE
                            - SIMPLE
                            - MUTUAL
                            - ISTIO_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `MUTUAL`.
                          type: string
                        sni:
                          description: SNI string to present to the server during
                            TLS handshake.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate.
                          items:
                            type: string
                          type: array
                      type: object
                    tunnel:
                      description: Configuration of tunneling TCP over other transport
                        or application layers for the host configured in the DestinationRule.
                      properties:
                        protocol:
                          description: Specifies which protocol to use for tunneling
                            the downstream connection.
                          type: string
                        targetHost:
                          description: Specifies a host to which the downstream connection
                            is tunneled.
                          type: string
                        targetPort:
                          description: Specifies a port to which the downstream connection
                            is tunneled.
                          type: integer
                      required:
                        - targetHost
                        - targetPort
                      type: object
                  type: object
                workloadSelector:
                  description: Criteria used to select the specific set of pods/VMs
                    on which this `DestinationRule` configuration should be applied.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
              required:
                - host
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The name of a service from the service registry
          jsonPath: .spec.host
          name: Host
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting load balancing, outlier detection,
                etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html'
              properties:
                exportTo:
                  description: A list of namespaces to which this destination rule
                    is exported.
                  items:
                    type: string
                  type: array
                host:
                  description: The name of a service from the service registry.
                  type: string
                subsets:
                  description: One or more named sets that represent individual versions
                    of a service.
                  items:
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels apply a filter over the endpoints of a
                          service in the service registry.
                        type: object
                      name:
                        description: Name of the subset.
                        type: string
                      trafficPolicy:
                        description: Traffic policies that apply to this subset.
                        properties:
                          connectionPool:
                            properties:
                              http:
                                description: HTTP connection pool settings.
                                properties:
                                  h2UpgradePolicy:
                                    description: Specify if http1.1 connection should
                                      be upgraded to http2 for the associated destination.
                                    enum:
                                      - DEFAULT
                                      - DO_NOT_UPGRADE
                                      - UPGRADE
                                    type: string
                                  http1MaxPendingRequests:
                                    description: Maximum number of requests that will
                                      be queued while waiting for a ready connection
                                      pool connection.
                                    format: int32
                                    type: integer
                                  http2MaxRequests:
                                    description: Maximum number of active requests
                                      to a destination.
                                    format: int32
                                    type: integer
                                  idleTimeout:
                                    description: The idle timeout for upstream connection
                                      pool connections.
                                    type: string
                                  maxRequestsPerConnection:
                                    description: Maximum number of requests per connection
                                      to a backend.
                                    format: int32
                                    type: integer
                                  maxRetries:
                                    description: Maximum number of retries that can
                                      be outstanding to all hosts in a cluster at
                                      a given time.
                                    format: int32
                                    type: integer
                                  useClientProtocol:
                                    description: If set to true, client protocol will
                                      be preserved while initiating connection to
                                      backend.
                                    type: boolean
                                type: object
                              tcp:
                                description: Settings common to both HTTP and TCP
                                  upstream connections.
                                properties:
                                  connectTimeout:
                                    description: TCP connection timeout.
                                    type: string
                                  maxConnectionDuration:
                                    description: The maximum duration of a connection.
                                    type: string
                                  maxConnections:
                                    description: Maximum number of HTTP1 /TCP connections
                                      to a destination host.
                                    format: int32
                                    type: integer
                                  tcpKeepalive:
                                    description: If set then set SO_KEEPALIVE on the
                                      socket to enable TCP Keepalives.
                                    properties:
                                      interval:
                                        description: The time duration between keep-alive
                                          probes.
                                        type: string
                                      probes:
                                        description: Maximum number of keepalive probes
                                          to send without response before deciding
                                          the connection is dead.
                                        type: integer
                                      time:
                                        description: The time duration a connection
                                          needs to be idle before keep-alive probes
                                          start being sent.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          loadBalancer:
                            description: Settings controlling the load balancer algorithms.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - simple
                                    - required:
                                        - consistentHash
                              - required:
                                  - simple
                              - required:
                                  - consistentHash
                            properties:
                              consistentHash:
                                allOf:
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - httpHeaderName
                                            - required:
                                                - httpCookie
                                            - required:
                                                - useSourceIp
                                            - required:
                                                - httpQueryParameterName
                                      - required:
                                          - httpHeaderName
                                      - required:
                                          - httpCookie
                                      - required:
                                          - useSourceIp
                                      - required:
                                          - httpQueryParameterName
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - ringHash
                                            - required:
                                                - maglev
                                      - required:
                                          - ringHash
                                      - required:
                                          - maglev
                                properties:
                                  httpCookie:
                                    description: Hash based on HTTP cookie.
                                    properties:
                                      name:
                                        description: Name of the cookie.
                                        type: string
                                      path:
                                        description: Path to set for the cookie.
                                        type: string
                                      ttl:
                                        description: Lifetime of the cookie.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  httpHeaderName:
                                    description: Hash based on a specific HTTP header.
                                    type: string
                                  httpQueryParameterName:
                                    description: Hash based on a specific HTTP query
                                      parameter.
                                    type: string
                                  maglev:
                                    description: The Maglev load balancer implements
                                      consistent hashing to backend hosts.
                                    properties:
                                      tableSize:
                                        description: The table size for Maglev hashing.
                                        type: integer
                                    type: object
                                  minimumRingSize:
                                    description: Deprecated.
                                    type: integer
                                  ringHash:
                                    description: The ring/modulo hash load balancer
                                      implements consistent hashing to backend hosts.
                                    properties:
                                      minimumRingSize:
                                        description: The minimum number of virtual
                                          nodes to use for the hash ring.
                                        type: integer
                                    type: object
                                  useSourceIp:
                                    description: Hash based on the source IP address.
                                    type: boolean
                                type: object
                              localityLbSetting:
                                properties:
                                  distribute:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating locality, '/' separated,
                                            e.g.
                                          type: string
                                        to:
                                          additionalProperties:
                                            type: integer
                                          description: Map of upstream localities
                                            to traffic distribution weights.
                                          type: object
                                      type: object
                                    type: array
                                  enabled:
                                    description: enable locality load balancing, this
                                      is DestinationRule-level and will override mesh
                                      wide settings in entirety.
                                    nullable: true
                                    type: boolean
                                  failover:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating region.
                                          type: string
                                        to:
                                          description: Destination region the traffic
                                            will fail over to when endpoints in the
                                            'from' region becomes unhealthy.
                                          type: string
                                      type: object
                                    type: array
                                  failoverPriority:
                                    description: failoverPriority is an ordered list
                                      of labels used to sort endpoints to do priority
                                      based load balancing.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              simple:
                                enum:
                                  - UNSPECIFIED
                                  - LEAST_CONN
                                  - RANDOM
                                  - PASSTHROUGH
                                  - ROUND_ROBIN
                                  - LEAST_REQUEST
                                type: string
                              warmupDurationSecs:
                                description: Represents the warmup duration of Service.
                                type: string
                            type: object
                          outlierDetection:
                            properties:
                              baseEjectionTime:
                                description: Minimum ejection duration.
                                type: string
                              consecutive5xxErrors:
                                description: Number of 5xx errors before a host is
                                  ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveErrors:
                                format: int32
                                type: integer
                              consecutiveGatewayErrors:
                                description: Number of gateway errors before a host
                                  is ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveLocalOriginFailures:
                                description: The number of consecutive locally originated
                                  failures before ejection occurs.
                                nullable: true
                                type: integer
                              interval:
                                description: Time interval between ejection sweep
                                  analysis.
                                type: string
                              maxEjectionPercent:
                                description: Maximum % of hosts in the load balancing
                                  pool for the upstream service that can be ejected.
                                format: int32
                                type: integer
                              minHealthPercent:
                                description: Outlier detection will be enabled as
                                  long as the associated load balancing pool has at
                                  least min_health_percent hosts in healthy mode.
                                format: int32
                                type: integer
                              splitExternalLocalOriginErrors:
                                description: Determines whether to distinguish local
                                  origin failures from external errors.
                                type: boolean
                            type: object
                          portLevelSettings:
                            description: Traffic policies specific to individual ports.
                            items:
                              properties:
                                connectionPool:
                                  properties:
                                    http:
                                      description: HTTP connection pool settings.
                                      properties:
                                        h2UpgradePolicy:
                                          description: Specify if http1.1 connection
                                            should be upgraded to http2 for the associated
                                            destination.
                                          enum:
                                            - DEFAULT
                                            - DO_NOT_UPGRADE
                                            - UPGRADE
                                          type: string
                                        http1MaxPendingRequests:
                                          description: Maximum number of requests
                                            that will be queued while waiting for
                                            a ready connection pool connection.
                                          format: int32
                                          type: integer
                                        http2MaxRequests:
                                          description: Maximum number of active requests
                                            to a destination.
                                          format: int32
                                          type: integer
                                        idleTimeout:
                                          description: The idle timeout for upstream
                                            connection pool connections.
                                          type: string
                                        maxRequestsPerConnection:
                                          description: Maximum number of requests
                                            per connection to a backend.
                                          format: int32
                                          type: integer
                                        maxRetries:
                                          description: Maximum number of retries that
                                            can be outstanding to all hosts in a cluster
                                            at a given time.
                                          format: int32
                                          type: integer
                                        useClientProtocol:
                                          description: If set to true, client protocol
                                            will be preserved while initiating connection
                                            to backend.
                                          type: boolean
                                      type: object
                                    tcp:
                                      description: Settings common to both HTTP and
                                        TCP upstream connections.
                                      properties:
                                        connectTimeout:
                                          description: TCP connection timeout.
                                          type: string
                                        maxConnectionDuration:
                                          description: The maximum duration of a connection.
                                          type: string
                                        maxConnections:
                                          description: Maximum number of HTTP1 /TCP
                                            connections to a destination host.
                                          format: int32
                                          type: integer
                                        tcpKeepalive:
                                          description: If set then set SO_KEEPALIVE
                                            on the socket to enable TCP Keepalives.
                                          properties:
                                            interval:
                                              description: The time duration between
                                                keep-alive probes.
                                              type: string
                                            probes:
                                              description: Maximum number of keepalive
                                                probes to send without response before
                                                deciding the connection is dead.
                                              type: integer
                                            time:
                                              description: The time duration a connection
                                                needs to be idle before keep-alive
                                                probes start being sent.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                loadBalancer:
                                  description: Settings controlling the load balancer
                                    algorithms.
                                  oneOf:
                                    - not:
                                        anyOf:
                                          - required:
                                              - simple
                                          - required:
                                              - consistentHash
                                    - required:
                                        - simple
                                    - required:
                                        - consistentHash
                                  properties:
                                    consistentHash:
                                      allOf:
                                        - oneOf:
                                            - not:
                                                anyOf:
                                                  - required:
                                                      - httpHeaderName
                                                  - required:
                                                      - httpCookie
                                                  - required:
                                                      - useSourceIp
                                                  - required:
                                                      - httpQueryParameterName
                                            - required:
                                                - httpHeaderName
                                            - required:
                                                - httpCookie
                                            - required:
                                                - useSourceIp
                                            - required:
                                                - httpQueryParameterName
                                        - oneOf:
                                            - not:
                                                anyOf:
                                                  - required:
                                                      - ringHash
                                                  - required:
                                                      - maglev
                                            - required:
                                                - ringHash
                                            - required:
                                                - maglev
                                      properties:
                                        httpCookie:
                                          description: Hash based on HTTP cookie.
                                          properties:
                                            name:
                                              description: Name of the cookie.
                                              type: string
                                            path:
                                              description: Path to set for the cookie.
                                              type: string
                                            ttl:
                                              description: Lifetime of the cookie.
                                              type: string
                                          required:
                                            - name
                                          type: object
                                        httpHeaderName:
                                          description: Hash based on a specific HTTP
                                            header.
                                          type: string
                                        httpQueryParameterName:
                                          description: Hash based on a specific HTTP
                                            query parameter.
                                          type: string
                                        maglev:
                                          description: The Maglev load balancer implements
                                            consistent hashing to backend hosts.
                                          properties:
                                            tableSize:
                                              description: The table size for Maglev
                                                hashing.
                                              type: integer
                                          type: object
                                        minimumRingSize:
                                          description: Deprecated.
                                          type: integer
                                        ringHash:
                                          description: The ring/modulo hash load balancer
                                            implements consistent hashing to backend
                                            hosts.
                                          properties:
                                            minimumRingSize:
                                              description: The minimum number of virtual
                                                nodes to use for the hash ring.
                                              type: integer
                                          type: object
                                        useSourceIp:
                                          description: Hash based on the source IP
                                            address.
                                          type: boolean
                                      type: object
                                    localityLbSetting:
                                      properties:
                                        distribute:
                                          description: 'Optional: only one of distribute,
                                            failover or failoverPriority can be set.'
                                          items:
                                            properties:
                                              from:
                                                description: Originating locality,
                                                  '/' separated, e.g.
                                                type: string
                                              to:
                                                additionalProperties:
                                                  type: integer
                                                description: Map of upstream localities
                                                  to traffic distribution weights.
                                                type: object
                                            type: object
                                          type: array
                                        enabled:
                                          description: enable locality load balancing,
                                            this is DestinationRule-level and will
                                            override mesh wide settings in entirety.
                                          nullable: true
                                          type: boolean
                                        failover:
                                          description: 'Optional: only one of distribute,
                                            failover or failoverPriority can be set.'
                                          items:
                                            properties:
                                              from:
                                                description: Originating region.
                                                type: string
                                              to:
                                                description: Destination region the
                                                  traffic will fail over to when endpoints
                                                  in the 'from' region becomes unhealthy.
                                                type: string
                                            type: object
                                          type: array
                                        failoverPriority:
                                          description: failoverPriority is an ordered
                                            list of labels used to sort endpoints
                                            to do priority based load balancing.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    simple:
                                      enum:
                                        - UNSPECIFIED
                                        - LEAST_CONN
                                        - RANDOM
                                        - PASSTHROUGH
                                        - ROUND_ROBIN
                                        - LEAST_REQUEST
                                      type: string
                                    warmupDurationSecs:
                                      description: Represents the warmup duration
                                        of Service.
                                      type: string
                                  type: object
                                outlierDetection:
                                  properties:
                                    baseEjectionTime:
                                      description: Minimum ejection duration.
                                      type: string
                                    consecutive5xxErrors:
                                      description: Number of 5xx errors before a host
                                        is ejected from the connection pool.
                                      nullable: true
                                      type: integer
                                    consecutiveErrors:
                                      format: int32
                                      type: integer
                                    consecutiveGatewayErrors:
                                      description: Number of gateway errors before
                                        a host is ejected from the connection pool.
                                      nullable: true
                                      type: integer
                                    consecutiveLocalOriginFailures:
                                      description: The number of consecutive locally
                                        originated failures before ejection occurs.
                                      nullable: true
                                      type: integer
                                    interval:
                                      description: Time interval between ejection
                                        sweep analysis.
                                      type: string
                                    maxEjectionPercent:
                                      description: Maximum % of hosts in the load
                                        balancing pool for the upstream service that
                                        can be ejected.
                                      format: int32
                                      type: integer
                                    minHealthPercent:
                                      description: Outlier detection will be enabled
                                        as long as the associated load balancing pool
                                        has at least min_health_percent hosts in healthy
                                        mode.
                                      format: int32
                                      type: integer
                                    splitExternalLocalOriginErrors:
                                      description: Determines whether to distinguish
                                        local origin failures from external errors.
                                      type: boolean
                                  type: object
                                port:
                                  description: Specifies the number of a port on the
                                    destination service on which this policy is being
                                    applied.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                tls:
                                  description: TLS related settings for connections
                                    to the upstream service.
                                  properties:
                                    caCertificates:
                                      description: 'OPTIONAL: The path to the file
                                        containing certificate authority certificates
                                        to use in verifying a presented server certificate.'
                                      type: string
                                    clientCertificate:
                                      description: REQUIRED if mode is `MUTUAL`.
                                      type: string
                                    credentialName:
                                      description: The name of the secret that holds
                                        the TLS certs for the client including the
                                        CA certificates.
                                      type: string
                                    insecureSkipVerify:
                                      description: InsecureSkipVerify specifies whether
                                        the proxy should skip verifying the CA signature
                                        and SAN for the server certificate corresponding
                                        to the host.
                                      nullable: true
                                      type: boolean
                                    mode:
                                      description: Indicates whether connections to
                                        this port should be secured using TLS.
                                      enum:
                                        - DISABLE
                                        - SIMPLE
                                        - MUTUAL
                                        - ISTIO_MUTUAL
                                      type: string
                                    privateKey:
                                      description: REQUIRED if mode is `MUTUAL`.
                                      type: string
                                    sni:
                                      description: SNI string to present to the server
                                        during TLS handshake.
                                      type: string
                                    subjectAltNames:
                                      description: A list of alternate names to verify
                                        the subject identity in the certificate.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            type: array
                          tls:
                            description: TLS related settings for connections to the
                              upstream service.
                            properties:
                              caCertificates:
                                description: 'OPTIONAL: The path to the file containing
                                  certificate authority certificates to use in verifying
                                  a presented server certificate.'
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: The name of the secret that holds the
                                  TLS certs for the client including the CA certificates.
                                type: string
                              insecureSkipVerify:
                                description: InsecureSkipVerify specifies whether
                                  the proxy should skip verifying the CA signature
                                  and SAN for the server certificate corresponding
                                  to the host.
                                nullable: true
                                type: boolean
                              mode:
                                description: Indicates whether connections to this
                                  port should be secured using TLS.
                                enum:
                                  - DISABLE
                                  - SIMPLE
                                  - MUTUAL
                                  - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: A list of alternate names to verify the
                                  subject identity in the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                          tunnel:
                            description: Configuration of tunneling TCP over other
                              transport or application layers for the host configured
                              in the DestinationRule.
                            properties:
                              protocol:
                                description: Specifies which protocol to use for tunneling
                                  the downstream connection.
                                type: string
                              targetHost:
                                description: Specifies a host to which the downstream
                                  connection is tunneled.
                                type: string
                              targetPort:
                                description: Specifies a port to which the downstream
                                  connection is tunneled.
                                type: integer
                            required:
                              - targetHost
                              - targetPort
                            type: object
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                trafficPolicy:
                  description: Traffic policies to apply (load balancing policy, connection
                    pool sizes, outlier detection).
                  properties:
                    connectionPool:
                      properties:
                        http:
                          description: HTTP connection pool settings.
                          properties:
                            h2UpgradePolicy:
                              description: Specify if http1.1 connection should be
                                upgraded to http2 for the associated destination.
                              enum:
                                - DEFAULT
                                - DO_NOT_UPGRADE
                                - UPGRADE
                              type: string
                            http1MaxPendingRequests:
                              description: Maximum number of requests that will be
                                queued while waiting for a ready connection pool connection.
                              format: int32
                              type: integer
                            http2MaxRequests:
                              description: Maximum number of active requests to a
                                destination.
                              format: int32
                              type: integer
                            idleTimeout:
                              description: The idle timeout for upstream connection
                                pool connections.
                              type: string
                            maxRequestsPerConnection:
                              description: Maximum number of requests per connection
                                to a backend.
                              format: int32
                              type: integer
                            maxRetries:
                              description: Maximum number of retries that can be outstanding
                                to all hosts in a cluster at a given time.
                              format: int32
                              type: integer
                            useClientProtocol:
                              description: If set to true, client protocol will be
                                preserved while initiating connection to backend.
                              type: boolean
                          type: object
                        tcp:
                          description: Settings common to both HTTP and TCP upstream
                            connections.
                          properties:
                            connectTimeout:
                              description: TCP connection timeout.
                              type: string
                            maxConnectionDuration:
                              description: The maximum duration of a connection.
                              type: string
                            maxConnections:
                              description: Maximum number of HTTP1 /TCP connections
                                to a destination host.
                              format: int32
                              type: integer
                            tcpKeepalive:
                              description: If set then set SO_KEEPALIVE on the socket
                                to enable TCP Keepalives.
                              properties:
                                interval:
                                  description: The time duration between keep-alive
                                    probes.
                                  type: string
                                probes:
                                  description: Maximum number of keepalive probes
                                    to send without response before deciding the connection
                                    is dead.
                                  type: integer
                                time:
                                  description: The time duration a connection needs
                                    to be idle before keep-alive probes start being
                                    sent.
                                  type: string
                              type: object
                          type: object
                      type: object
                    loadBalancer:
                      description: Settings controlling the load balancer algorithms.
                      oneOf:
                        - not:
                            anyOf:
                              - required:
                                  - simple
                              - required:
                                  - consistentHash
                        - required:
                            - simple
                        - required:
                            - consistentHash
                      properties:
                        consistentHash:
                          allOf:
                            - oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - httpHeaderName
                                      - required:
                                          - httpCookie
                                      - required:
                                          - useSourceIp
                                      - required:
                                          - httpQueryParameterName
                                - required:
                                    - httpHeaderName
                                - required:
                                    - httpCookie
                                - required:
                                    - useSourceIp
                                - required:
                                    - httpQueryParameterName
                            - oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - ringHash
                                      - required:
                                          - maglev
                                - required:
                                    - ringHash
                                - required:
                                    - maglev
                          properties:
                            httpCookie:
                              description: Hash based on HTTP cookie.
                              properties:
                                name:
                                  description: Name of the cookie.
                                  type: string
                                path:
                                  description: Path to set for the cookie.
                                  type: string
                                ttl:
                                  description: Lifetime of the cookie.
                                  type: string
                              required:
                                - name
                              type: object
                            httpHeaderName:
                              description: Hash based on a specific HTTP header.
                              type: string
                            httpQueryParameterName:
                              description: Hash based on a specific HTTP query parameter.
                              type: string
                            maglev:
                              description: The Maglev load balancer implements consistent
                                hashing to backend hosts.
                              properties:
                                tableSize:
                                  description: The table size for Maglev hashing.
                                  type: integer
                              type: object
                            minimumRingSize:
                              description: Deprecated.
                              type: integer
                            ringHash:
                              description: The ring/modulo hash load balancer implements
                                consistent hashing to backend hosts.
                              properties:
                                minimumRingSize:
                                  description: The minimum number of virtual nodes
                                    to use for the hash ring.
                                  type: integer
                              type: object
                            useSourceIp:
                              description: Hash based on the source IP address.
                              type: boolean
                          type: object
                        localityLbSetting:
                          properties:
                            distribute:
                              description: 'Optional: only one of distribute, failover
                                or failoverPriority can be set.'
                              items:
                                properties:
                                  from:
                                    description: Originating locality, '/' separated,
                                      e.g.
                                    type: string
                                  to:
                                    additionalProperties:
                                      type: integer
                                    description: Map of upstream localities to traffic
                                      distribution weights.
                                    type: object
                                type: object
                              type: array
                            enabled:
                              description: enable locality load balancing, this is
                                DestinationRule-level and will override mesh wide
                                settings in entirety.
                              nullable: true
                              type: boolean
                            failover:
                              description: 'Optional: only one of distribute, failover
                                or failoverPriority can be set.'
                              items:
                                properties:
                                  from:
                                    description: Originating region.
                                    type: string
                                  to:
                                    description: Destination region the traffic will
                                      fail over to when endpoints in the 'from' region
                                      becomes unhealthy.
                                    type: string
                                type: object
                              type: array
                            failoverPriority:
                              description: failoverPriority is an ordered list of
                                labels used to sort endpoints to do priority based
                                load balancing.
                              items:
                                type: string
                              type: array
                          type: object
                        simple:
                          enum:
                            - UNSPECIFIED
                            - LEAST_CONN
                            - RANDOM
                            - PASSTHROUGH
                            - ROUND_ROBIN
                            - LEAST_REQUEST
                          type: string
                        warmupDurationSecs:
                          description: Represents the warmup duration of Service.
                          type: string
                      type: object
                    outlierDetection:
                      properties:
                        baseEjectionTime:
                          description: Minimum ejection duration.
                          type: string
                        consecutive5xxErrors:
                          description: Number of 5xx errors before a host is ejected
                            from the connection pool.
                          nullable: true
                          type: integer
                        consecutiveErrors:
                          format: int32
                          type: integer
                        consecutiveGatewayErrors:
                          description: Number of gateway errors before a host is ejected
                            from the connection pool.
                          nullable: true
                          type: integer
                        consecutiveLocalOriginFailures:
                          description: The number of consecutive locally originated
                            failures before ejection occurs.
                          nullable: true
                          type: integer
                        interval:
                          description: Time interval between ejection sweep analysis.
                          type: string
                        maxEjectionPercent:
                          description: Maximum % of hosts in the load balancing pool
                            for the upstream service that can be ejected.
                          format: int32
                          type: integer
                        minHealthPercent:
                          description: Outlier detection will be enabled as long as
                            the associated load balancing pool has at least min_health_percent
                            hosts in healthy mode.
                          format: int32
                          type: integer
                        splitExternalLocalOriginErrors:
                          description: Determines whether to distinguish local origin
                            failures from external errors.
                          type: boolean
                      type: object
                    portLevelSettings:
                      description: Traffic policies specific to individual ports.
                      items:
                        properties:
                          connectionPool:
                            properties:
                              http:
                                description: HTTP connection pool settings.
                                properties:
                                  h2UpgradePolicy:
                                    description: Specify if http1.1 connection should
                                      be upgraded to http2 for the associated destination.
                                    enum:
                                      - DEFAULT
                                      - DO_NOT_UPGRADE
                                      - UPGRADE
                                    type: string
                                  http1MaxPendingRequests:
                                    description: Maximum number of requests that will
                                      be queued while waiting for a ready connection
                                      pool connection.
                                    format: int32
                                    type: integer
                                  http2MaxRequests:
                                    description: Maximum number of active requests
                                      to a destination.
                                    format: int32
                                    type: integer
                                  idleTimeout:
                                    description: The idle timeout for upstream connection
                                      pool connections.
                                    type: string
                                  maxRequestsPerConnection:
                                    description: Maximum number of requests per connection
                                      to a backend.
                                    format: int32
                                    type: integer
                                  maxRetries:
                                    description: Maximum number of retries that can
                                      be outstanding to all hosts in a cluster at
                                      a given time.
                                    format: int32
                                    type: integer
                                  useClientProtocol:
                                    description: If set to true, client protocol will
                                      be preserved while initiating connection to
                                      backend.
                                    type: boolean
                                type: object
                              tcp:
                                description: Settings common to both HTTP and TCP
                                  upstream connections.
                                properties:
                                  connectTimeout:
                                    description: TCP connection timeout.
                                    type: string
                                  maxConnectionDuration:
                                    description: The maximum duration of a connection.
                                    type: string
                                  maxConnections:
                                    description: Maximum number of HTTP1 /TCP connections
                                      to a destination host.
                                    format: int32
                                    type: integer
                                  tcpKeepalive:
                                    description: If set then set SO_KEEPALIVE on the
                                      socket to enable TCP Keepalives.
                                    properties:
                                      interval:
                                        description: The time duration between keep-alive
                                          probes.
                                        type: string
                                      probes:
                                        description: Maximum number of keepalive probes
                                          to send without response before deciding
                                          the connection is dead.
                                        type: integer
                                      time:
                                        description: The time duration a connection
                                          needs to be idle before keep-alive probes
                                          start being sent.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          loadBalancer:
                            description: Settings controlling the load balancer algorithms.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - simple
                                    - required:
                                        - consistentHash
                              - required:
                                  - simple
                              - required:
                                  - consistentHash
                            properties:
                              consistentHash:
                                allOf:
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - httpHeaderName
                                            - required:
                                                - httpCookie
                                            - required:
                                                - useSourceIp
                                            - required:
                                                - httpQueryParameterName
                                      - required:
                                          - httpHeaderName
                                      - required:
                                          - httpCookie
                                      - required:
                                          - useSourceIp
                                      - required:
                                          - httpQueryParameterName
                                  - oneOf:
                                      - not:
                                          anyOf:
                                            - required:
                                                - ringHash
                                            - required:
                                                - maglev
                                      - required:
                                          - ringHash
                                      - required:
                                          - maglev
                                properties:
                                  httpCookie:
                                    description: Hash based on HTTP cookie.
                                    properties:
                                      name:
                                        description: Name of the cookie.
                                        type: string
                                      path:
                                        description: Path to set for the cookie.
                                        type: string
                                      ttl:
                                        description: Lifetime of the cookie.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  httpHeaderName:
                                    description: Hash based on a specific HTTP header.
                                    type: string
                                  httpQueryParameterName:
                                    description: Hash based on a specific HTTP query
                                      parameter.
                                    type: string
                                  maglev:
                                    description: The Maglev load balancer implements
                                      consistent hashing to backend hosts.
                                    properties:
                                      tableSize:
                                        description: The table size for Maglev hashing.
                                        type: integer
                                    type: object
                                  minimumRingSize:
                                    description: Deprecated.
                                    type: integer
                                  ringHash:
                                    description: The ring/modulo hash load balancer
                                      implements consistent hashing to backend hosts.
                                    properties:
                                      minimumRingSize:
                                        description: The minimum number of virtual
                                          nodes to use for the hash ring.
                                        type: integer
                                    type: object
                                  useSourceIp:
                                    description: Hash based on the source IP address.
                                    type: boolean
                                type: object
                              localityLbSetting:
                                properties:
                                  distribute:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating locality, '/' separated,
                                            e.g.
                                          type: string
                                        to:
                                          additionalProperties:
                                            type: integer
                                          description: Map of upstream localities
                                            to traffic distribution weights.
                                          type: object
                                      type: object
                                    type: array
                                  enabled:
                                    description: enable locality load balancing, this
                                      is DestinationRule-level and will override mesh
                                      wide settings in entirety.
                                    nullable: true
                                    type: boolean
                                  failover:
                                    description: 'Optional: only one of distribute,
                                      failover or failoverPriority can be set.'
                                    items:
                                      properties:
                                        from:
                                          description: Originating region.
                                          type: string
                                        to:
                                          description: Destination region the traffic
                                            will fail over to when endpoints in the
                                            'from' region becomes unhealthy.
                                          type: string
                                      type: object
                                    type: array
                                  failoverPriority:
                                    description: failoverPriority is an ordered list
                                      of labels used to sort endpoints to do priority
                                      based load balancing.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              simple:
                                enum:
                                  - UNSPECIFIED
                                  - LEAST_CONN
                                  - RANDOM
                                  - PASSTHROUGH
                                  - ROUND_ROBIN
                                  - LEAST_REQUEST
                                type: string
                              warmupDurationSecs:
                                description: Represents the warmup duration of Service.
                                type: string
                            type: object
                          outlierDetection:
                            properties:
                              baseEjectionTime:
                                description: Minimum ejection duration.
                                type: string
                              consecutive5xxErrors:
                                description: Number of 5xx errors before a host is
                                  ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveErrors:
                                format: int32
                                type: integer
                              consecutiveGatewayErrors:
                                description: Number of gateway errors before a host
                                  is ejected from the connection pool.
                                nullable: true
                                type: integer
                              consecutiveLocalOriginFailures:
                                description: The number of consecutive locally originated
                                  failures before ejection occurs.
                                nullable: true
                                type: integer
                              interval:
                                description: Time interval between ejection sweep
                                  analysis.
                                type: string
                              maxEjectionPercent:
                                description: Maximum % of hosts in the load balancing
                                  pool for the upstream service that can be ejected.
                                format: int32
                                type: integer
                              minHealthPercent:
                                description: Outlier detection will be enabled as
                                  long as the associated load balancing pool has at
                                  least min_health_percent hosts in healthy mode.
                                format: int32
                                type: integer
                              splitExternalLocalOriginErrors:
                                description: Determines whether to distinguish local
                                  origin failures from external errors.
                                type: boolean
                            type: object
                          port:
                            description: Specifies the number of a port on the destination
                              service on which this policy is being applied.
                            properties:
                              number:
                                type: integer
                            type: object
                          tls:
                            description: TLS related settings for connections to the
                              upstream service.
                            properties:
                              caCertificates:
                                description: 'OPTIONAL: The path to the file containing
                                  certificate authority certificates to use in verifying
                                  a presented server certificate.'
                                type: string
                              clientCertificate:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              credentialName:
                                description: The name of the secret that holds the
                                  TLS certs for the client including the CA certificates.
                                type: string
                              insecureSkipVerify:
                                description: InsecureSkipVerify specifies whether
                                  the proxy should skip verifying the CA signature
                                  and SAN for the server certificate corresponding
                                  to the host.
                                nullable: true
                                type: boolean
                              mode:
                                description: Indicates whether connections to this
                                  port should be secured using TLS.
                                enum:
                                  - DISABLE
                                  - SIMPLE
                                  - MUTUAL
                                  - ISTIO_MUTUAL
                                type: string
                              privateKey:
                                description: REQUIRED if mode is `MUTUAL`.
                                type: string
                              sni:
                                description: SNI string to present to the server during
                                  TLS handshake.
                                type: string
                              subjectAltNames:
                                description: A list of alternate names to verify the
                                  subject identity in the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                    tls:
                      description: TLS related settings for connections to the upstream
                        service.
                      properties:
                        caCertificates:
                          description: 'OPTIONAL: The path to the file containing
                            certificate authority certificates to use in verifying
                            a presented server certificate.'
                          type: string
                        clientCertificate:
                          description: REQUIRED if mode is `MUTUAL`.
                          type: string
                        credentialName:
                          description: The name of the secret that holds the TLS certs
                            for the client including the CA certificates.
                          type: string
                        insecureSkipVerify:
                          description: InsecureSkipVerify specifies whether the proxy
                            should skip verifying the CA signature and SAN for the
                            server certificate corresponding to the host.
                          nullable: true
                          type: boolean
                        mode:
                          description: Indicates whether connections to this port
                            should be secured using TLS.
                          enum:
                            - DISABLE
                            - SIMPLE
                            - MUTUAL
                            - ISTIO_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `MUTUAL`.
                          type: string
                        sni:
                          description: SNI string to present to the server during
                            TLS handshake.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate.
                          items:
                            type: string
                          type: array
                      type: object
                    tunnel:
                      description: Configuration of tunneling TCP over other transport
                        or application layers for the host configured in the DestinationRule.
                      properties:
                        protocol:
                          description: Specifies which protocol to use for tunneling
                            the downstream connection.
                          type: string
                        targetHost:
                          description: Specifies a host to which the downstream connection
                            is tunneled.
                          type: string
                        targetPort:
                          description: Specifies a port to which the downstream connection
                            is tunneled.
                          type: integer
                      required:
                        - targetHost
                        - targetPort
                      type: object
                  type: object
                workloadSelector:
                  description: Criteria used to select the specific set of pods/VMs
                    on which this `DestinationRule` configuration should be applied.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
              required:
                - host
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: envoyfilters.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: EnvoyFilter
    listKind: EnvoyFilterList
    plural: envoyfilters
    singular: envoyfilter
  scope: Namespaced
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Customizing Envoy configuration generated by Istio. See
                more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html'
              properties:
                configPatches:
                  description: One or more patches with match conditions.
                  items:
                    properties:
                      applyTo:
                        description: Specifies where in the Envoy configuration, the
                          patch should be applied.
                        enum:
                          - INVALID
                          - LISTENER
                          - FILTER_CHAIN
                          - NETWORK_FILTER
                          - HTTP_FILTER
                          - ROUTE_CONFIGURATION
                          - VIRTUAL_HOST
                          - HTTP_ROUTE
                          - CLUSTER
                          - EXTENSION_CONFIG
                          - BOOTSTRAP
                          - LISTENER_FILTER
                        type: string
                      match:
                        description: Match on listener/route configuration/cluster.
                        oneOf:
                          - not:
                              anyOf:
                                - required:
                                    - listener
                                - required:
                                    - routeConfiguration
                                - required:
                                    - cluster
                          - required:
                              - listener
                          - required:
                              - routeConfiguration
                          - required:
                              - cluster
                        properties:
                          cluster:
                            description: Match on envoy cluster attributes.
                            properties:
                              name:
                                description: The exact name of the cluster to match.
                                type: string
                              portNumber:
                                description: The service port for which this cluster
                                  was generated.
                                type: integer
                              service:
                                description: The fully qualified service name for
                                  this cluster.
                                type: string
                              subset:
                                description: The subset associated with the service.
                                type: string
                            type: object
                          context:
                            description: The specific config generation context to
                              match on.
                            enum:
                              - ANY
                              - SIDECAR_INBOUND
                              - SIDECAR_OUTBOUND
                              - GATEWAY
                            type: string
                          listener:
                            description: Match on envoy listener attributes.
                            properties:
                              filterChain:
                                description: Match a specific filter chain in a listener.
                                properties:
                                  applicationProtocols:
                                    description: Applies only to sidecars.
                                    type: string
                                  destinationPort:
                                    description: The destination_port value used by
                                      a filter chain's match condition.
                                    type: integer
                                  filter:
                                    description: The name of a specific filter to
                                      apply the patch to.
                                    properties:
                                      name:
                                        description: The filter name to match on.
                                        type: string
                                      subFilter:
                                        description: The next level filter within
                                          this filter to match upon.
                                        properties:
                                          name:
                                            description: The filter name to match
                                              on.
                                            type: string
                                        type: object
                                    type: object
                                  name:
                                    description: The name assigned to the filter chain.
                                    type: string
                                  sni:
                                    description: The SNI value used by a filter chain's
                                      match condition.
                                    type: string
                                  transportProtocol:
                                    description: Applies only to `SIDECAR_INBOUND`
                                      context.
                                    type: string
                                type: object
                              listenerFilter:
                                description: Match a specific listener filter.
                                type: string
                              name:
                                description: Match a specific listener by its name.
                                type: string
                              portName:
                                type: string
                              portNumber:
                                description: The service port/gateway port to which
                                  traffic is being sent/received.
                                type: integer
                            type: object
                          proxy:
                            description: Match on properties associated with a proxy.
                            properties:
                              metadata:
                                additionalProperties:
                                  type: string
                                description: Match on the node metadata supplied by
                                  a proxy when connecting to Istio Pilot.
                                type: object
                              proxyVersion:
                                description: A regular expression in golang regex
                                  format (RE2) that can be used to select proxies
                                  using a specific version of istio proxy.
                                type: string
                            type: object
                          routeConfiguration:
                            description: Match on envoy HTTP route configuration attributes.
                            properties:
                              gateway:
                                description: The Istio gateway config's namespace/name
                                  for which this route configuration was generated.
                                type: string
                              name:
                                description: Route configuration name to match on.
                                type: string
                              portName:
                                description: Applicable only for GATEWAY context.
                                type: string
                              portNumber:
                                description: The service port number or gateway server
                                  port number for which this route configuration was
                                  generated.
                                type: integer
                              vhost:
                                description: Match a specific virtual host in a route
                                  configuration and apply the patch to the virtual
                                  host.
                                properties:
                                  name:
                                    description: The VirtualHosts objects generated
                                      by Istio are named as host:port, where the host
                                      typically corresponds to the VirtualService's
                                      host field or the hostname of a service in the
                                      registry.
                                    type: string
                                  route:
                                    description: Match a specific route within the
                                      virtual host.
                                    properties:
                                      action:
                                        description: Match a route with specific action
                                          type.
                                        enum:
                                          - ANY
                                          - ROUTE
                                          - REDIRECT
                                          - DIRECT_RESPONSE
                                        type: string
                                      name:
                                        description: The Route objects generated by
                                          default are named as default.
                                        type: string
                                    type: object
                                type: object
                            type: object
                        type: object
                      patch:
                        description: The patch to apply along with the operation.
                        properties:
                          filterClass:
                            description: Determines the filter insertion order.
                            enum:
                              - UNSPECIFIED
                              - AUTHN
                              - AUTHZ
                              - STATS
                            type: string
                          operation:
                            description: Determines how the patch should be applied.
                            enum:
                              - INVALID
                              - MERGE
                              - ADD
                              - REMOVE
                              - INSERT_BEFORE
                              - INSERT_AFTER
                              - INSERT_FIRST
                              - REPLACE
                            type: string
                          value:
                            description: The JSON config of the object being patched.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                  type: array
                priority:
                  description: Priority defines the order in which patch sets are
                    applied within a context.
                  format: int32
                  type: integer
                workloadSelector:
                  description: Criteria used to select the specific set of pods/VMs
                    on which this patch configuration should be applied.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which the configuration should be applied.
                      type: object
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: gateways.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
      - gw
    singular: gateway
  scope: Namespaced
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting edge load balancer. See more details
                at: https://istio.io/docs/reference/config/networking/gateway.html'
              properties:
                selector:
                  additionalProperties:
                    type: string
                  description: One or more labels that indicate a specific set of
                    pods/VMs on which this gateway configuration should be applied.
                  type: object
                servers:
                  description: A list of server specifications.
                  items:
                    properties:
                      bind:
                        description: The ip or the Unix domain socket to which the
                          listener should be bound to.
                        type: string
                      defaultEndpoint:
                        type: string
                      hosts:
                        description: One or more hosts exposed by this gateway.
                        items:
                          type: string
                        type: array
                      name:
                        description: An optional name of the server, when set must
                          be unique across all servers.
                        type: string
                      port:
                        description: The Port on which the proxy should listen for
                          incoming connections.
                        properties:
                          name:
                            description: Label assigned to the port.
                            type: string
                          number:
                            description: A valid non-negative integer port number.
                            type: integer
                          protocol:
                            description: The protocol exposed on the port.
                            type: string
                          targetPort:
                            type: integer
                        required:
                          - number
                          - protocol
                          - name
                        type: object
                      tls:
                        description: Set of TLS related options that govern the server's
                          behavior.
                        properties:
                          caCertificates:
                            description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                            type: string
                          cipherSuites:
                            description: 'Optional: If specified, only support the
                              specified cipher list.'
                            items:
                              type: string
                            type: array
                          credentialName:
                            description: For gateways running on Kubernetes, the name
                              of the secret that holds the TLS certs including the
                              CA certificates.
                            type: string
                          httpsRedirect:
                            description: If set to true, the load balancer will send
                              a 301 redirect for all http connections, asking the
                              clients to use HTTPS.
                            type: boolean
                          maxProtocolVersion:
                            description: 'Optional: Maximum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          minProtocolVersion:
                            description: 'Optional: Minimum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          mode:
                            description: 'Optional: Indicates whether connections
                              to this port should be secured using TLS.'
                            enum:
                              - PASSTHROUGH
                              - SIMPLE
                              - MUTUAL
                              - AUTO_PASSTHROUGH
                              - ISTIO_MUTUAL
                              - OPTIONAL_MUTUAL
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          serverCertificate:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          subjectAltNames:
                            description: A list of alternate names to verify the subject
                              identity in the certificate presented by the client.
                            items:
                              type: string
                            type: array
                          verifyCertificateHash:
                            description: An optional list of hex-encoded SHA-256 hashes
                              of the authorized client certificates.
                            items:
                              type: string
                            type: array
                          verifyCertificateSpki:
                            description: An optional list of base64-encoded SHA-256
                              hashes of the SPKIs of authorized client certificates.
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                      - port
                      - hosts
                    type: object
                  type: array
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting edge load balancer. See more details
                at: https://istio.io/docs/reference/config/networking/gateway.html'
              properties:
                selector:
                  additionalProperties:
                    type: string
                  description: One or more labels that indicate a specific set of
                    pods/VMs on which this gateway configuration should be applied.
                  type: object
                servers:
                  description: A list of server specifications.
                  items:
                    properties:
                      bind:
                        description: The ip or the Unix domain socket to which the
                          listener should be bound to.
                        type: string
                      defaultEndpoint:
                        type: string
                      hosts:
                        description: One or more hosts exposed by this gateway.
                        items:
                          type: string
                        type: array
                      name:
                        description: An optional name of the server, when set must
                          be unique across all servers.
                        type: string
                      port:
                        description: The Port on which the proxy should listen for
                          incoming connections.
                        properties:
                          name:
                            description: Label assigned to the port.
                            type: string
                          number:
                            description: A valid non-negative integer port number.
                            type: integer
                          protocol:
                            description: The protocol exposed on the port.
                            type: string
                          targetPort:
                            type: integer
                        required:
                          - number
                          - protocol
                          - name
                        type: object
                      tls:
                        description: Set of TLS related options that govern the server's
                          behavior.
                        properties:
                          caCertificates:
                            description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                            type: string
                          cipherSuites:
                            description: 'Optional: If specified, only support the
                              specified cipher list.'
                            items:
                              type: string
                            type: array
                          credentialName:
                            description: For gateways running on Kubernetes, the name
                              of the secret that holds the TLS certs including the
                              CA certificates.
                            type: string
                          httpsRedirect:
                            description: If set to true, the load balancer will send
                              a 301 redirect for all http connections, asking the
                              clients to use HTTPS.
                            type: boolean
                          maxProtocolVersion:
                            description: 'Optional: Maximum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          minProtocolVersion:
                            description: 'Optional: Minimum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          mode:
                            description: 'Optional: Indicates whether connections
                              to this port should be secured using TLS.'
                            enum:
                              - PASSTHROUGH
                              - SIMPLE
                              - MUTUAL
                              - AUTO_PASSTHROUGH
                              - ISTIO_MUTUAL
                              - OPTIONAL_MUTUAL
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          serverCertificate:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          subjectAltNames:
                            description: A list of alternate names to verify the subject
                              identity in the certificate presented by the client.
                            items:
                              type: string
                            type: array
                          verifyCertificateHash:
                            description: An optional list of hex-encoded SHA-256 hashes
                              of the authorized client certificates.
                            items:
                              type: string
                            type: array
                          verifyCertificateSpki:
                            description: An optional list of base64-encoded SHA-256
                              hashes of the SPKIs of authorized client certificates.
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                      - port
                      - hosts
                    type: object
                  type: array
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    istio: security
    release: istio
  name: peerauthentications.security.istio.io
spec:
  group: security.istio.io
  names:
    categories:
      - istio-io
      - security-istio-io
    kind: PeerAuthentication
    listKind: PeerAuthenticationList
    plural: peerauthentications
    shortNames:
      - pa
    singular: peerauthentication
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Defines the mTLS mode used for peer authentication.
          jsonPath: .spec.mtls.mode
          name: Mode
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Peer authentication configuration for workloads. See more
                details at: https://istio.io/docs/reference/config/security/peer_authentication.html'
              properties:
                mtls:
                  description: Mutual TLS settings for workload.
                  properties:
                    mode:
                      description: Defines the mTLS mode used for peer authentication.
                      enum:
                        - UNSET
                        - DISABLE
                        - PERMISSIVE
                        - STRICT
                      type: string
                  type: object
                portLevelMtls:
                  additionalProperties:
                    properties:
                      mode:
                        description: Defines the mTLS mode used for peer authentication.
                        enum:
                          - UNSET
                          - DISABLE
                          - PERMISSIVE
                          - STRICT
                        type: string
                    type: object
                  description: Port specific mutual TLS settings.
                  type: object
                selector:
                  description: The selector determines the workloads to apply the
                    ChannelAuthentication on.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: proxyconfigs.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: ProxyConfig
    listKind: ProxyConfigList
    plural: proxyconfigs
    singular: proxyconfig
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Provides configuration for individual workloads. See more
                details at: https://istio.io/docs/reference/config/networking/proxy-config.html'
              properties:
                concurrency:
                  description: The number of worker threads to run.
                  nullable: true
                  type: integer
                environmentVariables:
                  additionalProperties:
                    type: string
                  description: Additional environment variables for the proxy.
                  type: object
                image:
                  description: Specifies the details of the proxy image.
                  properties:
                    imageType:
                      description: The image type of the image.
                      type: string
                  type: object
                selector:
                  description: Optional.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    istio: security
    release: istio
  name: requestauthentications.security.istio.io
spec:
  group: security.istio.io
  names:
    categories:
      - istio-io
      - security-istio-io
    kind: RequestAuthentication
    listKind: RequestAuthenticationList
    plural: requestauthentications
    shortNames:
      - ra
    singular: requestauthentication
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Request authentication configuration for workloads. See
                more details at: https://istio.io/docs/reference/config/security/request_authentication.html'
              properties:
                jwtRules:
                  description: Define the list of JWTs that can be validated at the
                    selected workloads' proxy.
                  items:
                    properties:
                      audiences:
                        description: The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3)
                          that are allowed to access.
                        items:
                          type: string
                        type: array
                      forwardOriginalToken:
                        description: If set to true, the original token will be kept
                          for the upstream request.
                        type: boolean
                      fromHeaders:
                        description: List of header locations from which JWT is expected.
                        items:
                          properties:
                            name:
                              description: The HTTP header name.
                              type: string
                            prefix:
                              description: The prefix that should be stripped before
                                decoding the token.
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                      fromParams:
                        description: List of query parameters from which JWT is expected.
                        items:
                          type: string
                        type: array
                      issuer:
                        description: Identifies the issuer that issued the JWT.
                        type: string
                      jwks:
                        description: JSON Web Key Set of public keys to validate signature
                          of the JWT.
                        type: string
                      jwks_uri:
                        description: URL of the provider's public key set to validate
                          signature of the JWT.
                        type: string
                      jwksUri:
                        description: URL of the provider's public key set to validate
                          signature of the JWT.
                        type: string
                      outputClaimToHeaders:
                        description: This field specifies a list of operations to
                          copy the claim to HTTP headers on a successfully verified
                          token.
                        items:
                          properties:
                            claim:
                              description: The name of the claim to be copied from.
                              type: string
                            header:
                              description: The name of the header to be created.
                              type: string
                          type: object
                        type: array
                      outputPayloadToHeader:
                        description: This field specifies the header name to output
                          a successfully verified JWT payload to the backend.
                        type: string
                    required:
                      - issuer
                    type: object
                  type: array
                selector:
                  description: Optional.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
                targetRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Request authentication configuration for workloads. See
                more details at: https://istio.io/docs/reference/config/security/request_authentication.html'
              properties:
                jwtRules:
                  description: Define the list of JWTs that can be validated at the
                    selected workloads' proxy.
                  items:
                    properties:
                      audiences:
                        description: The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3)
                          that are allowed to access.
                        items:
                          type: string
                        type: array
                      forwardOriginalToken:
                        description: If set to true, the original token will be kept
                          for the upstream request.
                        type: boolean
                      fromHeaders:
                        description: List of header locations from which JWT is expected.
                        items:
                          properties:
                            name:
                              description: The HTTP header name.
                              type: string
                            prefix:
                              description: The prefix that should be stripped before
                                decoding the token.
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                      fromParams:
                        description: List of query parameters from which JWT is expected.
                        items:
                          type: string
                        type: array
                      issuer:
                        description: Identifies the issuer that issued the JWT.
                        type: string
                      jwks:
                        description: JSON Web Key Set of public keys to validate signature
                          of the JWT.
                        type: string
                      jwks_uri:
                        description: URL of the provider's public key set to validate
                          signature of the JWT.
                        type: string
                      jwksUri:
                        description: URL of the provider's public key set to validate
                          signature of the JWT.
                        type: string
                      outputClaimToHeaders:
                        description: This field specifies a list of operations to
                          copy the claim to HTTP headers on a successfully verified
                          token.
                        items:
                          properties:
                            claim:
                              description: The name of the claim to be copied from.
                              type: string
                            header:
                              description: The name of the header to be created.
                              type: string
                          type: object
                        type: array
                      outputPayloadToHeader:
                        description: This field specifies the header name to output
                          a successfully verified JWT payload to the backend.
                        type: string
                    required:
                      - issuer
                    type: object
                  type: array
                selector:
                  description: Optional.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
                targetRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: serviceentries.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    shortNames:
      - se
    singular: serviceentry
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The hosts associated with the ServiceEntry
          jsonPath: .spec.hosts
          name: Hosts
          type: string
        - description: Whether the service is external to the mesh or part of the
            mesh (MESH_EXTERNAL or MESH_INTERNAL)
          jsonPath: .spec.location
          name: Location
          type: string
        - description: Service resolution mode for the hosts (NONE, STATIC, or DNS)
          jsonPath: .spec.resolution
          name: Resolution
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting service registry. See more details
                at: https://istio.io/docs/reference/config/networking/service-entry.html'
              properties:
                addresses:
                  description: The virtual IP addresses associated with the service.
                  items:
                    type: string
                  type: array
                endpoints:
                  description: One or more endpoints associated with the service.
                  items:
                    properties:
                      address:
                        description: Address associated with the network endpoint
                          without the port.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: One or more labels associated with the endpoint.
                        type: object
                      locality:
                        description: The locality associated with the endpoint.
                        type: string
                      network:
                        description: Network enables Istio to group endpoints resident
                          in the same L3 domain/network.
                        type: string
                      ports:
                        additionalProperties:
                          type: integer
                        description: Set of ports associated with the endpoint.
                        type: object
                      serviceAccount:
                        description: The service account associated with the workload
                          if a sidecar is present in the workload.
                        type: string
                      weight:
                        description: The load balancing weight associated with the
                          endpoint.
                        type: integer
                    type: object
                  type: array
                exportTo:
                  description: A list of namespaces to which this service is exported.
                  items:
                    type: string
                  type: array
                hosts:
                  description: The hosts associated with the ServiceEntry.
                  items:
                    type: string
                  type: array
                location:
                  description: Specify whether the service should be considered external
                    to the mesh or part of the mesh.
                  enum:
                    - MESH_EXTERNAL
                    - MESH_INTERNAL
                  type: string
                ports:
                  description: The ports associated with the external service.
                  items:
                    properties:
                      name:
                        description: Label assigned to the port.
                        type: string
                      number:
                        description: A valid non-negative integer port number.
                        type: integer
                      protocol:
                        description: The protocol exposed on the port.
                        type: string
                      targetPort:
                        description: The port number on the endpoint where the traffic
                          will be received.
                        type: integer
                    required:
                      - number
                      - name
                    type: object
                  type: array
                resolution:
                  description: Service resolution mode for the hosts.
                  enum:
                    - NONE
                    - STATIC
                    - DNS
                    - DNS_ROUND_ROBIN
                  type: string
                subjectAltNames:
                  description: If specified, the proxy will verify that the server
                    certificate's subject alternate name matches one of the specified
                    values.
                  items:
                    type: string
                  type: array
                workloadSelector:
                  description: Applicable only for MESH_INTERNAL services.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which the configuration should be applied.
                      type: object
                  type: object
              required:
                - hosts
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The hosts associated with the ServiceEntry
          jsonPath: .spec.hosts
          name: Hosts
          type: string
        - description: Whether the service is external to the mesh or part of the
            mesh (MESH_EXTERNAL or MESH_INTERNAL)
          jsonPath: .spec.location
          name: Location
          type: string
        - description: Service resolution mode for the hosts (NONE, STATIC, or DNS)
          jsonPath: .spec.resolution
          name: Resolution
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting service registry. See more details
                at: https://istio.io/docs/reference/config/networking/service-entry.html'
              properties:
                addresses:
                  description: The virtual IP addresses associated with the service.
                  items:
                    type: string
                  type: array
                endpoints:
                  description: One or more endpoints associated with the service.
                  items:
                    properties:
                      address:
                        description: Address associated with the network endpoint
                          without the port.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: One or more labels associated with the endpoint.
                        type: object
                      locality:
                        description: The locality associated with the endpoint.
                        type: string
                      network:
                        description: Network enables Istio to group endpoints resident
                          in the same L3 domain/network.
                        type: string
                      ports:
                        additionalProperties:
                          type: integer
                        description: Set of ports associated with the endpoint.
                        type: object
                      serviceAccount:
                        description: The service account associated with the workload
                          if a sidecar is present in the workload.
                        type: string
                      weight:
                        description: The load balancing weight associated with the
                          endpoint.
                        type: integer
                    type: object
                  type: array
                exportTo:
                  description: A list of namespaces to which this service is exported.
                  items:
                    type: string
                  type: array
                hosts:
                  description: The hosts associated with the ServiceEntry.
                  items:
                    type: string
                  type: array
                location:
                  description: Specify whether the service should be considered external
                    to the mesh or part of the mesh.
                  enum:
                    - MESH_EXTERNAL
                    - MESH_INTERNAL
                  type: string
                ports:
                  description: The ports associated with the external service.
                  items:
                    properties:
                      name:
                        description: Label assigned to the port.
                        type: string
                      number:
                        description: A valid non-negative integer port number.
                        type: integer
                      protocol:
                        description: The protocol exposed on the port.
                        type: string
                      targetPort:
                        description: The port number on the endpoint where the traffic
                          will be received.
                        type: integer
                    required:
                      - number
                      - name
                    type: object
                  type: array
                resolution:
                  description: Service resolution mode for the hosts.
                  enum:
                    - NONE
                    - STATIC
                    - DNS
                    - DNS_ROUND_ROBIN
                  type: string
                subjectAltNames:
                  description: If specified, the proxy will verify that the server
                    certificate's subject alternate name matches one of the specified
                    values.
                  items:
                    type: string
                  type: array
                workloadSelector:
                  description: Applicable only for MESH_INTERNAL services.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which the configuration should be applied.
                      type: object
                  type: object
              required:
                - hosts
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: sidecars.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: Sidecar
    listKind: SidecarList
    plural: sidecars
    singular: sidecar
  scope: Namespaced
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting network reachability of a sidecar.
                See more details at: https://istio.io/docs/reference/config/networking/sidecar.html'
              properties:
                egress:
                  description: Egress specifies the configuration of the sidecar for
                    processing outbound traffic from the attached workload instance
                    to other services in the mesh.
                  items:
                    properties:
                      bind:
                        description: The IP(IPv4 or IPv6) or the Unix domain socket
                          to which the listener should be bound to.
                        type: string
                      captureMode:
                        description: When the bind address is an IP, the captureMode
                          option dictates how traffic to the listener is expected
                          to be captured (or not).
                        enum:
                          - DEFAULT
                          - IPTABLES
                          - NONE
                        type: string
                      hosts:
                        description: One or more service hosts exposed by the listener
                          in `namespace/dnsName` format.
                        items:
                          type: string
                        type: array
                      port:
                        description: The port associated with the listener.
                        properties:
                          name:
                            description: Label assigned to the port.
                            type: string
                          number:
                            description: A valid non-negative integer port number.
                            type: integer
                          protocol:
                            description: The protocol exposed on the port.
                            type: string
                          targetPort:
                            type: integer
                        type: object
                    required:
                      - hosts
                    type: object
                  type: array
                inboundConnectionPool:
                  description: Settings controlling the volume of connections Envoy
                    will accept from the network.
                  properties:
                    http:
                      description: HTTP connection pool settings.
                      properties:
                        h2UpgradePolicy:
                          description: Specify if http1.1 connection should be upgraded
                            to http2 for the associated destination.
                          enum:
                            - DEFAULT
                            - DO_NOT_UPGRADE
                            - UPGRADE
                          type: string
                        http1MaxPendingRequests:
                          description: Maximum number of requests that will be queued
                            while waiting for a ready connection pool connection.
                          format: int32
                          type: integer
                        http2MaxRequests:
                          description: Maximum number of active requests to a destination.
                          format: int32
                          type: integer
                        idleTimeout:
                          description: The idle timeout for upstream connection pool
                            connections.
                          type: string
                        maxRequestsPerConnection:
                          description: Maximum number of requests per connection to
                            a backend.
                          format: int32
                          type: integer
                        maxRetries:
                          description: Maximum number of retries that can be outstanding
                            to all hosts in a cluster at a given time.
                          format: int32
                          type: integer
                        useClientProtocol:
                          description: If set to true, client protocol will be preserved
                            while initiating connection to backend.
                          type: boolean
                      type: object
                    tcp:
                      description: Settings common to both HTTP and TCP upstream connections.
                      properties:
                        connectTimeout:
                          description: TCP connection timeout.
                          type: string
                        maxConnectionDuration:
                          description: The maximum duration of a connection.
                          type: string
                        maxConnections:
                          description: Maximum number of HTTP1 /TCP connections to
                            a destination host.
                          format: int32
                          type: integer
                        tcpKeepalive:
                          description: If set then set SO_KEEPALIVE on the socket
                            to enable TCP Keepalives.
                          properties:
                            interval:
                              description: The time duration between keep-alive probes.
                              type: string
                            probes:
                              description: Maximum number of keepalive probes to send
                                without response before deciding the connection is
                                dead.
                              type: integer
                            time:
                              description: The time duration a connection needs to
                                be idle before keep-alive probes start being sent.
                              type: string
                          type: object
                      type: object
                  type: object
                ingress:
                  description: Ingress specifies the configuration of the sidecar
                    for processing inbound traffic to the attached workload instance.
                  items:
                    properties:
                      bind:
                        description: The IP(IPv4 or IPv6) to which the listener should
                          be bound.
                        type: string
                      captureMode:
                        description: The captureMode option dictates how traffic to
                          the listener is expected to be captured (or not).
                        enum:
                          - DEFAULT
                          - IPTABLES
                          - NONE
                        type: string
                      connectionPool:
                        description: Settings controlling the volume of connections
                          Envoy will accept from the network.
                        properties:
                          http:
                            description: HTTP connection pool settings.
                            properties:
                              h2UpgradePolicy:
                                description: Specify if http1.1 connection should
                                  be upgraded to http2 for the associated destination.
                                enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                type: string
                              http1MaxPendingRequests:
                                description: Maximum number of requests that will
                                  be queued while waiting for a ready connection pool
                                  connection.
                                format: int32
                                type: integer
                              http2MaxRequests:
                                description: Maximum number of active requests to
                                  a destination.
                                format: int32
                                type: integer
                              idleTimeout:
                                description: The idle timeout for upstream connection
                                  pool connections.
                                type: string
                              maxRequestsPerConnection:
                                description: Maximum number of requests per connection
                                  to a backend.
                                format: int32
                                type: integer
                              maxRetries:
                                description: Maximum number of retries that can be
                                  outstanding to all hosts in a cluster at a given
                                  time.
                                format: int32
                                type: integer
                              useClientProtocol:
                                description: If set to true, client protocol will
                                  be preserved while initiating connection to backend.
                                type: boolean
                            type: object
                          tcp:
                            description: Settings common to both HTTP and TCP upstream
                              connections.
                            properties:
                              connectTimeout:
                                description: TCP connection timeout.
                                type: string
                              maxConnectionDuration:
                                description: The maximum duration of a connection.
                                type: string
                              maxConnections:
                                description: Maximum number of HTTP1 /TCP connections
                                  to a destination host.
                                format: int32
                                type: integer
                              tcpKeepalive:
                                description: If set then set SO_KEEPALIVE on the socket
                                  to enable TCP Keepalives.
                                properties:
                                  interval:
                                    description: The time duration between keep-alive
                                      probes.
                                    type: string
                                  probes:
                                    description: Maximum number of keepalive probes
                                      to send without response before deciding the
                                      connection is dead.
                                    type: integer
                                  time:
                                    description: The time duration a connection needs
                                      to be idle before keep-alive probes start being
                                      sent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      defaultEndpoint:
                        description: The IP endpoint or Unix domain socket to which
                          traffic should be forwarded to.
                        type: string
                      port:
                        description: The port associated with the listener.
                        properties:
                          name:
                            description: Label assigned to the port.
                            type: string
                          number:
                            description: A valid non-negative integer port number.
                            type: integer
                          protocol:
                            description: The protocol exposed on the port.
                            type: string
                          targetPort:
                            type: integer
                        type: object
                      tls:
                        description: Set of TLS related options that will enable TLS
                          termination on the sidecar for requests originating from
                          outside the mesh.
                        properties:
                          caCertificates:
                            description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                            type: string
                          cipherSuites:
                            description: 'Optional: If specified, only support the
                              specified cipher list.'
                            items:
                              type: string
                            type: array
                          credentialName:
                            description: For gateways running on Kubernetes, the name
                              of the secret that holds the TLS certs including the
                              CA certificates.
                            type: string
                          httpsRedirect:
                            description: If set to true, the load balancer will send
                              a 301 redirect for all http connections, asking the
                              clients to use HTTPS.
                            type: boolean
                          maxProtocolVersion:
                            description: 'Optional: Maximum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          minProtocolVersion:
                            description: 'Optional: Minimum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          mode:
                            description: 'Optional: Indicates whether connections
                              to this port should be secured using TLS.'
                            enum:
                              - PASSTHROUGH
                              - SIMPLE
                              - MUTUAL
                              - AUTO_PASSTHROUGH
                              - ISTIO_MUTUAL
                              - OPTIONAL_MUTUAL
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          serverCertificate:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          subjectAltNames:
                            description: A list of alternate names to verify the subject
                              identity in the certificate presented by the client.
                            items:
                              type: string
                            type: array
                          verifyCertificateHash:
                            description: An optional list of hex-encoded SHA-256 hashes
                              of the authorized client certificates.
                            items:
                              type: string
                            type: array
                          verifyCertificateSpki:
                            description: An optional list of base64-encoded SHA-256
                              hashes of the SPKIs of authorized client certificates.
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                      - port
                    type: object
                  type: array
                outboundTrafficPolicy:
                  description: Configuration for the outbound traffic policy.
                  properties:
                    egressProxy:
                      properties:
                        host:
                          description: The name of a service from the service registry.
                          type: string
                        port:
                          description: Specifies the port on the host that is being
                            addressed.
                          properties:
                            number:
                              type: integer
                          type: object
                        subset:
                          description: The name of a subset within the service.
                          type: string
                      required:
                        - host
                      type: object
                    mode:
                      enum:
                        - REGISTRY_ONLY
                        - ALLOW_ANY
                      type: string
                  type: object
                workloadSelector:
                  description: Criteria used to select the specific set of pods/VMs
                    on which this `Sidecar` configuration should be applied.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which the configuration should be applied.
                      type: object
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting network reachability of a sidecar.
                See more details at: https://istio.io/docs/reference/config/networking/sidecar.html'
              properties:
                egress:
                  description: Egress specifies the configuration of the sidecar for
                    processing outbound traffic from the attached workload instance
                    to other services in the mesh.
                  items:
                    properties:
                      bind:
                        description: The IP(IPv4 or IPv6) or the Unix domain socket
                          to which the listener should be bound to.
                        type: string
                      captureMode:
                        description: When the bind address is an IP, the captureMode
                          option dictates how traffic to the listener is expected
                          to be captured (or not).
                        enum:
                          - DEFAULT
                          - IPTABLES
                          - NONE
                        type: string
                      hosts:
                        description: One or more service hosts exposed by the listener
                          in `namespace/dnsName` format.
                        items:
                          type: string
                        type: array
                      port:
                        description: The port associated with the listener.
                        properties:
                          name:
                            description: Label assigned to the port.
                            type: string
                          number:
                            description: A valid non-negative integer port number.
                            type: integer
                          protocol:
                            description: The protocol exposed on the port.
                            type: string
                          targetPort:
                            type: integer
                        type: object
                    required:
                      - hosts
                    type: object
                  type: array
                inboundConnectionPool:
                  description: Settings controlling the volume of connections Envoy
                    will accept from the network.
                  properties:
                    http:
                      description: HTTP connection pool settings.
                      properties:
                        h2UpgradePolicy:
                          description: Specify if http1.1 connection should be upgraded
                            to http2 for the associated destination.
                          enum:
                            - DEFAULT
                            - DO_NOT_UPGRADE
                            - UPGRADE
                          type: string
                        http1MaxPendingRequests:
                          description: Maximum number of requests that will be queued
                            while waiting for a ready connection pool connection.
                          format: int32
                          type: integer
                        http2MaxRequests:
                          description: Maximum number of active requests to a destination.
                          format: int32
                          type: integer
                        idleTimeout:
                          description: The idle timeout for upstream connection pool
                            connections.
                          type: string
                        maxRequestsPerConnection:
                          description: Maximum number of requests per connection to
                            a backend.
                          format: int32
                          type: integer
                        maxRetries:
                          description: Maximum number of retries that can be outstanding
                            to all hosts in a cluster at a given time.
                          format: int32
                          type: integer
                        useClientProtocol:
                          description: If set to true, client protocol will be preserved
                            while initiating connection to backend.
                          type: boolean
                      type: object
                    tcp:
                      description: Settings common to both HTTP and TCP upstream connections.
                      properties:
                        connectTimeout:
                          description: TCP connection timeout.
                          type: string
                        maxConnectionDuration:
                          description: The maximum duration of a connection.
                          type: string
                        maxConnections:
                          description: Maximum number of HTTP1 /TCP connections to
                            a destination host.
                          format: int32
                          type: integer
                        tcpKeepalive:
                          description: If set then set SO_KEEPALIVE on the socket
                            to enable TCP Keepalives.
                          properties:
                            interval:
                              description: The time duration between keep-alive probes.
                              type: string
                            probes:
                              description: Maximum number of keepalive probes to send
                                without response before deciding the connection is
                                dead.
                              type: integer
                            time:
                              description: The time duration a connection needs to
                                be idle before keep-alive probes start being sent.
                              type: string
                          type: object
                      type: object
                  type: object
                ingress:
                  description: Ingress specifies the configuration of the sidecar
                    for processing inbound traffic to the attached workload instance.
                  items:
                    properties:
                      bind:
                        description: The IP(IPv4 or IPv6) to which the listener should
                          be bound.
                        type: string
                      captureMode:
                        description: The captureMode option dictates how traffic to
                          the listener is expected to be captured (or not).
                        enum:
                          - DEFAULT
                          - IPTABLES
                          - NONE
                        type: string
                      connectionPool:
                        description: Settings controlling the volume of connections
                          Envoy will accept from the network.
                        properties:
                          http:
                            description: HTTP connection pool settings.
                            properties:
                              h2UpgradePolicy:
                                description: Specify if http1.1 connection should
                                  be upgraded to http2 for the associated destination.
                                enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                type: string
                              http1MaxPendingRequests:
                                description: Maximum number of requests that will
                                  be queued while waiting for a ready connection pool
                                  connection.
                                format: int32
                                type: integer
                              http2MaxRequests:
                                description: Maximum number of active requests to
                                  a destination.
                                format: int32
                                type: integer
                              idleTimeout:
                                description: The idle timeout for upstream connection
                                  pool connections.
                                type: string
                              maxRequestsPerConnection:
                                description: Maximum number of requests per connection
                                  to a backend.
                                format: int32
                                type: integer
                              maxRetries:
                                description: Maximum number of retries that can be
                                  outstanding to all hosts in a cluster at a given
                                  time.
                                format: int32
                                type: integer
                              useClientProtocol:
                                description: If set to true, client protocol will
                                  be preserved while initiating connection to backend.
                                type: boolean
                            type: object
                          tcp:
                            description: Settings common to both HTTP and TCP upstream
                              connections.
                            properties:
                              connectTimeout:
                                description: TCP connection timeout.
                                type: string
                              maxConnectionDuration:
                                description: The maximum duration of a connection.
                                type: string
                              maxConnections:
                                description: Maximum number of HTTP1 /TCP connections
                                  to a destination host.
                                format: int32
                                type: integer
                              tcpKeepalive:
                                description: If set then set SO_KEEPALIVE on the socket
                                  to enable TCP Keepalives.
                                properties:
                                  interval:
                                    description: The time duration between keep-alive
                                      probes.
                                    type: string
                                  probes:
                                    description: Maximum number of keepalive probes
                                      to send without response before deciding the
                                      connection is dead.
                                    type: integer
                                  time:
                                    description: The time duration a connection needs
                                      to be idle before keep-alive probes start being
                                      sent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      defaultEndpoint:
                        description: The IP endpoint or Unix domain socket to which
                          traffic should be forwarded to.
                        type: string
                      port:
                        description: The port associated with the listener.
                        properties:
                          name:
                            description: Label assigned to the port.
                            type: string
                          number:
                            description: A valid non-negative integer port number.
                            type: integer
                          protocol:
                            description: The protocol exposed on the port.
                            type: string
                          targetPort:
                            type: integer
                        type: object
                      tls:
                        description: Set of TLS related options that will enable TLS
                          termination on the sidecar for requests originating from
                          outside the mesh.
                        properties:
                          caCertificates:
                            description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                            type: string
                          cipherSuites:
                            description: 'Optional: If specified, only support the
                              specified cipher list.'
                            items:
                              type: string
                            type: array
                          credentialName:
                            description: For gateways running on Kubernetes, the name
                              of the secret that holds the TLS certs including the
                              CA certificates.
                            type: string
                          httpsRedirect:
                            description: If set to true, the load balancer will send
                              a 301 redirect for all http connections, asking the
                              clients to use HTTPS.
                            type: boolean
                          maxProtocolVersion:
                            description: 'Optional: Maximum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          minProtocolVersion:
                            description: 'Optional: Minimum TLS protocol version.'
                            enum:
                              - TLS_AUTO
                              - TLSV1_0
                              - TLSV1_1
                              - TLSV1_2
                              - TLSV1_3
                            type: string
                          mode:
                            description: 'Optional: Indicates whether connections
                              to this port should be secured using TLS.'
                            enum:
                              - PASSTHROUGH
                              - SIMPLE
                              - MUTUAL
                              - AUTO_PASSTHROUGH
                              - ISTIO_MUTUAL
                              - OPTIONAL_MUTUAL
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          serverCertificate:
                            description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                            type: string
                          subjectAltNames:
                            description: A list of alternate names to verify the subject
                              identity in the certificate presented by the client.
                            items:
                              type: string
                            type: array
                          verifyCertificateHash:
                            description: An optional list of hex-encoded SHA-256 hashes
                              of the authorized client certificates.
                            items:
                              type: string
                            type: array
                          verifyCertificateSpki:
                            description: An optional list of base64-encoded SHA-256
                              hashes of the SPKIs of authorized client certificates.
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                      - port
                    type: object
                  type: array
                outboundTrafficPolicy:
                  description: Configuration for the outbound traffic policy.
                  properties:
                    egressProxy:
                      properties:
                        host:
                          description: The name of a service from the service registry.
                          type: string
                        port:
                          description: Specifies the port on the host that is being
                            addressed.
                          properties:
                            number:
                              type: integer
                          type: object
                        subset:
                          description: The name of a subset within the service.
                          type: string
                      required:
                        - host
                      type: object
                    mode:
                      enum:
                        - REGISTRY_ONLY
                        - ALLOW_ANY
                      type: string
                  type: object
                workloadSelector:
                  description: Criteria used to select the specific set of pods/VMs
                    on which this `Sidecar` configuration should be applied.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which the configuration should be applied.
                      type: object
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    istio: telemetry
    release: istio
  name: telemetries.telemetry.istio.io
spec:
  group: telemetry.istio.io
  names:
    categories:
      - istio-io
      - telemetry-istio-io
    kind: Telemetry
    listKind: TelemetryList
    plural: telemetries
    shortNames:
      - telemetry
    singular: telemetry
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Telemetry configuration for workloads. See more details
                at: https://istio.io/docs/reference/config/telemetry.html'
              properties:
                accessLogging:
                  description: Optional.
                  items:
                    properties:
                      disabled:
                        description: Controls logging.
                        nullable: true
                        type: boolean
                      filter:
                        description: Optional.
                        properties:
                          expression:
                            description: CEL expression for selecting when requests/connections
                              should be logged.
                            type: string
                        type: object
                      match:
                        description: Allows tailoring of logging behavior to specific
                          conditions.
                        properties:
                          mode:
                            description: This determines whether or not to apply the
                              access logging configuration based on the direction
                              of traffic relative to the proxied workload.
                            enum:
                              - CLIENT_AND_SERVER
                              - CLIENT
                              - SERVER
                            type: string
                        type: object
                      providers:
                        description: Optional.
                        items:
                          properties:
                            name:
                              description: Required.
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                    type: object
                  type: array
                metrics:
                  description: Optional.
                  items:
                    properties:
                      overrides:
                        description: Optional.
                        items:
                          properties:
                            disabled:
                              description: Optional.
                              nullable: true
                              type: boolean
                            match:
                              description: Match allows provides the scope of the
                                override.
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - metric
                                      - required:
                                          - customMetric
                                - required:
                                    - metric
                                - required:
                                    - customMetric
                              properties:
                                customMetric:
                                  description: Allows free-form specification of a
                                    metric.
                                  type: string
                                metric:
                                  description: One of the well-known Istio Standard
                                    Metrics.
                                  enum:
                                    - ALL_METRICS
                                    - REQUEST_COUNT
                                    - REQUEST_DURATION
                                    - REQUEST_SIZE
                                    - RESPONSE_SIZE
                                    - TCP_OPENED_CONNECTIONS
                                    - TCP_CLOSED_CONNECTIONS
                                    - TCP_SENT_BYTES
                                    - TCP_RECEIVED_BYTES
                                    - GRPC_REQUEST_MESSAGES
                                    - GRPC_RESPONSE_MESSAGES
                                  type: string
                                mode:
                                  description: 'Controls which mode of metrics generation
                                    is selected: CLIENT and/or SERVER.'
                                  enum:
                                    - CLIENT_AND_SERVER
                                    - CLIENT
                                    - SERVER
                                  type: string
                              type: object
                            tagOverrides:
                              additionalProperties:
                                properties:
                                  operation:
                                    description: Operation controls whether or not
                                      to update/add a tag, or to remove it.
                                    enum:
                                      - UPSERT
                                      - REMOVE
                                    type: string
                                  value:
                                    description: Value is only considered if the operation
                                      is `UPSERT`.
                                    type: string
                                type: object
                              description: Optional.
                              type: object
                          type: object
                        type: array
                      providers:
                        description: Optional.
                        items:
                          properties:
                            name:
                              description: Required.
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                      reportingInterval:
                        description: Optional.
                        type: string
                    type: object
                  type: array
                selector:
                  description: Optional.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
                targetRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                tracing:
                  description: Optional.
                  items:
                    properties:
                      customTags:
                        additionalProperties:
                          oneOf:
                            - not:
                                anyOf:
                                  - required:
                                      - literal
                                  - required:
                                      - environment
                                  - required:
                                      - header
                            - required:
                                - literal
                            - required:
                                - environment
                            - required:
                                - header
                          properties:
                            environment:
                              description: Environment adds the value of an environment
                                variable to each span.
                              properties:
                                defaultValue:
                                  description: Optional.
                                  type: string
                                name:
                                  description: Name of the environment variable from
                                    which to extract the tag value.
                                  type: string
                              type: object
                            header:
                              description: RequestHeader adds the value of an header
                                from the request to each span.
                              properties:
                                defaultValue:
                                  description: Optional.
                                  type: string
                                name:
                                  description: Name of the header from which to extract
                                    the tag value.
                                  type: string
                              type: object
                            literal:
                              description: Literal adds the same, hard-coded value
                                to each span.
                              properties:
                                value:
                                  description: The tag value to use.
                                  type: string
                              type: object
                          type: object
                        description: Optional.
                        type: object
                      disableSpanReporting:
                        description: Controls span reporting.
                        nullable: true
                        type: boolean
                      match:
                        description: Allows tailoring of behavior to specific conditions.
                        properties:
                          mode:
                            description: This determines whether or not to apply the
                              tracing configuration based on the direction of traffic
                              relative to the proxied workload.
                            enum:
                              - CLIENT_AND_SERVER
                              - CLIENT
                              - SERVER
                            type: string
                        type: object
                      providers:
                        description: Optional.
                        items:
                          properties:
                            name:
                              description: Required.
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                      randomSamplingPercentage:
                        description: Controls the rate at which traffic will be selected
                          for tracing if no prior sampling decision has been made.
                        nullable: true
                        type: number
                      useRequestIdForTraceSampling:
                        nullable: true
                        type: boolean
                    type: object
                  type: array
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: virtualservices.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    shortNames:
      - vs
    singular: virtualservice
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The names of gateways and sidecars that should apply these
            routes
          jsonPath: .spec.gateways
          name: Gateways
          type: string
        - description: The destination hosts to which traffic is being sent
          jsonPath: .spec.hosts
          name: Hosts
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting label/content routing, sni routing,
                etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html'
              properties:
                exportTo:
                  description: A list of namespaces to which this virtual service
                    is exported.
                  items:
                    type: string
                  type: array
                gateways:
                  description: The names of gateways and sidecars that should apply
                    these routes.
                  items:
                    type: string
                  type: array
                hosts:
                  description: The destination hosts to which traffic is being sent.
                  items:
                    type: string
                  type: array
                http:
                  description: An ordered list of route rules for HTTP traffic.
                  items:
                    properties:
                      corsPolicy:
                        description: Cross-Origin Resource Sharing policy (CORS).
                        properties:
                          allowCredentials:
                            description: Indicates whether the caller is allowed to
                              send the actual request (not the preflight) using credentials.
                            nullable: true
                            type: boolean
                          allowHeaders:
                            description: List of HTTP headers that can be used when
                              requesting the resource.
                            items:
                              type: string
                            type: array
                          allowMethods:
                            description: List of HTTP methods allowed to access the
                              resource.
                            items:
                              type: string
                            type: array
                          allowOrigin:
                            items:
                              type: string
                            type: array
                          allowOrigins:
                            description: String patterns that match allowed origins.
                            items:
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            type: array
                          exposeHeaders:
                            description: A list of HTTP headers that the browsers
                              are allowed to access.
                            items:
                              type: string
                            type: array
                          maxAge:
                            description: Specifies how long the results of a preflight
                              request can be cached.
                            type: string
                        type: object
                      delegate:
                        description: Delegate is used to specify the particular VirtualService
                          which can be used to define delegate HTTPRoute.
                        properties:
                          name:
                            description: Name specifies the name of the delegate VirtualService.
                            type: string
                          namespace:
                            description: Namespace specifies the namespace where the
                              delegate VirtualService resides.
                            type: string
                        type: object
                      directResponse:
                        description: A HTTP rule can either return a direct_response,
                          redirect or forward (default) traffic.
                        properties:
                          body:
                            description: Specifies the content of the response body.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - string
                                    - required:
                                        - bytes
                              - required:
                                  - string
                              - required:
                                  - bytes
                            properties:
                              bytes:
                                description: response body as base64 encoded bytes.
                                format: binary
                                type: string
                              string:
                                type: string
                            type: object
                          status:
                            description: Specifies the HTTP response status to be
                              returned.
                            type: integer
                        required:
                          - status
                        type: object
                      fault:
                        description: Fault injection policy to apply on HTTP traffic
                          at the client side.
                        properties:
                          abort:
                            description: Abort Http request attempts and return error
                              codes back to downstream service, giving the impression
                              that the upstream service is faulty.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - httpStatus
                                    - required:
                                        - grpcStatus
                                    - required:
                                        - http2Error
                              - required:
                                  - httpStatus
                              - required:
                                  - grpcStatus
                              - required:
                                  - http2Error
                            properties:
                              grpcStatus:
                                description: GRPC status code to use to abort the
                                  request.
                                type: string
                              http2Error:
                                type: string
                              httpStatus:
                                description: HTTP status code to use to abort the
                                  Http request.
                                format: int32
                                type: integer
                              percentage:
                                description: Percentage of requests to be aborted
                                  with the error code provided.
                                properties:
                                  value:
                                    format: double
                                    type: number
                                type: object
                            type: object
                          delay:
                            description: Delay requests before forwarding, emulating
                              various failures such as network issues, overloaded
                              upstream service, etc.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - fixedDelay
                                    - required:
                                        - exponentialDelay
                              - required:
                                  - fixedDelay
                              - required:
                                  - exponentialDelay
                            properties:
                              exponentialDelay:
                                type: string
                              fixedDelay:
                                description: Add a fixed delay before forwarding the
                                  request.
                                type: string
                              percent:
                                description: Percentage of requests on which the delay
                                  will be injected (0-100).
                                format: int32
                                type: integer
                              percentage:
                                description: Percentage of requests on which the delay
                                  will be injected.
                                properties:
                                  value:
                                    format: double
                                    type: number
                                type: object
                            type: object
                        type: object
                      headers:
                        properties:
                          request:
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                type: object
                              remove:
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          response:
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                type: object
                              remove:
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated.
                        items:
                          properties:
                            authority:
                              description: 'HTTP Authority values are case-sensitive
                                and formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            gateways:
                              description: Names of gateways where the rule should
                                be applied.
                              items:
                                type: string
                              type: array
                            headers:
                              additionalProperties:
                                oneOf:
                                  - not:
                                      anyOf:
                                        - required:
                                            - exact
                                        - required:
                                            - prefix
                                        - required:
                                            - regex
                                  - required:
                                      - exact
                                  - required:
                                      - prefix
                                  - required:
                                      - regex
                                properties:
                                  exact:
                                    type: string
                                  prefix:
                                    type: string
                                  regex:
                                    description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                    type: string
                                type: object
                              description: The header keys must be lowercase and use
                                hyphen as the separator, e.g.
                              type: object
                            ignoreUriCase:
                              description: Flag to specify whether the URI matching
                                should be case-insensitive.
                              type: boolean
                            method:
                              description: 'HTTP Method values are case-sensitive
                                and formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            name:
                              description: The name assigned to a match.
                              type: string
                            port:
                              description: Specifies the ports on the host that is
                                being addressed.
                              type: integer
                            queryParams:
                              additionalProperties:
                                oneOf:
                                  - not:
                                      anyOf:
                                        - required:
                                            - exact
                                        - required:
                                            - prefix
                                        - required:
                                            - regex
                                  - required:
                                      - exact
                                  - required:
                                      - prefix
                                  - required:
                                      - regex
                                properties:
                                  exact:
                                    type: string
                                  prefix:
                                    type: string
                                  regex:
                                    description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                    type: string
                                type: object
                              description: Query parameters for matching.
                              type: object
                            scheme:
                              description: 'URI Scheme values are case-sensitive and
                                formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to source (client) workloads with the given
                                labels.
                              type: object
                            sourceNamespace:
                              description: Source namespace constraining the applicability
                                of a rule to workloads in that namespace.
                              type: string
                            statPrefix:
                              description: The human readable prefix to use when emitting
                                statistics for this route.
                              type: string
                            uri:
                              description: 'URI to match values are case-sensitive
                                and formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            withoutHeaders:
                              additionalProperties:
                                oneOf:
                                  - not:
                                      anyOf:
                                        - required:
                                            - exact
                                        - required:
                                            - prefix
                                        - required:
                                            - regex
                                  - required:
                                      - exact
                                  - required:
                                      - prefix
                                  - required:
                                      - regex
                                properties:
                                  exact:
                                    type: string
                                  prefix:
                                    type: string
                                  regex:
                                    description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                    type: string
                                type: object
                              description: withoutHeader has the same syntax with
                                the header, but has opposite meaning.
                              type: object
                          type: object
                        type: array
                      mirror:
                        description: Mirror HTTP traffic to a another destination
                          in addition to forwarding the requests to the intended destination.
                        properties:
                          host:
                            description: The name of a service from the service registry.
                            type: string
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            properties:
                              number:
                                type: integer
                            type: object
                          subset:
                            description: The name of a subset within the service.
                            type: string
                        required:
                          - host
                        type: object
                      mirror_percent:
                        nullable: true
                        type: integer
                      mirrorPercent:
                        nullable: true
                        type: integer
                      mirrorPercentage:
                        description: Percentage of the traffic to be mirrored by the
                          `mirror` field.
                        properties:
                          value:
                            format: double
                            type: number
                        type: object
                      mirrors:
                        description: Specifies the destinations to mirror HTTP traffic
                          in addition to the original destination.
                        items:
                          properties:
                            destination:
                              description: Destination specifies the target of the
                                mirror operation.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            percentage:
                              description: Percentage of the traffic to be mirrored
                                by the `destination` field.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          required:
                            - destination
                          type: object
                        type: array
                      name:
                        description: The name assigned to the route for debugging
                          purposes.
                        type: string
                      redirect:
                        description: A HTTP rule can either return a direct_response,
                          redirect or forward (default) traffic.
                        oneOf:
                          - not:
                              anyOf:
                                - required:
                                    - port
                                - required:
                                    - derivePort
                          - required:
                              - port
                          - required:
                              - derivePort
                        properties:
                          authority:
                            description: On a redirect, overwrite the Authority/Host
                              portion of the URL with this value.
                            type: string
                          derivePort:
                            description: 'On a redirect, dynamically set the port:
                              * FROM_PROTOCOL_DEFAULT: automatically set to 80 for
                              HTTP and 443 for HTTPS.'
                            enum:
                              - FROM_PROTOCOL_DEFAULT
                              - FROM_REQUEST_PORT
                            type: string
                          port:
                            description: On a redirect, overwrite the port portion
                              of the URL with this value.
                            type: integer
                          redirectCode:
                            description: On a redirect, Specifies the HTTP status
                              code to use in the redirect response.
                            type: integer
                          scheme:
                            description: On a redirect, overwrite the scheme portion
                              of the URL with this value.
                            type: string
                          uri:
                            description: On a redirect, overwrite the Path portion
                              of the URL with this value.
                            type: string
                        type: object
                      retries:
                        description: Retry policy for HTTP requests.
                        properties:
                          attempts:
                            description: Number of retries to be allowed for a given
                              request.
                            format: int32
                            type: integer
                          perTryTimeout:
                            description: Timeout per attempt for a given request,
                              including the initial call and any retries.
                            type: string
                          retryOn:
                            description: Specifies the conditions under which retry
                              takes place.
                            type: string
                          retryRemoteLocalities:
                            description: Flag to specify whether the retries should
                              retry to other localities.
                            nullable: true
                            type: boolean
                        type: object
                      rewrite:
                        description: Rewrite HTTP URIs and Authority headers.
                        properties:
                          authority:
                            description: rewrite the Authority/Host header with this
                              value.
                            type: string
                          uri:
                            description: rewrite the path (or the prefix) portion
                              of the URI with this value.
                            type: string
                          uriRegexRewrite:
                            description: rewrite the path portion of the URI with
                              the specified regex.
                            properties:
                              match:
                                description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                type: string
                              rewrite:
                                description: The string that should replace into matching
                                  portions of original URI.
                                type: string
                            type: object
                        type: object
                      route:
                        description: A HTTP rule can either return a direct_response,
                          redirect or forward (default) traffic.
                        items:
                          properties:
                            destination:
                              description: Destination uniquely identifies the instances
                                of a service to which the request/connection should
                                be forwarded to.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            headers:
                              properties:
                                request:
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    remove:
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                response:
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    remove:
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                              type: object
                            weight:
                              description: Weight specifies the relative proportion
                                of traffic to be forwarded to the destination.
                              format: int32
                              type: integer
                          required:
                            - destination
                          type: object
                        type: array
                      timeout:
                        description: Timeout for HTTP requests, default is disabled.
                        type: string
                    type: object
                  type: array
                tcp:
                  description: An ordered list of route rules for opaque TCP traffic.
                  items:
                    properties:
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated.
                        items:
                          properties:
                            destinationSubnets:
                              description: IPv4 or IPv6 ip addresses of destination
                                with optional subnet.
                              items:
                                type: string
                              type: array
                            gateways:
                              description: Names of gateways where the rule should
                                be applied.
                              items:
                                type: string
                              type: array
                            port:
                              description: Specifies the port on the host that is
                                being addressed.
                              type: integer
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels.
                              type: object
                            sourceNamespace:
                              description: Source namespace constraining the applicability
                                of a rule to workloads in that namespace.
                              type: string
                            sourceSubnet:
                              type: string
                          type: object
                        type: array
                      route:
                        description: The destination to which the connection should
                          be forwarded to.
                        items:
                          properties:
                            destination:
                              description: Destination uniquely identifies the instances
                                of a service to which the request/connection should
                                be forwarded to.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            weight:
                              description: Weight specifies the relative proportion
                                of traffic to be forwarded to the destination.
                              format: int32
                              type: integer
                          required:
                            - destination
                          type: object
                        type: array
                    type: object
                  type: array
                tls:
                  description: An ordered list of route rule for non-terminated TLS
                    & HTTPS traffic.
                  items:
                    properties:
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated.
                        items:
                          properties:
                            destinationSubnets:
                              description: IPv4 or IPv6 ip addresses of destination
                                with optional subnet.
                              items:
                                type: string
                              type: array
                            gateways:
                              description: Names of gateways where the rule should
                                be applied.
                              items:
                                type: string
                              type: array
                            port:
                              description: Specifies the port on the host that is
                                being addressed.
                              type: integer
                            sniHosts:
                              description: SNI (server name indicator) to match on.
                              items:
                                type: string
                              type: array
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels.
                              type: object
                            sourceNamespace:
                              description: Source namespace constraining the applicability
                                of a rule to workloads in that namespace.
                              type: string
                          required:
                            - sniHosts
                          type: object
                        type: array
                      route:
                        description: The destination to which the connection should
                          be forwarded to.
                        items:
                          properties:
                            destination:
                              description: Destination uniquely identifies the instances
                                of a service to which the request/connection should
                                be forwarded to.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            weight:
                              description: Weight specifies the relative proportion
                                of traffic to be forwarded to the destination.
                              format: int32
                              type: integer
                          required:
                            - destination
                          type: object
                        type: array
                    required:
                      - match
                    type: object
                  type: array
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: The names of gateways and sidecars that should apply these
            routes
          jsonPath: .spec.gateways
          name: Gateways
          type: string
        - description: The destination hosts to which traffic is being sent
          jsonPath: .spec.hosts
          name: Hosts
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting label/content routing, sni routing,
                etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html'
              properties:
                exportTo:
                  description: A list of namespaces to which this virtual service
                    is exported.
                  items:
                    type: string
                  type: array
                gateways:
                  description: The names of gateways and sidecars that should apply
                    these routes.
                  items:
                    type: string
                  type: array
                hosts:
                  description: The destination hosts to which traffic is being sent.
                  items:
                    type: string
                  type: array
                http:
                  description: An ordered list of route rules for HTTP traffic.
                  items:
                    properties:
                      corsPolicy:
                        description: Cross-Origin Resource Sharing policy (CORS).
                        properties:
                          allowCredentials:
                            description: Indicates whether the caller is allowed to
                              send the actual request (not the preflight) using credentials.
                            nullable: true
                            type: boolean
                          allowHeaders:
                            description: List of HTTP headers that can be used when
                              requesting the resource.
                            items:
                              type: string
                            type: array
                          allowMethods:
                            description: List of HTTP methods allowed to access the
                              resource.
                            items:
                              type: string
                            type: array
                          allowOrigin:
                            items:
                              type: string
                            type: array
                          allowOrigins:
                            description: String patterns that match allowed origins.
                            items:
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            type: array
                          exposeHeaders:
                            description: A list of HTTP headers that the browsers
                              are allowed to access.
                            items:
                              type: string
                            type: array
                          maxAge:
                            description: Specifies how long the results of a preflight
                              request can be cached.
                            type: string
                        type: object
                      delegate:
                        description: Delegate is used to specify the particular VirtualService
                          which can be used to define delegate HTTPRoute.
                        properties:
                          name:
                            description: Name specifies the name of the delegate VirtualService.
                            type: string
                          namespace:
                            description: Namespace specifies the namespace where the
                              delegate VirtualService resides.
                            type: string
                        type: object
                      directResponse:
                        description: A HTTP rule can either return a direct_response,
                          redirect or forward (default) traffic.
                        properties:
                          body:
                            description: Specifies the content of the response body.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - string
                                    - required:
                                        - bytes
                              - required:
                                  - string
                              - required:
                                  - bytes
                            properties:
                              bytes:
                                description: response body as base64 encoded bytes.
                                format: binary
                                type: string
                              string:
                                type: string
                            type: object
                          status:
                            description: Specifies the HTTP response status to be
                              returned.
                            type: integer
                        required:
                          - status
                        type: object
                      fault:
                        description: Fault injection policy to apply on HTTP traffic
                          at the client side.
                        properties:
                          abort:
                            description: Abort Http request attempts and return error
                              codes back to downstream service, giving the impression
                              that the upstream service is faulty.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - httpStatus
                                    - required:
                                        - grpcStatus
                                    - required:
                                        - http2Error
                              - required:
                                  - httpStatus
                              - required:
                                  - grpcStatus
                              - required:
                                  - http2Error
                            properties:
                              grpcStatus:
                                description: GRPC status code to use to abort the
                                  request.
                                type: string
                              http2Error:
                                type: string
                              httpStatus:
                                description: HTTP status code to use to abort the
                                  Http request.
                                format: int32
                                type: integer
                              percentage:
                                description: Percentage of requests to be aborted
                                  with the error code provided.
                                properties:
                                  value:
                                    format: double
                                    type: number
                                type: object
                            type: object
                          delay:
                            description: Delay requests before forwarding, emulating
                              various failures such as network issues, overloaded
                              upstream service, etc.
                            oneOf:
                              - not:
                                  anyOf:
                                    - required:
                                        - fixedDelay
                                    - required:
                                        - exponentialDelay
                              - required:
                                  - fixedDelay
                              - required:
                                  - exponentialDelay
                            properties:
                              exponentialDelay:
                                type: string
                              fixedDelay:
                                description: Add a fixed delay before forwarding the
                                  request.
                                type: string
                              percent:
                                description: Percentage of requests on which the delay
                                  will be injected (0-100).
                                format: int32
                                type: integer
                              percentage:
                                description: Percentage of requests on which the delay
                                  will be injected.
                                properties:
                                  value:
                                    format: double
                                    type: number
                                type: object
                            type: object
                        type: object
                      headers:
                        properties:
                          request:
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                type: object
                              remove:
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          response:
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                type: object
                              remove:
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated.
                        items:
                          properties:
                            authority:
                              description: 'HTTP Authority values are case-sensitive
                                and formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            gateways:
                              description: Names of gateways where the rule should
                                be applied.
                              items:
                                type: string
                              type: array
                            headers:
                              additionalProperties:
                                oneOf:
                                  - not:
                                      anyOf:
                                        - required:
                                            - exact
                                        - required:
                                            - prefix
                                        - required:
                                            - regex
                                  - required:
                                      - exact
                                  - required:
                                      - prefix
                                  - required:
                                      - regex
                                properties:
                                  exact:
                                    type: string
                                  prefix:
                                    type: string
                                  regex:
                                    description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                    type: string
                                type: object
                              description: The header keys must be lowercase and use
                                hyphen as the separator, e.g.
                              type: object
                            ignoreUriCase:
                              description: Flag to specify whether the URI matching
                                should be case-insensitive.
                              type: boolean
                            method:
                              description: 'HTTP Method values are case-sensitive
                                and formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            name:
                              description: The name assigned to a match.
                              type: string
                            port:
                              description: Specifies the ports on the host that is
                                being addressed.
                              type: integer
                            queryParams:
                              additionalProperties:
                                oneOf:
                                  - not:
                                      anyOf:
                                        - required:
                                            - exact
                                        - required:
                                            - prefix
                                        - required:
                                            - regex
                                  - required:
                                      - exact
                                  - required:
                                      - prefix
                                  - required:
                                      - regex
                                properties:
                                  exact:
                                    type: string
                                  prefix:
                                    type: string
                                  regex:
                                    description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                    type: string
                                type: object
                              description: Query parameters for matching.
                              type: object
                            scheme:
                              description: 'URI Scheme values are case-sensitive and
                                formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to source (client) workloads with the given
                                labels.
                              type: object
                            sourceNamespace:
                              description: Source namespace constraining the applicability
                                of a rule to workloads in that namespace.
                              type: string
                            statPrefix:
                              description: The human readable prefix to use when emitting
                                statistics for this route.
                              type: string
                            uri:
                              description: 'URI to match values are case-sensitive
                                and formatted as follows: - `exact: "value"` for exact
                                string match - `prefix: "value"` for prefix-based
                                match - `regex: "value"` for RE2 style regex-based
                                match (https://github.com/google/re2/wiki/Syntax).'
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - exact
                                      - required:
                                          - prefix
                                      - required:
                                          - regex
                                - required:
                                    - exact
                                - required:
                                    - prefix
                                - required:
                                    - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                  type: string
                              type: object
                            withoutHeaders:
                              additionalProperties:
                                oneOf:
                                  - not:
                                      anyOf:
                                        - required:
                                            - exact
                                        - required:
                                            - prefix
                                        - required:
                                            - regex
                                  - required:
                                      - exact
                                  - required:
                                      - prefix
                                  - required:
                                      - regex
                                properties:
                                  exact:
                                    type: string
                                  prefix:
                                    type: string
                                  regex:
                                    description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                    type: string
                                type: object
                              description: withoutHeader has the same syntax with
                                the header, but has opposite meaning.
                              type: object
                          type: object
                        type: array
                      mirror:
                        description: Mirror HTTP traffic to a another destination
                          in addition to forwarding the requests to the intended destination.
                        properties:
                          host:
                            description: The name of a service from the service registry.
                            type: string
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            properties:
                              number:
                                type: integer
                            type: object
                          subset:
                            description: The name of a subset within the service.
                            type: string
                        required:
                          - host
                        type: object
                      mirror_percent:
                        nullable: true
                        type: integer
                      mirrorPercent:
                        nullable: true
                        type: integer
                      mirrorPercentage:
                        description: Percentage of the traffic to be mirrored by the
                          `mirror` field.
                        properties:
                          value:
                            format: double
                            type: number
                        type: object
                      mirrors:
                        description: Specifies the destinations to mirror HTTP traffic
                          in addition to the original destination.
                        items:
                          properties:
                            destination:
                              description: Destination specifies the target of the
                                mirror operation.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            percentage:
                              description: Percentage of the traffic to be mirrored
                                by the `destination` field.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          required:
                            - destination
                          type: object
                        type: array
                      name:
                        description: The name assigned to the route for debugging
                          purposes.
                        type: string
                      redirect:
                        description: A HTTP rule can either return a direct_response,
                          redirect or forward (default) traffic.
                        oneOf:
                          - not:
                              anyOf:
                                - required:
                                    - port
                                - required:
                                    - derivePort
                          - required:
                              - port
                          - required:
                              - derivePort
                        properties:
                          authority:
                            description: On a redirect, overwrite the Authority/Host
                              portion of the URL with this value.
                            type: string
                          derivePort:
                            description: 'On a redirect, dynamically set the port:
                              * FROM_PROTOCOL_DEFAULT: automatically set to 80 for
                              HTTP and 443 for HTTPS.'
                            enum:
                              - FROM_PROTOCOL_DEFAULT
                              - FROM_REQUEST_PORT
                            type: string
                          port:
                            description: On a redirect, overwrite the port portion
                              of the URL with this value.
                            type: integer
                          redirectCode:
                            description: On a redirect, Specifies the HTTP status
                              code to use in the redirect response.
                            type: integer
                          scheme:
                            description: On a redirect, overwrite the scheme portion
                              of the URL with this value.
                            type: string
                          uri:
                            description: On a redirect, overwrite the Path portion
                              of the URL with this value.
                            type: string
                        type: object
                      retries:
                        description: Retry policy for HTTP requests.
                        properties:
                          attempts:
                            description: Number of retries to be allowed for a given
                              request.
                            format: int32
                            type: integer
                          perTryTimeout:
                            description: Timeout per attempt for a given request,
                              including the initial call and any retries.
                            type: string
                          retryOn:
                            description: Specifies the conditions under which retry
                              takes place.
                            type: string
                          retryRemoteLocalities:
                            description: Flag to specify whether the retries should
                              retry to other localities.
                            nullable: true
                            type: boolean
                        type: object
                      rewrite:
                        description: Rewrite HTTP URIs and Authority headers.
                        properties:
                          authority:
                            description: rewrite the Authority/Host header with this
                              value.
                            type: string
                          uri:
                            description: rewrite the path (or the prefix) portion
                              of the URI with this value.
                            type: string
                          uriRegexRewrite:
                            description: rewrite the path portion of the URI with
                              the specified regex.
                            properties:
                              match:
                                description: RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
                                type: string
                              rewrite:
                                description: The string that should replace into matching
                                  portions of original URI.
                                type: string
                            type: object
                        type: object
                      route:
                        description: A HTTP rule can either return a direct_response,
                          redirect or forward (default) traffic.
                        items:
                          properties:
                            destination:
                              description: Destination uniquely identifies the instances
                                of a service to which the request/connection should
                                be forwarded to.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            headers:
                              properties:
                                request:
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    remove:
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                response:
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    remove:
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                              type: object
                            weight:
                              description: Weight specifies the relative proportion
                                of traffic to be forwarded to the destination.
                              format: int32
                              type: integer
                          required:
                            - destination
                          type: object
                        type: array
                      timeout:
                        description: Timeout for HTTP requests, default is disabled.
                        type: string
                    type: object
                  type: array
                tcp:
                  description: An ordered list of route rules for opaque TCP traffic.
                  items:
                    properties:
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated.
                        items:
                          properties:
                            destinationSubnets:
                              description: IPv4 or IPv6 ip addresses of destination
                                with optional subnet.
                              items:
                                type: string
                              type: array
                            gateways:
                              description: Names of gateways where the rule should
                                be applied.
                              items:
                                type: string
                              type: array
                            port:
                              description: Specifies the port on the host that is
                                being addressed.
                              type: integer
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels.
                              type: object
                            sourceNamespace:
                              description: Source namespace constraining the applicability
                                of a rule to workloads in that namespace.
                              type: string
                            sourceSubnet:
                              type: string
                          type: object
                        type: array
                      route:
                        description: The destination to which the connection should
                          be forwarded to.
                        items:
                          properties:
                            destination:
                              description: Destination uniquely identifies the instances
                                of a service to which the request/connection should
                                be forwarded to.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            weight:
                              description: Weight specifies the relative proportion
                                of traffic to be forwarded to the destination.
                              format: int32
                              type: integer
                          required:
                            - destination
                          type: object
                        type: array
                    type: object
                  type: array
                tls:
                  description: An ordered list of route rule for non-terminated TLS
                    & HTTPS traffic.
                  items:
                    properties:
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated.
                        items:
                          properties:
                            destinationSubnets:
                              description: IPv4 or IPv6 ip addresses of destination
                                with optional subnet.
                              items:
                                type: string
                              type: array
                            gateways:
                              description: Names of gateways where the rule should
                                be applied.
                              items:
                                type: string
                              type: array
                            port:
                              description: Specifies the port on the host that is
                                being addressed.
                              type: integer
                            sniHosts:
                              description: SNI (server name indicator) to match on.
                              items:
                                type: string
                              type: array
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels.
                              type: object
                            sourceNamespace:
                              description: Source namespace constraining the applicability
                                of a rule to workloads in that namespace.
                              type: string
                          required:
                            - sniHosts
                          type: object
                        type: array
                      route:
                        description: The destination to which the connection should
                          be forwarded to.
                        items:
                          properties:
                            destination:
                              description: Destination uniquely identifies the instances
                                of a service to which the request/connection should
                                be forwarded to.
                              properties:
                                host:
                                  description: The name of a service from the service
                                    registry.
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed.
                                  properties:
                                    number:
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                  type: string
                              required:
                                - host
                              type: object
                            weight:
                              description: Weight specifies the relative proportion
                                of traffic to be forwarded to the destination.
                              format: int32
                              type: integer
                          required:
                            - destination
                          type: object
                        type: array
                    required:
                      - match
                    type: object
                  type: array
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: wasmplugins.extensions.istio.io
spec:
  group: extensions.istio.io
  names:
    categories:
      - istio-io
      - extensions-istio-io
    kind: WasmPlugin
    listKind: WasmPluginList
    plural: wasmplugins
    singular: wasmplugin
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Extend the functionality provided by the Istio proxy through
                WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html'
              properties:
                failStrategy:
                  description: Specifies the failure behavior for the plugin due to
                    fatal errors.
                  enum:
                    - FAIL_CLOSE
                    - FAIL_OPEN
                  type: string
                imagePullPolicy:
                  description: The pull behaviour to be applied when fetching Wasm
                    module by either OCI image or http/https.
                  enum:
                    - UNSPECIFIED_POLICY
                    - IfNotPresent
                    - Always
                  type: string
                imagePullSecret:
                  description: Credentials to use for OCI image pulling.
                  maxLength: 253
                  minLength: 1
                  type: string
                match:
                  description: Specifies the criteria to determine which traffic is
                    passed to WasmPlugin.
                  items:
                    properties:
                      mode:
                        description: Criteria for selecting traffic by their direction.
                        enum:
                          - UNDEFINED
                          - CLIENT
                          - SERVER
                          - CLIENT_AND_SERVER
                        type: string
                      ports:
                        description: Criteria for selecting traffic by their destination
                          port.
                        items:
                          properties:
                            number:
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                            - number
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - number
                        x-kubernetes-list-type: map
                    type: object
                  type: array
                phase:
                  description: Determines where in the filter chain this `WasmPlugin`
                    is to be injected.
                  enum:
                    - UNSPECIFIED_PHASE
                    - AUTHN
                    - AUTHZ
                    - STATS
                  type: string
                pluginConfig:
                  description: The configuration that will be passed on to the plugin.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                pluginName:
                  description: The plugin name to be used in the Envoy configuration
                    (used to be called `rootID`).
                  maxLength: 256
                  minLength: 1
                  type: string
                priority:
                  description: Determines ordering of `WasmPlugins` in the same `phase`.
                  nullable: true
                  type: integer
                selector:
                  description: Criteria used to select the specific set of pods/VMs
                    on which this plugin configuration should be applied.
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: One or more labels that indicate a specific set
                        of pods/VMs on which a policy should be applied.
                      type: object
                  type: object
                sha256:
                  description: SHA256 checksum that will be used to verify Wasm module
                    or OCI container.
                  pattern: (^$|^[a-f0-9]{64}$)
                  type: string
                targetRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                type:
                  description: Specifies the type of Wasm Extension to be used.
                  enum:
                    - UNSPECIFIED_PLUGIN_TYPE
                    - HTTP
                    - NETWORK
                  type: string
                url:
                  description: URL of a Wasm module or OCI container.
                  minLength: 1
                  type: string
                  x-kubernetes-validations:
                    - message: url must have schema one of [http, https, file, oci]
                      rule: 'isURL(self) ? (url(self).getScheme() in ['''', ''http'',
                        ''https'', ''oci'', ''file'']) : (isURL(''http://'' + self)
                        && url(''http://'' +self).getScheme() in ['''', ''http'',
                        ''https'', ''oci'', ''file''])'
                verificationKey:
                  type: string
                vmConfig:
                  description: Configuration for a Wasm VM.
                  properties:
                    env:
                      description: Specifies environment variables to be injected
                        to this VM.
                      items:
                        properties:
                          name:
                            description: Name of the environment variable.
                            maxLength: 256
                            minLength: 1
                            type: string
                          value:
                            description: Value for the environment variable.
                            maxLength: 2048
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                            enum:
                              - INLINE
                              - HOST
                            type: string
                        required:
                          - name
                        type: object
                        x-kubernetes-validations:
                          - message: value may only be set when valueFrom is INLINE
                            rule: '(has(self.valueFrom) ? self.valueFrom : '''') !=
                              ''HOST'' || !has(self.value)'
                      maxItems: 256
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                  type: object
              required:
                - url
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: workloadentries.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: WorkloadEntry
    listKind: WorkloadEntryList
    plural: workloadentries
    shortNames:
      - we
    singular: workloadentry
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Address associated with the network endpoint.
          jsonPath: .spec.address
          name: Address
          type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting VMs onboarded into the mesh. See
                more details at: https://istio.io/docs/reference/config/networking/workload-entry.html'
              properties:
                address:
                  description: Address associated with the network endpoint without
                    the port.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: One or more labels associated with the endpoint.
                  type: object
                locality:
                  description: The locality associated with the endpoint.
                  type: string
                network:
                  description: Network enables Istio to group endpoints resident in
                    the same L3 domain/network.
                  type: string
                ports:
                  additionalProperties:
                    type: integer
                  description: Set of ports associated with the endpoint.
                  type: object
                serviceAccount:
                  description: The service account associated with the workload if
                    a sidecar is present in the workload.
                  type: string
                weight:
                  description: The load balancing weight associated with the endpoint.
                  type: integer
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Address associated with the network endpoint.
          jsonPath: .spec.address
          name: Address
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Configuration affecting VMs onboarded into the mesh. See
                more details at: https://istio.io/docs/reference/config/networking/workload-entry.html'
              properties:
                address:
                  description: Address associated with the network endpoint without
                    the port.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: One or more labels associated with the endpoint.
                  type: object
                locality:
                  description: The locality associated with the endpoint.
                  type: string
                network:
                  description: Network enables Istio to group endpoints resident in
                    the same L3 domain/network.
                  type: string
                ports:
                  additionalProperties:
                    type: integer
                  description: Set of ports associated with the endpoint.
                  type: object
                serviceAccount:
                  description: The service account associated with the workload if
                    a sidecar is present in the workload.
                  type: string
                weight:
                  description: The load balancing weight associated with the endpoint.
                  type: integer
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
  name: workloadgroups.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
      - istio-io
      - networking-istio-io
    kind: WorkloadGroup
    listKind: WorkloadGroupList
    plural: workloadgroups
    shortNames:
      - wg
    singular: workloadgroup
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: 'Describes a collection of workload instances. See more
                details at: https://istio.io/docs/reference/config/networking/workload-group.html'
              properties:
                metadata:
                  description: Metadata that will be used for all corresponding `WorkloadEntries`.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                probe:
                  description: '`ReadinessProbe` describes the configuration the user
                    must provide for healthchecking on their workload.'
                  oneOf:
                    - not:
                        anyOf:
                          - required:
                              - httpGet
                          - required:
                              - tcpSocket
                          - required:
                              - exec
                    - required:
                        - httpGet
                    - required:
                        - tcpSocket
                    - required:
                        - exec
                  properties:
                    exec:
                      description: Health is determined by how the command that is
                        executed exited.
                      properties:
                        command:
                          description: Command to run.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded.
                      format: int32
                      type: integer
                    httpGet:
                      description: '`httpGet` is performed to a given endpoint and
                        the status/able to connect determines health.'
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP.
                          type: string
                        httpHeaders:
                          description: Headers the proxy will pass on to make the
                            request.
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          description: Port on which the endpoint lives.
                          type: integer
                        scheme:
                          type: string
                      required:
                        - port
                      type: object
                    initialDelaySeconds:
                      description: Number of seconds after the container has started
                        before readiness probes are initiated.
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: Health is determined by if the proxy is able to
                        connect.
                      properties:
                        host:
                          type: string
                        port:
                          type: integer
                      required:
                        - port
                      type: object
                    timeoutSeconds:
                      description: Number of seconds after which the probe times out.
                      format: int32
                      type: integer
                  type: object
                template:
                  description: Template to be used for the generation of `WorkloadEntry`
                    resources that belong to this `WorkloadGroup`.
                  properties:
                    address:
                      description: Address associated with the network endpoint without
                        the port.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels associated with the endpoint.
                      type: object
                    locality:
                      description: The locality associated with the endpoint.
                      type: string
                    network:
                      description: Network enables Istio to group endpoints resident
                        in the same L3 domain/network.
                      type: string
                    ports:
                      additionalProperties:
                        type: integer
                      description: Set of ports associated with the endpoint.
                      type: object
                    serviceAccount:
                      description: The service account associated with the workload
                        if a sidecar is present in the workload.
                      type: string
                    weight:
                      description: The load balancing weight associated with the endpoint.
                      type: integer
                  type: object
              required:
                - template
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: 'CreationTimestamp is a timestamp representing the server time
            when this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC. Populated by the system. Read-only.
            Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: '`WorkloadGroup` enables specifying the properties of a
                single workload for bootstrap and provides a template for `WorkloadEntry`,
                similar to how `Deployment` specifies properties of workloads via
                `Pod` templates.'
              properties:
                metadata:
                  description: Metadata that will be used for all corresponding `WorkloadEntries`.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                probe:
                  description: '`ReadinessProbe` describes the configuration the user
                    must provide for healthchecking on their workload.'
                  oneOf:
                    - not:
                        anyOf:
                          - required:
                              - httpGet
                          - required:
                              - tcpSocket
                          - required:
                              - exec
                    - required:
                        - httpGet
                    - required:
                        - tcpSocket
                    - required:
                        - exec
                  properties:
                    exec:
                      description: Health is determined by how the command that is
                        executed exited.
                      properties:
                        command:
                          description: Command to run.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded.
                      format: int32
                      type: integer
                    httpGet:
                      description: '`httpGet` is performed to a given endpoint and
                        the status/able to connect determines health.'
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP.
                          type: string
                        httpHeaders:
                          description: Headers the proxy will pass on to make the
                            request.
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          description: Port on which the endpoint lives.
                          type: integer
                        scheme:
                          type: string
                      required:
                        - port
                      type: object
                    initialDelaySeconds:
                      description: Number of seconds after the container has started
                        before readiness probes are initiated.
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: Health is determined by if the proxy is able to
                        connect.
                      properties:
                        host:
                          type: string
                        port:
                          type: integer
                      required:
                        - port
                      type: object
                    timeoutSeconds:
                      description: Number of seconds after which the probe times out.
                      format: int32
                      type: integer
                  type: object
                template:
                  description: Template to be used for the generation of `WorkloadEntry`
                    resources that belong to this `WorkloadGroup`.
                  properties:
                    address:
                      description: Address associated with the network endpoint without
                        the port.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels associated with the endpoint.
                      type: object
                    locality:
                      description: The locality associated with the endpoint.
                      type: string
                    network:
                      description: Network enables Istio to group endpoints resident
                        in the same L3 domain/network.
                      type: string
                    ports:
                      additionalProperties:
                        type: integer
                      description: Set of ports associated with the endpoint.
                      type: object
                    serviceAccount:
                      description: The service account associated with the workload
                        if a sidecar is present in the workload.
                      type: string
                    weight:
                      description: The load balancing weight associated with the endpoint.
                      type: integer
                  type: object
              required:
                - template
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway-service-account
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-service-account
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-clusterrole-istio-system
rules:
  - apiGroups:
      - config.istio.io
      - security.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - endpoints
      - pods
      - services
      - nodes
      - replicationcontrollers
      - namespaces
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.istio.io
    resources:
      - workloadentries
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - gateways
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-clusterrole-istio-system
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - config.istio.io
      - security.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
      - telemetry.istio.io
      - extensions.istio.io
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.istio.io
    resources:
      - workloadentries
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - networking.istio.io
    resources:
      - workloadentries/status
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods
      - nodes
      - services
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - '*'
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - '*'
    verbs:
      - update
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
    verbs:
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceexports
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - serviceimports
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-gateway-controller-istio-system
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - ''
    resources:
      - serviceaccounts
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istio-reader
    release: istio
  name: istio-reader-clusterrole-istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader-clusterrole-istio-system
subjects:
  - kind: ServiceAccount
    name: istio-reader-service-account
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-clusterrole-istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-clusterrole-istio-system
subjects:
  - kind: ServiceAccount
    name: istiod
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod-gateway-controller-istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-gateway-controller-istio-system
subjects:
  - kind: ServiceAccount
    name: istiod
    namespace: istio-system
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: istiod
    istio: istiod
    istio.io/rev: default
    release: istio
  name: istio-validator-istio-system
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /validate
    failurePolicy: Ignore
    name: rev.validation.istio.io
    objectSelector:
      matchExpressions:
        - key: istio.io/rev
          operator: In
          values:
            - default
    rules:
      - apiGroups:
          - security.istio.io
          - networking.istio.io
          - telemetry.istio.io
          - extensions.istio.io
        apiVersions:
          - '*'
        operations:
          - CREATE
          - UPDATE
        resources:
          - '*'
    sideEffects: None
---
apiVersion: v1
data:
  mesh: "defaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  proxyMetadata:\
    \ {}\n  tracing:\n    zipkin:\n      address: zipkin.istio-system:9411\ndefaultProviders:\n\
    \  metrics:\n  - prometheus\nenablePrometheusMerge: true\nrootNamespace: istio-system\n\
    trustDomain: cluster.local"
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istio
  namespace: istio-system
---
apiVersion: v1
data:
  config: "# defaultTemplates defines the default template to use for pods that do\
    \ not explicitly specify a template\ndefaultTemplates: [sidecar]\npolicy: enabled\n\
    alwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ninjectedAnnotations:\n\
    template: \"{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation\
    \ }}\"\ntemplates:\n  sidecar: |\n    {{- define \"resources\"  }}\n      {{-\
    \ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n   \
    \     {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset\
    \ .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n          requests:\n\
    \            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end\
    \ }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n   \
    \       limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{-\
    \ end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n\
    \          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{-\
    \ end }}\n      {{- end }}\n    {{- end }}\n    {{ $nativeSidecar := (eq (env\
    \ \"ENABLE_NATIVE_SIDECARS\" \"false\") \"true\") }}\n    {{- $containers := list\
    \ }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name\
    \ \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{-\
    \ end}}\n    metadata:\n      labels:\n        security.istio.io/tlsMode: {{ index\
    \ .ObjectMeta.Labels `security.istio.io/tlsMode` | default \"istio\"  | quote\
    \ }}\n        {{- if eq (index .ProxyConfig.ProxyMetadata \"ISTIO_META_ENABLE_HBONE\"\
    ) \"true\" }}\n        networking.istio.io/tunnel: {{ index .ObjectMeta.Labels\
    \ `networking.istio.io/tunnel` | default \"http\"  | quote }}\n        {{- end\
    \ }}\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name`\
    \ | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index\
    \ .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n     \
    \   service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision`\
    \ | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index\
    \ .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n      annotations:\
    \ {\n        istio.io/rev: {{ .Revision | default \"default\" | quote }},\n  \
    \      {{- if ge (len $containers) 1 }}\n        {{- if not (isset .ObjectMeta.Annotations\
    \ `kubectl.kubernetes.io/default-logs-container`) }}\n        kubectl.kubernetes.io/default-logs-container:\
    \ \"{{ index $containers 0 }}\",\n        {{- end }}\n        {{- if not (isset\
    \ .ObjectMeta.Annotations `kubectl.kubernetes.io/default-container`) }}\n    \
    \    kubectl.kubernetes.io/default-container: \"{{ index $containers 0 }}\",\n\
    \        {{- end }}\n        {{- end }}\n    {{- if .Values.istio_cni.enabled\
    \ }}\n        {{- if not .Values.istio_cni.chained }}\n        k8s.v1.cni.cncf.io/networks:\
    \ '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`)\
    \ `default/istio-cni` }}',\n        {{- end }}\n        sidecar.istio.io/interceptionMode:\
    \ \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode\
    \ }}\",\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges`\
    \ .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges:\
    \ \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges`\
    \ .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges:\
    \ \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts`\
    \ .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts:\
    \ \"{{.}}\",{{ end }}\n        traffic.sidecar.istio.io/excludeInboundPorts: \"\
    {{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)\
    \ (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts)\
    \ }}\",\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`)\
    \ (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") }}\n\
    \        traffic.sidecar.istio.io/includeOutboundPorts: \"{{ annotation .ObjectMeta\
    \ `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts\
    \ }}\",\n        {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`)\
    \ (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n        traffic.sidecar.istio.io/excludeOutboundPorts:\
    \ \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts`\
    \ .Values.global.proxy.excludeOutboundPorts }}\",\n        {{- end }}\n      \
    \  {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`\
    \ }}traffic.sidecar.istio.io/kubevirtInterfaces: \"{{.}}\",{{ end }}\n       \
    \ {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces`\
    \ }}traffic.sidecar.istio.io/excludeInterfaces: \"{{.}}\",{{ end }}\n    {{- end\
    \ }}\n      }\n    spec:\n      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue\
    \ .Values.global.proxy.holdApplicationUntilProxyStarts }}\n      initContainers:\n\
    \      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode)\
    \ `NONE` }}\n      {{ if .Values.istio_cni.enabled -}}\n      - name: istio-validation\n\
    \      {{ else -}}\n      - name: istio-init\n      {{ end -}}\n      {{- if contains\
    \ \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image)\
    \ }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy_init.image }}\"\n      {{- else }}\n        image: \"{{\
    \ .ProxyImage }}\"\n      {{- end }}\n        args:\n        - istio-iptables\n\
    \        - \"-p\"\n        - {{ .MeshConfig.ProxyListenPort | default \"15001\"\
    \ | quote }}\n        - \"-z\"\n        - {{ .MeshConfig.ProxyInboundListenPort\
    \ | default \"15006\" | quote }}\n        - \"-u\"\n        - {{ .ProxyUID | default\
    \ \"1337\" | quote }}\n        - \"-m\"\n        - \"{{ annotation .ObjectMeta\
    \ `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n   \
    \     - \"-i\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges`\
    \ .Values.global.proxy.includeIPRanges }}\"\n        - \"-x\"\n        - \"{{\
    \ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges\
    \ }}\"\n        - \"-b\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts`\
    \ .Values.global.proxy.includeInboundPorts }}\"\n        - \"-d\"\n      {{- if\
    \ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)\
    \ (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts)\
    \ }}\n        - \"15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port`\
    \ .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts`\
    \ .Values.global.proxy.excludeInboundPorts) }}\"\n      {{- else }}\n        -\
    \ \"15090,15021\"\n      {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations\
    \ `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts\
    \ \"\") \"\") -}}\n        - \"-q\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts`\
    \ .Values.global.proxy.includeOutboundPorts }}\"\n        {{ end -}}\n       \
    \ {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`)\
    \ (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \"\") \"\") -}}\n\
    \        - \"-o\"\n        - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts`\
    \ .Values.global.proxy.excludeOutboundPorts }}\"\n        {{ end -}}\n       \
    \ {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`)\
    \ -}}\n        - \"-k\"\n        - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`\
    \ }}\"\n        {{ end -}}\n         {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces`)\
    \ -}}\n        - \"-c\"\n        - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces`\
    \ }}\"\n        {{ end -}}\n        - \"--log_output_level={{ annotation .ObjectMeta\
    \ `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\"\n       \
    \ {{ if .Values.global.logAsJson -}}\n        - \"--log_as_json\"\n        {{\
    \ end -}}\n        {{ if .Values.istio_cni.enabled -}}\n        - \"--run-validation\"\
    \n        - \"--skip-rule-apply\"\n        {{ end -}}\n        {{with .Values.global.imagePullPolicy\
    \ }}imagePullPolicy: \"{{.}}\"{{end}}\n      {{- if .ProxyConfig.ProxyMetadata\
    \ }}\n        env:\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{-\
    \ end }}\n      {{- end }}\n        resources:\n      {{ template \"resources\"\
    \ . }}\n        securityContext:\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged\
    \ }}\n          privileged: {{ .Values.global.proxy.privileged }}\n          capabilities:\n\
    \        {{- if not .Values.istio_cni.enabled }}\n            add:\n         \
    \   - NET_ADMIN\n            - NET_RAW\n        {{- end }}\n            drop:\n\
    \            - ALL\n        {{- if not .Values.istio_cni.enabled }}\n        \
    \  readOnlyRootFilesystem: false\n          runAsGroup: 0\n          runAsNonRoot:\
    \ false\n          runAsUser: 0\n        {{- else }}\n          readOnlyRootFilesystem:\
    \ true\n          runAsGroup: {{ .ProxyGID | default \"1337\" }}\n          runAsUser:\
    \ {{ .ProxyUID | default \"1337\" }}\n          runAsNonRoot: true\n        {{-\
    \ end }}\n      {{ end -}}\n      {{- if eq (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump`\
    \ .Values.global.proxy.enableCoreDump) \"true\" }}\n      - name: enable-core-dump\n\
    \        args:\n        - -c\n        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy\
    \ && ulimit -c unlimited\n        command:\n          - /bin/sh\n      {{- if\
    \ contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image)\
    \ }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy_init.image }}\"\n      {{- else }}\n        image: \"{{\
    \ .ProxyImage }}\"\n      {{- end }}\n        {{with .Values.global.imagePullPolicy\
    \ }}imagePullPolicy: \"{{.}}\"{{end}}\n        resources:\n      {{ template \"\
    resources\" . }}\n        securityContext:\n          allowPrivilegeEscalation:\
    \ true\n          capabilities:\n            add:\n            - SYS_ADMIN\n \
    \           drop:\n            - ALL\n          privileged: true\n          readOnlyRootFilesystem:\
    \ false\n          runAsGroup: 0\n          runAsNonRoot: false\n          runAsUser:\
    \ 0\n      {{ end }}\n      {{ if not $nativeSidecar }}\n      containers:\n \
    \     {{ end }}\n      - name: istio-proxy\n      {{- if contains \"/\" (annotation\
    \ .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n \
    \       image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image\
    \ }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end\
    \ }}\n        {{ if $nativeSidecar }}restartPolicy: Always{{end}}\n        ports:\n\
    \        - containerPort: 15090\n          protocol: TCP\n          name: http-envoy-prom\n\
    \        args:\n        - proxy\n        - sidecar\n        - --domain\n     \
    \   - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n        -\
    \ --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel\
    \ }}\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel`\
    \ .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n\
    \      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort\
    \ }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n\
    \      {{- end }}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n\
    \          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- else\
    \ if $holdProxy }}\n        lifecycle:\n          postStart:\n            exec:\n\
    \              command:\n              - pilot-agent\n              - wait\n \
    \     {{- end }}\n        env:\n        {{- if eq (env \"PILOT_ENABLE_INBOUND_PASSTHROUGH\"\
    \ \"true\") \"false\" }}\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\n\
    \          value: \"true\"\n        {{- end }}\n        - name: JWT_POLICY\n \
    \         value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n\
    \          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n\
    \        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress\
    \ }}\n        {{- else }}\n          value: istiod{{- if not (eq .Values.revision\
    \ \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n\
    \        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n        \
    \    fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n\
    \          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n\
    \        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n  \
    \            fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n      \
    \    valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n\
    \        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n      \
    \        fieldPath: status.hostIP\n        - name: ISTIO_CPU_LIMIT\n         \
    \ valueFrom:\n            resourceFieldRef:\n              resource: limits.cpu\n\
    \        - name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON\
    \ .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n\
    \            [\n            {{- $first := true }}\n            {{- range $index1,\
    \ $c := .Spec.Containers }}\n              {{- range $index2, $p := $c.Ports }}\n\
    \                {{- if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{\
    \ structToJSON $p }}\n                {{- $first = false }}\n                {{-\
    \ end }}\n              {{- end}}\n            {{- end}}\n            ]\n    \
    \    - name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join\
    \ \",\" }}\"\n        - name: GOMEMLIMIT\n          valueFrom:\n            resourceFieldRef:\n\
    \              resource: limits.memory\n        - name: GOMAXPROCS\n         \
    \ valueFrom:\n            resourceFieldRef:\n              resource: limits.cpu\n\
    \        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName\
    \ `Kubernetes` }}\"\n        - name: ISTIO_META_NODE_NAME\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: spec.nodeName\n        - name:\
    \ ISTIO_META_INTERCEPTION_MODE\n          value: \"{{ or (index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\
    \n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n\
    \          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n     \
    \   {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n\
    \          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{-\
    \ if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n\
    \          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault\
    \ .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name\
    \ }}\n        {{- end}}\n        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
    \ }}\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\n          value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\
    \n        {{- end }}\n        {{- if .Values.global.meshID }}\n        - name:\
    \ ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n     \
    \   {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \ }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n\
    \        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{-\
    \ end }}\n        {{- if and (eq .Values.global.proxy.tracer \"datadog\") (isset\
    \ .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n        {{- range $key,\
    \ $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n\
    \        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end\
    \ }}\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{-\
    \ end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"\
    {{.}}\"{{end}}\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port`\
    \ .Values.global.proxy.statusPort) `0` }}\n      {{ if .Values.global.proxy.startupProbe.enabled\
    \ }}\n        startupProbe:\n          httpGet:\n            path: /healthz/ready\n\
    \            port: 15021\n          initialDelaySeconds: 0\n          periodSeconds:\
    \ 1\n          timeoutSeconds: 3\n          failureThreshold: {{ .Values.global.proxy.startupProbe.failureThreshold\
    \ }}\n      {{ end }}\n        readinessProbe:\n          httpGet:\n         \
    \   path: /healthz/ready\n            port: 15021\n          initialDelaySeconds:\
    \ {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`\
    \ .Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds:\
    \ {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`\
    \ .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n\
    \          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`\
    \ .Values.global.proxy.readinessFailureThreshold }}\n        {{ end -}}\n    \
    \    securityContext:\n          {{- if eq (index .ProxyConfig.ProxyMetadata \"\
    IPTABLES_TRACE_LOGGING\") \"true\" }}\n          allowPrivilegeEscalation: true\n\
    \          capabilities:\n            add:\n            - NET_ADMIN\n        \
    \    drop:\n            - ALL\n          privileged: true\n          readOnlyRootFilesystem:\
    \ {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump` .Values.global.proxy.enableCoreDump)\
    \ \"true\" }}\n          runAsGroup: {{ .ProxyGID | default \"1337\" }}\n    \
    \      runAsNonRoot: false\n          runAsUser: 0\n          {{- else }}\n  \
    \        allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n   \
    \       capabilities:\n            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService`\
    \ .Values.global.proxy.capNetBindService) `true`) -}}\n            add:\n    \
    \        {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode) `TPROXY` -}}\n            - NET_ADMIN\n     \
    \       {{- end }}\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService`\
    \ .Values.global.proxy.capNetBindService) `true` -}}\n            - NET_BIND_SERVICE\n\
    \            {{- end }}\n            {{- end }}\n            drop:\n         \
    \   - ALL\n          privileged: {{ .Values.global.proxy.privileged }}\n     \
    \     readOnlyRootFilesystem: {{ ne (annotation .ObjectMeta `sidecar.istio.io/enableCoreDump`\
    \ .Values.global.proxy.enableCoreDump) \"true\" }}\n          runAsGroup: {{ .ProxyGID\
    \ | default \"1337\" }}\n          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
    \ .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService`\
    \ .Values.global.proxy.capNetBindService) `true`) -}}\n          runAsNonRoot:\
    \ false\n          runAsUser: 0\n          {{- else -}}\n          runAsNonRoot:\
    \ true\n          runAsUser: {{ .ProxyUID | default \"1337\" }}\n          {{-\
    \ end }}\n          {{- end }}\n        resources:\n      {{ template \"resources\"\
    \ . }}\n        volumeMounts:\n        - name: workload-socket\n          mountPath:\
    \ /var/run/secrets/workload-spiffe-uds\n        - name: credential-socket\n  \
    \        mountPath: /var/run/secrets/credential-uds\n        {{- if eq .Values.global.caName\
    \ \"GkeWorkloadCertificate\" }}\n        - name: gke-workload-certificate\n  \
    \        mountPath: /var/run/secrets/workload-spiffe-credentials\n          readOnly:\
    \ true\n        {{- else }}\n        - name: workload-certs\n          mountPath:\
    \ /var/run/secrets/workload-spiffe-credentials\n        {{- end }}\n        {{-\
    \ if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n\
    \          name: istiod-ca-cert\n        {{- end }}\n        {{- if eq .Values.global.pilotCertProvider\
    \ \"kubernetes\" }}\n        - mountPath: /var/run/secrets/istio/kubernetes\n\
    \          name: kube-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n\
    \          name: istio-data\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
    \ }}\n        - mountPath: /etc/istio/custom-bootstrap\n          name: custom-bootstrap-volume\n\
    \        {{- end }}\n        # SDS channel between istioagent and Envoy\n    \
    \    - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{- if\
    \ eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n\
    \          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts\
    \ }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster\
    \ mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n\
    \          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n\
    \          mountPath: /etc/istio/pod\n         {{- if and (eq .Values.global.proxy.tracer\
    \ \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n        - mountPath:\
    \ {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\n \
    \         name: lightstep-certs\n          readOnly: true\n        {{- end }}\n\
    \          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`\
    \ }}\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/userVolumeMount`) }}\n        - name: \"{{  $index }}\"\n\
    \          {{ toYaml $value | indent 6 }}\n          {{ end }}\n          {{-\
    \ end }}\n      volumes:\n      - emptyDir:\n        name: workload-socket\n \
    \     - emptyDir:\n        name: credential-socket\n      {{- if eq .Values.global.caName\
    \ \"GkeWorkloadCertificate\" }}\n      - name: gke-workload-certificate\n    \
    \    csi:\n          driver: workloadcertificates.security.cloud.google.com\n\
    \      {{- else }}\n      - emptyDir:\n        name: workload-certs\n      {{-\
    \ end }}\n      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
    \ }}\n      - name: custom-bootstrap-volume\n        configMap:\n          name:\
    \ {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n   \
    \   {{- end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n\
    \          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n\
    \        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n   \
    \       items:\n            - path: \"labels\"\n              fieldRef:\n    \
    \            fieldPath: metadata.labels\n            - path: \"annotations\"\n\
    \              fieldRef:\n                fieldPath: metadata.annotations\n  \
    \    {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name:\
    \ istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n\
    \              path: istio-token\n              expirationSeconds: 43200\n   \
    \           audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n \
    \     {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name:\
    \ istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n   \
    \   {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"kubernetes\"\
    \ }}\n      - name: kube-ca-cert\n        configMap:\n          name: kube-root-ca.crt\n\
    \      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use\
    \ the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n\
    \      - name: istio-certs\n        secret:\n          optional: true\n      \
    \    {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n\
    \          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName\
    \ }}\n          {{  end -}}\n      {{- end }}\n        {{- if isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/userVolume` }}\n        {{range $index, $value := fromJSON\
    \ (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n      - name:\
    \ \"{{ $index }}\"\n        {{ toYaml $value | indent 4 }}\n        {{ end }}\n\
    \        {{ end }}\n      {{- if and (eq .Values.global.proxy.tracer \"lightstep\"\
    ) .ProxyConfig.GetTracing.GetTlsSettings }}\n      - name: lightstep-certs\n \
    \       secret:\n          optional: true\n          secretName: lightstep.cacert\n\
    \      {{- end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n\
    \        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n\
    \        {{- end }}\n      {{- end }}\n  gateway: |\n    {{- $containers := list\
    \ }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name\
    \ \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{-\
    \ end}}\n    metadata:\n      labels:\n        service.istio.io/canonical-name:\
    \ {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index\
    \ .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels\
    \ `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision:\
    \ {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default\
    \ (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels\
    \ `version`) | default \"latest\"  | quote }}\n      annotations: {\n        istio.io/rev:\
    \ {{ .Revision | default \"default\" | quote }},\n        {{- if eq (len $containers)\
    \ 1 }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers\
    \ 0 }}\",\n        kubectl.kubernetes.io/default-container: \"{{ index $containers\
    \ 0 }}\",\n        {{ end }}\n      }\n    spec:\n      containers:\n      - name:\
    \ istio-proxy\n      {{- if contains \"/\" .Values.global.proxy.image }}\n   \
    \     image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image\
    \ }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end\
    \ }}\n        ports:\n        - containerPort: 15090\n          protocol: TCP\n\
    \          name: http-envoy-prom\n        args:\n        - proxy\n        - router\n\
    \        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain\
    \ }}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel`\
    \ .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel\
    \ }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel`\
    \ .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort\
    \ }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end\
    \ }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n    \
    \  {{- end }}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n\
    \          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- end\
    \ }}\n        securityContext:\n          runAsUser: {{ .ProxyUID | default \"\
    1337\" }}\n          runAsGroup: {{ .ProxyGID | default \"1337\" }}\n        env:\n\
    \        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy }}\n\
    \        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider\
    \ }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n  \
    \        value: {{ .Values.global.caAddress }}\n        {{- else }}\n        \
    \  value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{-\
    \ end }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n \
    \       - name: POD_NAME\n          valueFrom:\n            fieldRef:\n      \
    \        fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: metadata.namespace\n        -\
    \ name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n           \
    \   fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: spec.serviceAccountName\n   \
    \     - name: HOST_IP\n          valueFrom:\n            fieldRef:\n         \
    \     fieldPath: status.hostIP\n        - name: ISTIO_CPU_LIMIT\n          valueFrom:\n\
    \            resourceFieldRef:\n              resource: limits.cpu\n        -\
    \ name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON .ProxyConfig\
    \ }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n            [\n\
    \            {{- $first := true }}\n            {{- range $index1, $c := .Spec.Containers\
    \ }}\n              {{- range $index2, $p := $c.Ports }}\n                {{-\
    \ if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{ structToJSON\
    \ $p }}\n                {{- $first = false }}\n                {{- end }}\n \
    \             {{- end}}\n            {{- end}}\n            ]\n        - name:\
    \ GOMEMLIMIT\n          valueFrom:\n            resourceFieldRef:\n          \
    \    resource: limits.memory\n        - name: GOMAXPROCS\n          valueFrom:\n\
    \            resourceFieldRef:\n              resource: limits.cpu\n        -\
    \ name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join \"\
    ,\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault\
    \ .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n        - name: ISTIO_META_NODE_NAME\n\
    \          valueFrom:\n            fieldRef:\n              fieldPath: spec.nodeName\n\
    \        - name: ISTIO_META_INTERCEPTION_MODE\n          value: \"{{ .ProxyConfig.InterceptionMode.String\
    \ }}\"\n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n\
    \          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n     \
    \   {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n\
    \          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{-\
    \ if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n\
    \          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault\
    \ .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name\
    \ }}\n        {{- end}}\n        {{- if .Values.global.meshID }}\n        - name:\
    \ ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n     \
    \   {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \ }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n\
    \        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{-\
    \ end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n  \
    \      - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end\
    \ }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"\
    {{end}}\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n\
    \            port: 15021\n          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds\
    \ }}\n          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds\
    \ }}\n          timeoutSeconds: 3\n          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold\
    \ }}\n        volumeMounts:\n        - name: workload-socket\n          mountPath:\
    \ /var/run/secrets/workload-spiffe-uds\n        - name: credential-socket\n  \
    \        mountPath: /var/run/secrets/credential-uds\n        {{- if eq .Values.global.caName\
    \ \"GkeWorkloadCertificate\" }}\n        - name: gke-workload-certificate\n  \
    \        mountPath: /var/run/secrets/workload-spiffe-credentials\n          readOnly:\
    \ true\n        {{- else }}\n        - name: workload-certs\n          mountPath:\
    \ /var/run/secrets/workload-spiffe-credentials\n        {{- end }}\n        {{-\
    \ if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n\
    \          name: istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n\
    \          name: istio-data\n        # SDS channel between istioagent and Envoy\n\
    \        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{-\
    \ if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath:\
    \ /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n \
    \       {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert\
    \ mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath:\
    \ /etc/certs/\n          name: istio-certs\n          readOnly: true\n       \
    \ {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n\
    \      volumes:\n      - emptyDir: {}\n        name: workload-socket\n      -\
    \ emptyDir: {}\n        name: credential-socket\n      {{- if eq .Values.global.caName\
    \ \"GkeWorkloadCertificate\" }}\n      - name: gke-workload-certificate\n    \
    \    csi:\n          driver: workloadcertificates.security.cloud.google.com\n\
    \      {{- else}}\n      - emptyDir: {}\n        name: workload-certs\n      {{-\
    \ end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n\
    \          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n\
    \        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n   \
    \       items:\n            - path: \"labels\"\n              fieldRef:\n    \
    \            fieldPath: metadata.labels\n            - path: \"annotations\"\n\
    \              fieldRef:\n                fieldPath: metadata.annotations\n  \
    \    {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name:\
    \ istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n\
    \              path: istio-token\n              expirationSeconds: 43200\n   \
    \           audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n \
    \     {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name:\
    \ istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n   \
    \   {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the\
    \ key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n\
    \      - name: istio-certs\n        secret:\n          optional: true\n      \
    \    {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n\
    \          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName\
    \ }}\n          {{  end -}}\n      {{- end }}\n      {{- if .Values.global.imagePullSecrets\
    \ }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets\
    \ }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n  grpc-simple:\
    \ |\n    metadata:\n      annotations:\n        sidecar.istio.io/rewriteAppHTTPProbers:\
    \ \"false\"\n    spec:\n      initContainers:\n        - name: grpc-bootstrap-init\n\
    \          image: busybox:1.28\n          volumeMounts:\n            - mountPath:\
    \ /var/lib/grpc/data/\n              name: grpc-io-proxyless-bootstrap\n     \
    \     env:\n            - name: INSTANCE_IP\n              valueFrom:\n      \
    \          fieldRef:\n                  fieldPath: status.podIP\n            -\
    \ name: POD_NAME\n              valueFrom:\n                fieldRef:\n      \
    \            fieldPath: metadata.name\n            - name: POD_NAMESPACE\n   \
    \           valueFrom:\n                fieldRef:\n                  fieldPath:\
    \ metadata.namespace\n            - name: ISTIO_NAMESPACE\n              value:\
    \ |\n                 {{ .Values.global.istioNamespace }}\n          command:\n\
    \            - sh\n            - \"-c\"\n            - |-\n              NODE_ID=\"\
    sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local\"\n        \
    \      SERVER_URI=\"dns:///istiod.${ISTIO_NAMESPACE}.svc:15010\"\n           \
    \   echo '\n              {\n                \"xds_servers\": [\n            \
    \      {\n                    \"server_uri\": \"'${SERVER_URI}'\",\n         \
    \           \"channel_creds\": [{\"type\": \"insecure\"}],\n                 \
    \   \"server_features\" : [\"xds_v3\"]\n                  }\n                ],\n\
    \                \"node\": {\n                  \"id\": \"'${NODE_ID}'\",\n  \
    \                \"metadata\": {\n                    \"GENERATOR\": \"grpc\"\n\
    \                  }\n                }\n              }' > /var/lib/grpc/data/bootstrap.json\n\
    \      containers:\n      {{- range $index, $container := .Spec.Containers }}\n\
    \      - name: {{ $container.Name }}\n        env:\n          - name: GRPC_XDS_BOOTSTRAP\n\
    \            value: /var/lib/grpc/data/bootstrap.json\n          - name: GRPC_GO_LOG_VERBOSITY_LEVEL\n\
    \            value: \"99\"\n          - name: GRPC_GO_LOG_SEVERITY_LEVEL\n   \
    \         value: info\n        volumeMounts:\n          - mountPath: /var/lib/grpc/data/\n\
    \            name: grpc-io-proxyless-bootstrap\n      {{- end }}\n      volumes:\n\
    \        - name: grpc-io-proxyless-bootstrap\n          emptyDir: {}\n  grpc-agent:\
    \ |\n    {{- define \"resources\"  }}\n      {{- if or (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit`) }}\n        {{- if or (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`)\
    \ }}\n          requests:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end\
    \ }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n   \
    \       limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`)\
    \ -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`\
    \ }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations\
    \ `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{-\
    \ end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n\
    \          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{-\
    \ end }}\n      {{- end }}\n    {{- end }}\n    {{- $containers := list }}\n \
    \   {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name\
    \ \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{-\
    \ end}}\n    metadata:\n      labels:\n        {{/* security.istio.io/tlsMode:\
    \ istio must be set by user, if gRPC is using mTLS initialization code. We can't\
    \ set it automatically. */}}\n        service.istio.io/canonical-name: {{ index\
    \ .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels\
    \ `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default\
    \ .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision:\
    \ {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default\
    \ (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels\
    \ `version`) | default \"latest\"  | quote }}\n      annotations: {\n        istio.io/rev:\
    \ {{ .Revision | default \"default\" }},\n        {{- if ge (len $containers)\
    \ 1 }}\n        {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-logs-container`)\
    \ }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers\
    \ 0 }}\",\n        {{- end }}\n        {{- if not (isset .ObjectMeta.Annotations\
    \ `kubectl.kubernetes.io/default-container`) }}\n        kubectl.kubernetes.io/default-container:\
    \ \"{{ index $containers 0 }}\",\n        {{- end }}\n        {{- end }}\n   \
    \     sidecar.istio.io/rewriteAppHTTPProbers: \"false\",\n      }\n    spec:\n\
    \      containers:\n      - name: istio-proxy\n      {{- if contains \"/\" (annotation\
    \ .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n \
    \       image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image\
    \ }}\"\n      {{- else }}\n        image: \"{{ .ProxyImage }}\"\n      {{- end\
    \ }}\n        ports:\n        - containerPort: 15020\n          protocol: TCP\n\
    \          name: mesh-metrics\n        args:\n        - proxy\n        - sidecar\n\
    \        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain\
    \ }}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel`\
    \ .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation\
    \ .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel\
    \ }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel`\
    \ .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort\
    \ }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end\
    \ }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n    \
    \  {{- end }}\n        lifecycle:\n          postStart:\n            exec:\n \
    \             command:\n              - pilot-agent\n              - wait\n  \
    \            - --url=http://localhost:15020/healthz/ready\n        env:\n    \
    \    - name: ISTIO_META_GENERATOR\n          value: grpc\n        - name: OUTPUT_CERTS\n\
    \          value: /var/lib/istio/data\n        {{- if eq (env \"PILOT_ENABLE_INBOUND_PASSTHROUGH\"\
    \ \"true\") \"false\" }}\n        - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION\n\
    \          value: \"true\"\n        {{- end }}\n        - name: JWT_POLICY\n \
    \         value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n\
    \          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n\
    \        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress\
    \ }}\n        {{- else }}\n          value: istiod{{- if not (eq .Values.revision\
    \ \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n\
    \        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n        \
    \    fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n\
    \          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n\
    \        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n  \
    \            fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n      \
    \    valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n\
    \        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n      \
    \        fieldPath: status.hostIP\n        - name: PROXY_CONFIG\n          value:\
    \ |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n\
    \          value: |-\n            [\n            {{- $first := true }}\n     \
    \       {{- range $index1, $c := .Spec.Containers }}\n              {{- range\
    \ $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n  \
    \              {{if not $first}},{{end}}{{ structToJSON $p }}\n              \
    \  {{- $first = false }}\n                {{- end }}\n              {{- end}}\n\
    \            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n\
    \          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n\
    \          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName\
    \ `Kubernetes` }}\"\n        - name: ISTIO_META_NODE_NAME\n          valueFrom:\n\
    \            fieldRef:\n              fieldPath: spec.nodeName\n        {{- if\
    \ .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n          value:\
    \ \"{{ .Values.global.network }}\"\n        {{- end }}\n        {{- if .DeploymentMeta.Name\
    \ }}\n        - name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name\
    \ }}\"\n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name\
    \ }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{\
    \ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace\
    \ `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n     \
    \   {{- end}}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n\
    \          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n\
    \          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \ }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain\
    \ .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value:\
    \ \"{{ . }}\"\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{-\
    \ end }}\n        # grpc uses xds:/// to resolve – no need to resolve VIP\n  \
    \      - name: ISTIO_META_DNS_CAPTURE\n          value: \"false\"\n        - name:\
    \ DISABLE_ENVOY\n          value: \"true\"\n        {{with .Values.global.imagePullPolicy\
    \ }}imagePullPolicy: \"{{.}}\"{{end}}\n        {{ if ne (annotation .ObjectMeta\
    \ `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n   \
    \     readinessProbe:\n          httpGet:\n            path: /healthz/ready\n\
    \            port: 15020\n          initialDelaySeconds: {{ annotation .ObjectMeta\
    \ `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds\
    \ }}\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`\
    \ .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n\
    \          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`\
    \ .Values.global.proxy.readinessFailureThreshold }}\n        resources:\n    \
    \  {{ template \"resources\" . }}\n        volumeMounts:\n        - name: workload-socket\n\
    \          mountPath: /var/run/secrets/workload-spiffe-uds\n        {{- if eq\
    \ .Values.global.caName \"GkeWorkloadCertificate\" }}\n        - name: gke-workload-certificate\n\
    \          mountPath: /var/run/secrets/workload-spiffe-credentials\n         \
    \ readOnly: true\n        {{- else }}\n        - name: workload-certs\n      \
    \    mountPath: /var/run/secrets/workload-spiffe-credentials\n        {{- end\
    \ }}\n        {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n     \
    \   - mountPath: /var/run/secrets/istio\n          name: istiod-ca-cert\n    \
    \    {{- end }}\n        - mountPath: /var/lib/istio/data\n          name: istio-data\n\
    \        # UDS channel between istioagent and gRPC client for XDS/SDS\n      \
    \  - mountPath: /etc/istio/proxy\n          name: istio-xds\n        {{- if eq\
    \ .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n\
    \          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts\
    \ }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster\
    \ mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n\
    \          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n\
    \          mountPath: /etc/istio/pod\n        {{- end }}\n          {{- if isset\
    \ .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n          {{\
    \ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`)\
    \ }}\n        - name: \"{{  $index }}\"\n          {{ toYaml $value | indent 6\
    \ }}\n          {{ end }}\n          {{- end }}\n    {{- range $index, $container\
    \ := .Spec.Containers  }}\n    {{ if not (eq $container.Name \"istio-proxy\")\
    \ }}\n      - name: {{ $container.Name }}\n        env:\n          - name: \"\
    GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT\"\n            value: \"true\"\n      \
    \    - name: \"GRPC_XDS_BOOTSTRAP\"\n            value: \"/etc/istio/proxy/grpc-bootstrap.json\"\
    \n        volumeMounts:\n          - mountPath: /var/lib/istio/data\n        \
    \    name: istio-data\n          # UDS channel between istioagent and gRPC client\
    \ for XDS/SDS\n          - mountPath: /etc/istio/proxy\n            name: istio-xds\n\
    \          {{- if eq $.Values.global.caName \"GkeWorkloadCertificate\" }}\n  \
    \        - name: gke-workload-certificate\n            mountPath: /var/run/secrets/workload-spiffe-credentials\n\
    \            readOnly: true\n          {{- else }}\n          - name: workload-certs\n\
    \            mountPath: /var/run/secrets/workload-spiffe-credentials\n       \
    \   {{- end }}\n    {{- end }}\n    {{- end }}\n      volumes:\n      - emptyDir:\n\
    \        name: workload-socket\n      {{- if eq .Values.global.caName \"GkeWorkloadCertificate\"\
    \ }}\n      - name: gke-workload-certificate\n        csi:\n          driver:\
    \ workloadcertificates.security.cloud.google.com\n      {{- else }}\n      - emptyDir:\n\
    \        name: workload-certs\n      {{- end }}\n      {{- if (isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/bootstrapOverride`) }}\n      - name: custom-bootstrap-volume\n\
    \        configMap:\n          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride`\
    \ \"\" }}\n      {{- end }}\n      # SDS channel between istioagent and Envoy\n\
    \      - emptyDir:\n          medium: Memory\n        name: istio-xds\n      -\
    \ name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n      \
    \  downwardAPI:\n          items:\n            - path: \"labels\"\n          \
    \    fieldRef:\n                fieldPath: metadata.labels\n            - path:\
    \ \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n\
    \      {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name:\
    \ istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n\
    \              path: istio-token\n              expirationSeconds: 43200\n   \
    \           audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n \
    \     {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name:\
    \ istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n   \
    \   {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the\
    \ key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n\
    \      - name: istio-certs\n        secret:\n          optional: true\n      \
    \    {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n\
    \          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName\
    \ }}\n          {{  end -}}\n      {{- end }}\n        {{- if isset .ObjectMeta.Annotations\
    \ `sidecar.istio.io/userVolume` }}\n        {{range $index, $value := fromJSON\
    \ (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n      - name:\
    \ \"{{ $index }}\"\n        {{ toYaml $value | indent 4 }}\n        {{ end }}\n\
    \        {{ end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n\
    \        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n\
    \        {{- end }}\n      {{- end }}\n  waypoint: |\n    apiVersion: v1\n   \
    \ kind: ServiceAccount\n    metadata:\n      name: {{.ServiceAccount | quote}}\n\
    \      namespace: {{.Namespace | quote}}\n    ---\n    apiVersion: apps/v1\n \
    \   kind: Deployment\n    metadata:\n      name: {{.DeploymentName | quote}}\n\
    \      namespace: {{.Namespace | quote}}\n      annotations:\n        {{- toJsonMap\
    \ (omit .Annotations \"kubectl.kubernetes.io/last-applied-configuration\" \"gateway.istio.io/name-override\"\
    \ \"gateway.istio.io/service-account\" \"gateway.istio.io/controller-version\"\
    ) | nindent 4 }}\n      labels:\n        {{- toJsonMap .Labels | nindent 4 }}\n\
    \      ownerReferences:\n      - apiVersion: gateway.networking.k8s.io/v1beta1\n\
    \        kind: Gateway\n        name: \"{{.Name}}\"\n        uid: \"{{.UID}}\"\
    \n    spec:\n      selector:\n        matchLabels:\n          istio.io/gateway-name:\
    \ \"{{.Name}}\"\n      template:\n        metadata:\n          annotations:\n\
    \            {{- toJsonMap\n              (omit .Annotations \"kubectl.kubernetes.io/last-applied-configuration\"\
    \ \"gateway.istio.io/name-override\" \"gateway.istio.io/service-account\" \"gateway.istio.io/controller-version\"\
    )\n              (strdict \"istio.io/rev\" (.Revision | default \"default\"))\n\
    \              (strdict\n                \"ambient.istio.io/redirection\" \"disabled\"\
    \n                \"prometheus.io/path\" \"/stats/prometheus\"\n             \
    \   \"prometheus.io/port\" \"15020\"\n                \"prometheus.io/scrape\"\
    \ \"true\"\n              ) | nindent 8 }}\n          labels:\n            {{-\
    \ toJsonMap\n              (strdict\n                \"sidecar.istio.io/inject\"\
    \ \"false\"\n                \"service.istio.io/canonical-name\" .DeploymentName\n\
    \                \"service.istio.io/canonical-revision\" \"latest\"\n        \
    \       )\n              .Labels\n              (strdict\n                \"istio.io/gateway-name\"\
    \ .Name\n                \"gateway.istio.io/managed\" \"istio.io-mesh-controller\"\
    \n              ) | nindent 8}}\n        spec:\n          terminationGracePeriodSeconds:\
    \ 2\n          serviceAccountName: {{.ServiceAccount | quote}}\n          containers:\n\
    \          - name: istio-proxy\n            ports:\n            - containerPort:\
    \ 15021\n              name: status-port\n              protocol: TCP\n      \
    \      - containerPort: 15090\n              protocol: TCP\n              name:\
    \ http-envoy-prom\n            {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy.image) }}\n            image: \"{{ annotation .ObjectMeta\
    \ `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n            {{-\
    \ else }}\n            image: \"{{ .ProxyImage }}\"\n            {{- end }}\n\
    \            {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"\
    {{end}}\n            args:\n            - proxy\n            - waypoint\n    \
    \        - --domain\n            - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain\
    \ }}\n            - --serviceCluster\n            - {{.ServiceAccount}}.$(POD_NAMESPACE)\n\
    \            - --proxyLogLevel\n            - {{ annotation .ObjectMeta `sidecar.istio.io/logLevel`\
    \ .Values.global.proxy.logLevel | quote}}\n            - --proxyComponentLogLevel\n\
    \            - {{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel`\
    \ .Values.global.proxy.componentLogLevel | quote}}\n            - --log_output_level\n\
    \            - {{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level\
    \ | quote}}\n            {{- if .Values.global.logAsJson }}\n            - --log_as_json\n\
    \            {{- end }}\n            env:\n            - name: ISTIO_META_SERVICE_ACCOUNT\n\
    \              valueFrom:\n                fieldRef:\n                  fieldPath:\
    \ spec.serviceAccountName\n            - name: ISTIO_META_NODE_NAME\n        \
    \      valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n\
    \            - name: JWT_POLICY\n              value: {{ .Values.global.jwtPolicy\
    \ }}\n            - name: PILOT_CERT_PROVIDER\n              value: {{ .Values.global.pilotCertProvider\
    \ }}\n            - name: CA_ADDR\n            {{- if .Values.global.caAddress\
    \ }}\n              value: {{ .Values.global.caAddress }}\n            {{- else\
    \ }}\n              value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision\
    \ }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n            {{-\
    \ end }}\n            - name: POD_NAME\n              valueFrom:\n           \
    \     fieldRef:\n                  fieldPath: metadata.name\n            - name:\
    \ POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n       \
    \           fieldPath: metadata.namespace\n            - name: INSTANCE_IP\n \
    \             valueFrom:\n                fieldRef:\n                  fieldPath:\
    \ status.podIP\n            - name: SERVICE_ACCOUNT\n              valueFrom:\n\
    \                fieldRef:\n                  fieldPath: spec.serviceAccountName\n\
    \            - name: HOST_IP\n              valueFrom:\n                fieldRef:\n\
    \                  fieldPath: status.hostIP\n            - name: ISTIO_CPU_LIMIT\n\
    \              valueFrom:\n                resourceFieldRef:\n               \
    \   resource: limits.cpu\n            - name: PROXY_CONFIG\n              value:\
    \ |\n                     {{ protoToJSON .ProxyConfig }}\n            - name:\
    \ GOMEMLIMIT\n              valueFrom:\n                resourceFieldRef:\n  \
    \                resource: limits.memory\n            - name: GOMAXPROCS\n   \
    \           valueFrom:\n                resourceFieldRef:\n                  resource:\
    \ limits.cpu\n            - name: ISTIO_META_CLUSTER_ID\n              value:\
    \ \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\
    \n            {{- $network := valueOrDefault (index .Labels `topology.istio.io/network`)\
    \ .Values.global.network }}\n            {{- if $network }}\n            - name:\
    \ ISTIO_META_NETWORK\n              value: \"{{ $network }}\"\n            {{-\
    \ end }}\n            - name: ISTIO_META_INTERCEPTION_MODE\n              value:\
    \ REDIRECT\n            - name: ISTIO_META_WORKLOAD_NAME\n              value:\
    \ {{.DeploymentName}}\n            - name: ISTIO_META_OWNER\n              value:\
    \ kubernetes://apis/apps/v1/namespaces/{{.Namespace}}/deployments/{{.DeploymentName}}\n\
    \            {{- if .Values.global.meshID }}\n            - name: ISTIO_META_MESH_ID\n\
    \              value: \"{{ .Values.global.meshID }}\"\n            {{- else if\
    \ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n   \
    \         - name: ISTIO_META_MESH_ID\n              value: \"{{ (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n            {{- end\
    \ }}\n            resources:\n              limits:\n                cpu: \"2\"\
    \n                memory: 1Gi\n              requests:\n                cpu: 100m\n\
    \                memory: 128Mi\n            startupProbe:\n              failureThreshold:\
    \ 30\n              httpGet:\n                path: /healthz/ready\n         \
    \       port: 15021\n                scheme: HTTP\n              initialDelaySeconds:\
    \ 1\n              periodSeconds: 1\n              successThreshold: 1\n     \
    \         timeoutSeconds: 1\n            readinessProbe:\n              failureThreshold:\
    \ 4\n              httpGet:\n                path: /healthz/ready\n          \
    \      port: 15021\n                scheme: HTTP\n              initialDelaySeconds:\
    \ 0\n              periodSeconds: 15\n              successThreshold: 1\n    \
    \          timeoutSeconds: 1\n            securityContext:\n              privileged:\
    \ true\n              runAsGroup: 1337\n              runAsUser: 0\n         \
    \     capabilities:\n                add:\n                - NET_ADMIN\n     \
    \           - NET_RAW\n            volumeMounts:\n            - mountPath: /var/run/secrets/istio\n\
    \              name: istiod-ca-cert\n            - mountPath: /var/lib/istio/data\n\
    \              name: istio-data\n            - mountPath: /etc/istio/proxy\n \
    \             name: istio-envoy\n            - mountPath: /var/run/secrets/tokens\n\
    \              name: istio-token\n            - mountPath: /etc/istio/pod\n  \
    \            name: istio-podinfo\n          volumes:\n          - emptyDir:\n\
    \              medium: Memory\n            name: istio-envoy\n          - emptyDir:\n\
    \              medium: Memory\n            name: go-proxy-envoy\n          - emptyDir:\
    \ {}\n            name: istio-data\n          - emptyDir: {}\n            name:\
    \ go-proxy-data\n          - downwardAPI:\n              items:\n            \
    \  - fieldRef:\n                  fieldPath: metadata.labels\n               \
    \ path: labels\n              - fieldRef:\n                  fieldPath: metadata.annotations\n\
    \                path: annotations\n            name: istio-podinfo\n        \
    \  - name: istio-token\n            projected:\n              sources:\n     \
    \         - serviceAccountToken:\n                  audience: istio-ca\n     \
    \             expirationSeconds: 43200\n                  path: istio-token\n\
    \          - configMap:\n              name: istio-ca-root-cert\n            name:\
    \ istiod-ca-cert\n          {{- if .Values.global.imagePullSecrets }}\n      \
    \    imagePullSecrets:\n            {{- range .Values.global.imagePullSecrets\
    \ }}\n            - name: {{ . }}\n            {{- end }}\n          {{- end }}\n\
    \    ---\n    apiVersion: v1\n    kind: Service\n    metadata:\n      annotations:\n\
    \        {{ toJsonMap (omit .Annotations \"kubectl.kubernetes.io/last-applied-configuration\"\
    \ \"gateway.istio.io/name-override\" \"gateway.istio.io/service-account\" \"gateway.istio.io/controller-version\"\
    ) | nindent 4 }}\n      labels:\n        {{ toJsonMap .Labels | nindent 4}}\n\
    \      name: {{.DeploymentName | quote}}\n      namespace: {{.Namespace | quote}}\n\
    \      ownerReferences:\n      - apiVersion: gateway.networking.k8s.io/v1beta1\n\
    \        kind: Gateway\n        name: \"{{.Name}}\"\n        uid: \"{{.UID}}\"\
    \n    spec:\n      ports:\n      {{- range $key, $val := .Ports }}\n      - name:\
    \ {{ $val.Name | quote }}\n        port: {{ $val.Port }}\n        protocol: TCP\n\
    \        appProtocol: {{ $val.AppProtocol }}\n      {{- end }}\n      selector:\n\
    \        istio.io/gateway-name: \"{{.Name}}\"\n      {{- if and (.Spec.Addresses)\
    \ (eq .ServiceType \"LoadBalancer\") }}\n      loadBalancerIP: {{ (index .Spec.Addresses\
    \ 0).Value | quote}}\n      {{- end }}\n      type: {{ .ServiceType | quote }}\n\
    \    ---\n  kube-gateway: |\n    apiVersion: v1\n    kind: ServiceAccount\n  \
    \  metadata:\n      name: {{.ServiceAccount | quote}}\n      namespace: {{.Namespace\
    \ | quote}}\n    ---\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n\
    \      name: {{.DeploymentName | quote}}\n      namespace: {{.Namespace | quote}}\n\
    \      annotations:\n        {{- toJsonMap (omit .Annotations \"kubectl.kubernetes.io/last-applied-configuration\"\
    \ \"gateway.istio.io/name-override\" \"gateway.istio.io/service-account\" \"gateway.istio.io/controller-version\"\
    ) | nindent 4 }}\n      labels:\n        {{- toJsonMap .Labels | nindent 4 }}\n\
    \      ownerReferences:\n      - apiVersion: gateway.networking.k8s.io/v1beta1\n\
    \        kind: Gateway\n        name: {{.Name}}\n        uid: \"{{.UID}}\"\n \
    \   spec:\n      selector:\n        matchLabels:\n          istio.io/gateway-name:\
    \ {{.Name}}\n      template:\n        metadata:\n          annotations:\n    \
    \        {{- toJsonMap\n              (omit .Annotations \"kubectl.kubernetes.io/last-applied-configuration\"\
    \ \"gateway.istio.io/name-override\" \"gateway.istio.io/service-account\" \"gateway.istio.io/controller-version\"\
    )\n              (strdict \"istio.io/rev\" (.Revision | default \"default\"))\n\
    \              (strdict\n                \"prometheus.io/path\" \"/stats/prometheus\"\
    \n                \"prometheus.io/port\" \"15020\"\n                \"prometheus.io/scrape\"\
    \ \"true\"\n              ) | nindent 8 }}\n          labels:\n            {{-\
    \ toJsonMap\n              (strdict\n                \"sidecar.istio.io/inject\"\
    \ \"false\"\n                \"service.istio.io/canonical-name\" .DeploymentName\n\
    \                \"service.istio.io/canonical-revision\" \"latest\"\n        \
    \       )\n              .Labels\n              (strdict \"istio.io/gateway-name\"\
    \ .Name) | nindent 8}}\n        spec:\n          {{- if .KubeVersion122 }}\n \
    \         {{/* safe since 1.22: https://github.com/kubernetes/kubernetes/pull/103326.\
    \ */}}\n          securityContext:\n            sysctls:\n            - name:\
    \ net.ipv4.ip_unprivileged_port_start\n              value: \"0\"\n          {{-\
    \ end }}\n          serviceAccountName: {{.ServiceAccount | quote}}\n        \
    \  containers:\n          - name: istio-proxy\n          {{- if contains \"/\"\
    \ (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image)\
    \ }}\n            image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
    \ .Values.global.proxy.image }}\"\n          {{- else }}\n            image: \"\
    {{ .ProxyImage }}\"\n          {{- end }}\n            {{- if .Values.global.proxy.resources\
    \ }}\n            resources:\n              {{- toYaml .Values.global.proxy.resources\
    \ | nindent 10 }}\n            {{- end }}\n            {{with .Values.global.imagePullPolicy\
    \ }}imagePullPolicy: \"{{.}}\"{{end}}\n            securityContext:\n        \
    \    {{- if .KubeVersion122 }}\n              # Safe since 1.22: https://github.com/kubernetes/kubernetes/pull/103326\n\
    \              capabilities:\n                drop:\n                - ALL\n \
    \             allowPrivilegeEscalation: false\n              privileged: false\n\
    \              readOnlyRootFilesystem: true\n              runAsUser: {{ .ProxyUID\
    \ | default \"1337\" }}\n              runAsGroup: {{ .ProxyGID | default \"1337\"\
    \ }}\n              runAsNonRoot: true\n            {{- else }}\n            \
    \  capabilities:\n                drop:\n                - ALL\n             \
    \   add:\n                - NET_BIND_SERVICE\n              runAsUser: 0\n   \
    \           runAsGroup: 1337\n              runAsNonRoot: false\n            \
    \  allowPrivilegeEscalation: true\n              readOnlyRootFilesystem: true\n\
    \            {{- end }}\n            ports:\n            - containerPort: 15021\n\
    \              name: status-port\n              protocol: TCP\n            - containerPort:\
    \ 15090\n              protocol: TCP\n              name: http-envoy-prom\n  \
    \          args:\n            - proxy\n            - router\n            - --domain\n\
    \            - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n\
    \            - --proxyLogLevel\n            - {{ annotation .ObjectMeta `sidecar.istio.io/logLevel`\
    \ .Values.global.proxy.logLevel | quote}}\n            - --proxyComponentLogLevel\n\
    \            - {{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel`\
    \ .Values.global.proxy.componentLogLevel | quote}}\n            - --log_output_level\n\
    \            - {{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level\
    \ | quote}}\n          {{- if .Values.global.sts.servicePort }}\n            -\
    \ --stsPort={{ .Values.global.sts.servicePort }}\n          {{- end }}\n     \
    \     {{- if .Values.global.logAsJson }}\n            - --log_as_json\n      \
    \    {{- end }}\n          {{- if .Values.global.proxy.lifecycle }}\n        \
    \    lifecycle:\n              {{ toYaml .Values.global.proxy.lifecycle | indent\
    \ 6 }}\n          {{- end }}\n            env:\n            - name: JWT_POLICY\n\
    \              value: {{ .Values.global.jwtPolicy }}\n            - name: PILOT_CERT_PROVIDER\n\
    \              value: {{ .Values.global.pilotCertProvider }}\n            - name:\
    \ CA_ADDR\n            {{- if .Values.global.caAddress }}\n              value:\
    \ {{ .Values.global.caAddress }}\n            {{- else }}\n              value:\
    \ istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{- end\
    \ }}.{{ .Values.global.istioNamespace }}.svc:15012\n            {{- end }}\n \
    \           - name: POD_NAME\n              valueFrom:\n                fieldRef:\n\
    \                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n\
    \              valueFrom:\n                fieldRef:\n                  fieldPath:\
    \ metadata.namespace\n            - name: INSTANCE_IP\n              valueFrom:\n\
    \                fieldRef:\n                  fieldPath: status.podIP\n      \
    \      - name: SERVICE_ACCOUNT\n              valueFrom:\n                fieldRef:\n\
    \                  fieldPath: spec.serviceAccountName\n            - name: HOST_IP\n\
    \              valueFrom:\n                fieldRef:\n                  fieldPath:\
    \ status.hostIP\n            - name: ISTIO_CPU_LIMIT\n              valueFrom:\n\
    \                resourceFieldRef:\n                  resource: limits.cpu\n \
    \           - name: PROXY_CONFIG\n              value: |\n                   \
    \  {{ protoToJSON .ProxyConfig }}\n            - name: ISTIO_META_POD_PORTS\n\
    \              value: \"[]\"\n            - name: ISTIO_META_APP_CONTAINERS\n\
    \              value: \"\"\n            - name: GOMEMLIMIT\n              valueFrom:\n\
    \                resourceFieldRef:\n                  resource: limits.memory\n\
    \            - name: GOMAXPROCS\n              valueFrom:\n                resourceFieldRef:\n\
    \                  resource: limits.cpu\n            - name: ISTIO_META_CLUSTER_ID\n\
    \              value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName\
    \ .ClusterID }}\"\n            - name: ISTIO_META_NODE_NAME\n              valueFrom:\n\
    \                fieldRef:\n                  fieldPath: spec.nodeName\n     \
    \       - name: ISTIO_META_INTERCEPTION_MODE\n              value: \"{{ .ProxyConfig.InterceptionMode.String\
    \ }}\"\n            {{- with (valueOrDefault  (index .Labels \"topology.istio.io/network\"\
    ) .Values.global.network) }}\n            - name: ISTIO_META_NETWORK\n       \
    \       value: {{.|quote}}\n            {{- end }}\n            - name: ISTIO_META_WORKLOAD_NAME\n\
    \              value: {{.DeploymentName|quote}}\n            - name: ISTIO_META_OWNER\n\
    \              value: \"kubernetes://apis/apps/v1/namespaces/{{.Namespace}}/deployments/{{.DeploymentName}}\"\
    \n            {{- if .Values.global.meshID }}\n            - name: ISTIO_META_MESH_ID\n\
    \              value: \"{{ .Values.global.meshID }}\"\n            {{- else if\
    \ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n   \
    \         - name: ISTIO_META_MESH_ID\n              value: \"{{ (valueOrDefault\
    \ .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n            {{- end\
    \ }}\n            {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)\
    \  }}\n            - name: TRUST_DOMAIN\n              value: \"{{ . }}\"\n  \
    \          {{- end }}\n            {{- range $key, $value := .ProxyConfig.ProxyMetadata\
    \ }}\n            - name: {{ $key }}\n              value: \"{{ $value }}\"\n\
    \            {{- end }}\n            {{- with (index .Labels \"topology.istio.io/network\"\
    ) }}\n            - name: ISTIO_META_REQUESTED_NETWORK_VIEW\n              value:\
    \ {{.|quote}}\n            {{- end }}\n            startupProbe:\n           \
    \   failureThreshold: 30\n              httpGet:\n                path: /healthz/ready\n\
    \                port: 15021\n                scheme: HTTP\n              initialDelaySeconds:\
    \ 1\n              periodSeconds: 1\n              successThreshold: 1\n     \
    \         timeoutSeconds: 1\n            readinessProbe:\n              failureThreshold:\
    \ 4\n              httpGet:\n                path: /healthz/ready\n          \
    \      port: 15021\n                scheme: HTTP\n              initialDelaySeconds:\
    \ 0\n              periodSeconds: 15\n              successThreshold: 1\n    \
    \          timeoutSeconds: 1\n            volumeMounts:\n            - name: workload-socket\n\
    \              mountPath: /var/run/secrets/workload-spiffe-uds\n            -\
    \ name: credential-socket\n              mountPath: /var/run/secrets/credential-uds\n\
    \            {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n \
    \           - name: gke-workload-certificate\n              mountPath: /var/run/secrets/workload-spiffe-credentials\n\
    \              readOnly: true\n            {{- else }}\n            - name: workload-certs\n\
    \              mountPath: /var/run/secrets/workload-spiffe-credentials\n     \
    \       {{- end }}\n            {{- if eq .Values.global.pilotCertProvider \"\
    istiod\" }}\n            - mountPath: /var/run/secrets/istio\n              name:\
    \ istiod-ca-cert\n            {{- end }}\n            - mountPath: /var/lib/istio/data\n\
    \              name: istio-data\n            # SDS channel between istioagent\
    \ and Envoy\n            - mountPath: /etc/istio/proxy\n              name: istio-envoy\n\
    \            {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n     \
    \       - mountPath: /var/run/secrets/tokens\n              name: istio-token\n\
    \            {{- end }}\n            - name: istio-podinfo\n              mountPath:\
    \ /etc/istio/pod\n          volumes:\n          - emptyDir: {}\n            name:\
    \ workload-socket\n          - emptyDir: {}\n            name: credential-socket\n\
    \          {{- if eq .Values.global.caName \"GkeWorkloadCertificate\" }}\n   \
    \       - name: gke-workload-certificate\n            csi:\n              driver:\
    \ workloadcertificates.security.cloud.google.com\n          {{- else}}\n     \
    \     - emptyDir: {}\n            name: workload-certs\n          {{- end }}\n\
    \          # SDS channel between istioagent and Envoy\n          - emptyDir:\n\
    \              medium: Memory\n            name: istio-envoy\n          - name:\
    \ istio-data\n            emptyDir: {}\n          - name: istio-podinfo\n    \
    \        downwardAPI:\n              items:\n                - path: \"labels\"\
    \n                  fieldRef:\n                    fieldPath: metadata.labels\n\
    \                - path: \"annotations\"\n                  fieldRef:\n      \
    \              fieldPath: metadata.annotations\n          {{- if eq .Values.global.jwtPolicy\
    \ \"third-party-jwt\" }}\n          - name: istio-token\n            projected:\n\
    \              sources:\n              - serviceAccountToken:\n              \
    \    path: istio-token\n                  expirationSeconds: 43200\n         \
    \         audience: {{ .Values.global.sds.token.aud }}\n          {{- end }}\n\
    \          {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n        \
    \  - name: istiod-ca-cert\n            configMap:\n              name: istio-ca-root-cert\n\
    \          {{- end }}\n          {{- if .Values.global.imagePullSecrets }}\n \
    \         imagePullSecrets:\n            {{- range .Values.global.imagePullSecrets\
    \ }}\n            - name: {{ . }}\n            {{- end }}\n          {{- end }}\n\
    \    ---\n    apiVersion: v1\n    kind: Service\n    metadata:\n      annotations:\n\
    \        {{ toJsonMap (omit .Annotations \"kubectl.kubernetes.io/last-applied-configuration\"\
    \ \"gateway.istio.io/name-override\" \"gateway.istio.io/service-account\" \"gateway.istio.io/controller-version\"\
    ) | nindent 4 }}\n      labels:\n        {{ toJsonMap .Labels | nindent 4}}\n\
    \      name: {{.DeploymentName | quote}}\n      namespace: {{.Namespace | quote}}\n\
    \      ownerReferences:\n      - apiVersion: gateway.networking.k8s.io/v1beta1\n\
    \        kind: Gateway\n        name: {{.Name}}\n        uid: {{.UID}}\n    spec:\n\
    \      ports:\n      {{- range $key, $val := .Ports }}\n      - name: {{ $val.Name\
    \ | quote }}\n        port: {{ $val.Port }}\n        protocol: TCP\n        appProtocol:\
    \ {{ $val.AppProtocol }}\n      {{- end }}\n      selector:\n        istio.io/gateway-name:\
    \ {{.Name}}\n      {{- if and (.Spec.Addresses) (eq .ServiceType \"LoadBalancer\"\
    ) }}\n      loadBalancerIP: {{ (index .Spec.Addresses 0).Value | quote}}\n   \
    \   {{- end }}\n      type: {{ .ServiceType | quote }}\n    ---"
  values: "{\n  \"global\": {\n    \"autoscalingv2API\": true,\n    \"caAddress\"\
    : \"\",\n    \"caName\": \"\",\n    \"certSigners\": [],\n    \"configCluster\"\
    : false,\n    \"configValidation\": true,\n    \"defaultNodeSelector\": {},\n\
    \    \"defaultPodDisruptionBudget\": {\n      \"enabled\": true\n    },\n    \"\
    defaultResources\": {\n      \"requests\": {\n        \"cpu\": \"10m\"\n     \
    \ }\n    },\n    \"enabled\": true,\n    \"externalIstiod\": false,\n    \"hub\"\
    : \"docker.io/istio\",\n    \"imagePullPolicy\": \"\",\n    \"imagePullSecrets\"\
    : [],\n    \"istioNamespace\": \"istio-system\",\n    \"istiod\": {\n      \"\
    enableAnalysis\": false\n    },\n    \"jwtPolicy\": \"third-party-jwt\",\n   \
    \ \"logAsJson\": false,\n    \"logging\": {\n      \"level\": \"default:info\"\
    \n    },\n    \"meshID\": \"\",\n    \"meshNetworks\": {},\n    \"mountMtlsCerts\"\
    : false,\n    \"multiCluster\": {\n      \"clusterName\": \"\",\n      \"enabled\"\
    : false\n    },\n    \"namespace\": \"istio-system\",\n    \"network\": \"\",\n\
    \    \"omitSidecarInjectorConfigMap\": false,\n    \"oneNamespace\": false,\n\
    \    \"operatorManageWebhooks\": false,\n    \"pilotCertProvider\": \"istiod\"\
    ,\n    \"priorityClassName\": \"\",\n    \"proxy\": {\n      \"autoInject\": \"\
    enabled\",\n      \"clusterDomain\": \"cluster.local\",\n      \"componentLogLevel\"\
    : \"misc:error\",\n      \"enableCoreDump\": false,\n      \"excludeIPRanges\"\
    : \"\",\n      \"excludeInboundPorts\": \"\",\n      \"excludeOutboundPorts\"\
    : \"\",\n      \"image\": \"proxyv2\",\n      \"includeIPRanges\": \"*\",\n  \
    \    \"includeInboundPorts\": \"*\",\n      \"includeOutboundPorts\": \"\",\n\
    \      \"logLevel\": \"warning\",\n      \"privileged\": false,\n      \"readinessFailureThreshold\"\
    : 4,\n      \"readinessInitialDelaySeconds\": 0,\n      \"readinessPeriodSeconds\"\
    : 15,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\"\
    ,\n          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n   \
    \       \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n     \
    \ },\n      \"startupProbe\": {\n        \"enabled\": true,\n        \"failureThreshold\"\
    : 600\n      },\n      \"statusPort\": 15020,\n      \"tracer\": \"zipkin\"\n\
    \    },\n    \"proxy_init\": {\n      \"image\": \"proxyv2\"\n    },\n    \"remotePilotAddress\"\
    : \"\",\n    \"sds\": {\n      \"token\": {\n        \"aud\": \"istio-ca\"\n \
    \     }\n    },\n    \"sts\": {\n      \"servicePort\": 0\n    },\n    \"tag\"\
    : \"1.20.0\",\n    \"tracer\": {\n      \"datadog\": {},\n      \"lightstep\"\
    : {},\n      \"stackdriver\": {},\n      \"zipkin\": {}\n    },\n    \"useMCP\"\
    : false,\n    \"variant\": \"\"\n  },\n  \"istio_cni\": {\n    \"chained\": true,\n\
    \    \"enabled\": false\n  },\n  \"revision\": \"\",\n  \"sidecarInjectorWebhook\"\
    : {\n    \"alwaysInjectSelector\": [],\n    \"defaultTemplates\": [],\n    \"\
    enableNamespacesByDefault\": false,\n    \"injectedAnnotations\": {},\n    \"\
    neverInjectSelector\": [],\n    \"reinvocationPolicy\": \"Never\",\n    \"rewriteAppHTTPProbe\"\
    : true,\n    \"templates\": {}\n  }\n}"
kind: ConfigMap
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istio-sidecar-injector
  namespace: istio-system
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app: sidecar-injector
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istio-sidecar-injector
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
    failurePolicy: Fail
    name: rev.namespace.sidecar-injector.istio.io
    namespaceSelector:
      matchExpressions:
        - key: istio.io/rev
          operator: In
          values:
            - default
        - key: istio-injection
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: NotIn
          values:
            - 'false'
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
    failurePolicy: Fail
    name: rev.object.sidecar-injector.istio.io
    namespaceSelector:
      matchExpressions:
        - key: istio.io/rev
          operator: DoesNotExist
        - key: istio-injection
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: NotIn
          values:
            - 'false'
        - key: istio.io/rev
          operator: In
          values:
            - default
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
    failurePolicy: Fail
    name: namespace.sidecar-injector.istio.io
    namespaceSelector:
      matchExpressions:
        - key: istio-injection
          operator: In
          values:
            - enabled
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: NotIn
          values:
            - 'false'
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: istiod
        namespace: istio-system
        path: /inject
        port: 443
    failurePolicy: Fail
    name: object.sidecar-injector.istio.io
    namespaceSelector:
      matchExpressions:
        - key: istio-injection
          operator: DoesNotExist
        - key: istio.io/rev
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: sidecar.istio.io/inject
          operator: In
          values:
            - 'true'
        - key: istio.io/rev
          operator: DoesNotExist
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        istio.io/rev: default
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: '15020'
        prometheus.io/scrape: 'true'
        sidecar.istio.io/inject: 'false'
      labels:
        app: istio-ingressgateway
        chart: gateways
        heritage: Tiller
        install.operator.istio.io/owning-resource: unknown
        istio: ingressgateway
        istio.io/rev: default
        operator.istio.io/component: IngressGateways
        release: istio
        service.istio.io/canonical-name: istio-ingressgateway
        service.istio.io/canonical-revision: latest
        sidecar.istio.io/inject: 'false'
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: null
          requiredDuringSchedulingIgnoredDuringExecution: null
      containers:
        - args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
          env:
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ISTIO_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_WORKLOAD_NAME
              value: istio-ingressgateway
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_META_UNPRIVILEGED_POD
              value: 'true'
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
            - name: ISTIO_META_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: docker.io/istio/proxyv2:1.20.0
          name: istio-proxy
          ports:
            - containerPort: 15021
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /var/run/secrets/workload-spiffe-uds
              name: workload-socket
            - mountPath: /var/run/secrets/credential-uds
              name: credential-socket
            - mountPath: /var/run/secrets/workload-spiffe-credentials
              name: workload-certs
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /etc/istio/config
              name: config-volume
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /var/run/secrets/tokens
              name: istio-token
              readOnly: true
            - mountPath: /var/lib/istio/data
              name: istio-data
            - mountPath: /etc/istio/pod
              name: podinfo
            - mountPath: /etc/istio/ingressgateway-certs
              name: ingressgateway-certs
              readOnly: true
            - mountPath: /etc/istio/ingressgateway-ca-certs
              name: ingressgateway-ca-certs
              readOnly: true
      securityContext:
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      serviceAccountName: istio-ingressgateway-service-account
      volumes:
        - emptyDir: {}
          name: workload-socket
        - emptyDir: {}
          name: credential-socket
        - emptyDir: {}
          name: workload-certs
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
              - fieldRef:
                  fieldPath: metadata.annotations
                path: annotations
          name: podinfo
        - emptyDir: {}
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - configMap:
            name: istio
            optional: true
          name: config-volume
        - name: ingressgateway-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-certs
        - name: ingressgateway-ca-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-ca-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istiod
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istiod
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: pilot
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        ambient.istio.io/redirection: disabled
        prometheus.io/port: '15014'
        prometheus.io/scrape: 'true'
        sidecar.istio.io/inject: 'false'
      labels:
        app: istiod
        install.operator.istio.io/owning-resource: unknown
        istio: pilot
        istio.io/rev: default
        operator.istio.io/component: Pilot
        sidecar.istio.io/inject: 'false'
    spec:
      containers:
        - args:
            - discovery
            - --monitoringAddr=:15014
            - --log_output_level=default:info
            - --domain
            - cluster.local
            - --keepaliveMaxServerConnectionAge
            - 30m
          env:
            - name: REVISION
              value: default
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: KUBECONFIG
              value: /var/run/secrets/remote/config
            - name: PILOT_TRACE_SAMPLING
              value: '1'
            - name: PILOT_ENABLE_ANALYSIS
              value: 'false'
            - name: CLUSTER_ID
              value: Kubernetes
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: PLATFORM
              value: ''
          image: docker.io/istio/pilot:1.20.0
          name: discovery
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 15010
              protocol: TCP
            - containerPort: 15017
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 3
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2048Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /var/run/secrets/tokens
              name: istio-token
              readOnly: true
            - mountPath: /var/run/secrets/istio-dns
              name: local-certs
            - mountPath: /etc/cacerts
              name: cacerts
              readOnly: true
            - mountPath: /var/run/secrets/remote
              name: istio-kubeconfig
              readOnly: true
            - mountPath: /var/run/secrets/istiod/tls
              name: istio-csr-dns-cert
              readOnly: true
            - mountPath: /var/run/secrets/istiod/ca
              name: istio-csr-ca-configmap
              readOnly: true
      serviceAccountName: istiod
      volumes:
        - emptyDir:
            medium: Memory
          name: local-certs
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - name: cacerts
          secret:
            optional: true
            secretName: cacerts
        - name: istio-kubeconfig
          secret:
            optional: true
            secretName: istio-kubeconfig
        - name: istio-csr-dns-cert
          secret:
            optional: true
            secretName: istiod-tls
        - configMap:
            defaultMode: 420
            name: istio-ca-root-cert
            optional: true
          name: istio-csr-ca-configmap
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: istiod
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istiod
  namespace: istio-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istiod
      istio: pilot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway-sds
  namespace: istio-system
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod
  namespace: istio-system
rules:
  - apiGroups:
      - networking.istio.io
    resources:
      - gateways
    verbs:
      - create
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - create
      - get
      - watch
      - list
      - update
      - delete
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - update
      - patch
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway-sds
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway-sds
subjects:
  - kind: ServiceAccount
    name: istio-ingressgateway-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istiod
    release: istio
  name: istiod
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiod
subjects:
  - kind: ServiceAccount
    name: istiod
    namespace: istio-system
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istiod
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istiod
  namespace: istio-system
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istiod
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  ports:
    - name: status-port
      port: 15021
      protocol: TCP
      targetPort: 15021
    - name: http2
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istiod
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  name: istiod
  namespace: istio-system
spec:
  ports:
    - name: grpc-xds
      port: 15010
      protocol: TCP
    - name: https-dns
      port: 15012
      protocol: TCP
    - name: https-webhook
      port: 443
      protocol: TCP
      targetPort: 15017
    - name: http-monitoring
      port: 15014
      protocol: TCP
  selector:
    app: istiod
    istio: pilot
